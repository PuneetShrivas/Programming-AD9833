
Programming-AD9833.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000092c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  0000092c  000009c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00800064  00800064  000009c4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000a30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001014  00000000  00000000  00000aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000745  00000000  00000000  00001abc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000502  00000000  00000000  00002201  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000014c  00000000  00000000  00002704  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000517  00000000  00000000  00002850  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007e6  00000000  00000000  00002d67  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  0000354d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2b 00 	jmp	0x56	; 0x56 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 62 02 	jmp	0x4c4	; 0x4c4 <__vector_9>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 a3 02 	jmp	0x546	; 0x546 <__vector_12>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

00000054 <__ctors_start>:
  54:	a4 02       	muls	r26, r20

00000056 <__ctors_end>:
  56:	11 24       	eor	r1, r1
  58:	1f be       	out	0x3f, r1	; 63
  5a:	cf e5       	ldi	r28, 0x5F	; 95
  5c:	d8 e0       	ldi	r29, 0x08	; 8
  5e:	de bf       	out	0x3e, r29	; 62
  60:	cd bf       	out	0x3d, r28	; 61

00000062 <__do_copy_data>:
  62:	10 e0       	ldi	r17, 0x00	; 0
  64:	a0 e6       	ldi	r26, 0x60	; 96
  66:	b0 e0       	ldi	r27, 0x00	; 0
  68:	ec e2       	ldi	r30, 0x2C	; 44
  6a:	f9 e0       	ldi	r31, 0x09	; 9
  6c:	02 c0       	rjmp	.+4      	; 0x72 <__do_copy_data+0x10>
  6e:	05 90       	lpm	r0, Z+
  70:	0d 92       	st	X+, r0
  72:	a4 36       	cpi	r26, 0x64	; 100
  74:	b1 07       	cpc	r27, r17
  76:	d9 f7       	brne	.-10     	; 0x6e <__do_copy_data+0xc>

00000078 <__do_clear_bss>:
  78:	20 e0       	ldi	r18, 0x00	; 0
  7a:	a4 e6       	ldi	r26, 0x64	; 100
  7c:	b0 e0       	ldi	r27, 0x00	; 0
  7e:	01 c0       	rjmp	.+2      	; 0x82 <.do_clear_bss_start>

00000080 <.do_clear_bss_loop>:
  80:	1d 92       	st	X+, r1

00000082 <.do_clear_bss_start>:
  82:	ae 36       	cpi	r26, 0x6E	; 110
  84:	b2 07       	cpc	r27, r18
  86:	e1 f7       	brne	.-8      	; 0x80 <.do_clear_bss_loop>

00000088 <__do_global_ctors>:
  88:	10 e0       	ldi	r17, 0x00	; 0
  8a:	cb e2       	ldi	r28, 0x2B	; 43
  8c:	d0 e0       	ldi	r29, 0x00	; 0
  8e:	04 c0       	rjmp	.+8      	; 0x98 <__do_global_ctors+0x10>
  90:	21 97       	sbiw	r28, 0x01	; 1
  92:	fe 01       	movw	r30, r28
  94:	0e 94 8e 04 	call	0x91c	; 0x91c <__tablejump2__>
  98:	ca 32       	cpi	r28, 0x2A	; 42
  9a:	d1 07       	cpc	r29, r17
  9c:	c9 f7       	brne	.-14     	; 0x90 <__do_global_ctors+0x8>
  9e:	0e 94 b5 00 	call	0x16a	; 0x16a <main>
  a2:	0c 94 94 04 	jmp	0x928	; 0x928 <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <_Z8SPI_initv>:
	unsigned char MSdata = ((data>>8) & 0x00FF);  	//filter out MS
	unsigned char LSdata = (data & 0x00FF);			//filter out LS
	UART_send(MSdata);
	UART_send(LSdata);
	
}
  aa:	81 ea       	ldi	r24, 0xA1	; 161
  ac:	87 bb       	out	0x17, r24	; 23
  ae:	81 e1       	ldi	r24, 0x11	; 17
  b0:	88 bb       	out	0x18, r24	; 24
  b2:	89 ed       	ldi	r24, 0xD9	; 217
  b4:	8d b9       	out	0x0d, r24	; 13
  b6:	08 95       	ret

000000b8 <_Z9UART_initv>:
  b8:	10 bc       	out	0x20, r1	; 32
  ba:	8f e5       	ldi	r24, 0x5F	; 95
  bc:	89 b9       	out	0x09, r24	; 9
  be:	88 e1       	ldi	r24, 0x18	; 24
  c0:	8a b9       	out	0x0a, r24	; 10
  c2:	8e e8       	ldi	r24, 0x8E	; 142
  c4:	80 bd       	out	0x20, r24	; 32
  c6:	08 95       	ret

000000c8 <_Z12SPI_transferh>:
  c8:	8f b9       	out	0x0f, r24	; 15
  ca:	77 9b       	sbis	0x0e, 7	; 14
  cc:	fe cf       	rjmp	.-4      	; 0xca <_Z12SPI_transferh+0x2>
  ce:	08 95       	ret

000000d0 <_Z11SPI_write16t>:

void SPI_write16 (unsigned short data)    			//send a 16bit word and use f sync
{  
  d0:	cf 93       	push	r28
  d2:	c8 2f       	mov	r28, r24
	unsigned char MSdata = ((data>>8) & 0x00FF);  	//filter out MS
	unsigned char LSdata = (data & 0x00FF);			//filter out LS
	PORTB &= ~(1<<PINB0);						    //F sync Low --> begin frame
  d4:	c0 98       	cbi	0x18, 0	; 24
	SPI_transfer(MSdata);							
  d6:	89 2f       	mov	r24, r25
  d8:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z12SPI_transferh>
	SPI_transfer(LSdata);
  dc:	8c 2f       	mov	r24, r28
  de:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z12SPI_transferh>
	PORTB |= (1<<PINB0);						    //F sync High --> End of frame
  e2:	c0 9a       	sbi	0x18, 0	; 24
}
  e4:	cf 91       	pop	r28
  e6:	08 95       	ret

000000e8 <_Z10Set_AD9833f>:

void Set_AD9833(float frequency)
{
  e8:	cf 92       	push	r12
  ea:	df 92       	push	r13
  ec:	ef 92       	push	r14
  ee:	ff 92       	push	r15
  f0:	cf 93       	push	r28
  f2:	df 93       	push	r29
	long FreqReg = (frequency*pow(2,28))/(float)Fmclk;	  //Calculate frequency to be sent to AD9833
  f4:	20 e0       	ldi	r18, 0x00	; 0
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	40 e8       	ldi	r20, 0x80	; 128
  fa:	5d e4       	ldi	r21, 0x4D	; 77
  fc:	0e 94 21 04 	call	0x842	; 0x842 <__mulsf3>
 100:	20 e2       	ldi	r18, 0x20	; 32
 102:	3c eb       	ldi	r19, 0xBC	; 188
 104:	4e eb       	ldi	r20, 0xBE	; 190
 106:	5b e4       	ldi	r21, 0x4B	; 75
 108:	0e 94 28 03 	call	0x650	; 0x650 <__divsf3>
 10c:	0e 94 9a 03 	call	0x734	; 0x734 <__fixsfsi>
	int MSB = (int)((FreqReg &  0xFFFC000) >> 14);		  //Extract first 14 bits of FreqReg and place them at last 14 bits of MSB
 110:	6b 01       	movw	r12, r22
 112:	7c 01       	movw	r14, r24
 114:	cc 24       	eor	r12, r12
 116:	20 ec       	ldi	r18, 0xC0	; 192
 118:	d2 22       	and	r13, r18
 11a:	2f e0       	ldi	r18, 0x0F	; 15
 11c:	f2 22       	and	r15, r18
 11e:	0b 2e       	mov	r0, r27
 120:	be e0       	ldi	r27, 0x0E	; 14
 122:	f5 94       	asr	r15
 124:	e7 94       	ror	r14
 126:	d7 94       	ror	r13
 128:	c7 94       	ror	r12
 12a:	ba 95       	dec	r27
 12c:	d1 f7       	brne	.-12     	; 0x122 <_Z10Set_AD9833f+0x3a>
 12e:	b0 2d       	mov	r27, r0
	int LSB = (int)((FreqReg & 0x3FFF));				  //Extract last 14 bits of FreqReg and place them at last 14 bits of MSB	
 130:	eb 01       	movw	r28, r22
 132:	df 73       	andi	r29, 0x3F	; 63
	MSB|=0x4000;										  //Set D14,D15 = (1,0) for using FREQ0 registers, MSB has all 16 bits set
	LSB|=0x4000;     									  //Set D14,D15 = (1,0) for using FREQ0 registers, LSB has all 16 bits set
	SPI_write16(0x2100);								  //define waveform and set reset bit
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	91 e2       	ldi	r25, 0x21	; 33
 138:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z11SPI_write16t>
	SPI_write16(LSB);									  //Write LSBs
 13c:	ce 01       	movw	r24, r28
 13e:	90 64       	ori	r25, 0x40	; 64
 140:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z11SPI_write16t>
	SPI_write16(MSB);									  //Write MSBs
 144:	c6 01       	movw	r24, r12
 146:	90 64       	ori	r25, 0x40	; 64
 148:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z11SPI_write16t>
	SPI_write16(0xC000);								  //Mode selection for writing to phase register bit, selection of PHASE0 register (Needs to be fixed)
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	90 ec       	ldi	r25, 0xC0	; 192
 150:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z11SPI_write16t>
	SPI_write16(0x2000);                                                                                                                                                                                                                                                                                             
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	90 e2       	ldi	r25, 0x20	; 32
 158:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z11SPI_write16t>
}
 15c:	df 91       	pop	r29
 15e:	cf 91       	pop	r28
 160:	ff 90       	pop	r15
 162:	ef 90       	pop	r14
 164:	df 90       	pop	r13
 166:	cf 90       	pop	r12
 168:	08 95       	ret

0000016a <main>:

int main(void)
{
	UART_init();
 16a:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9UART_initv>
	SPI_init();
 16e:	0e 94 55 00 	call	0xaa	; 0xaa <_Z8SPI_initv>
	
	DDRA=(1<<PINA0)|(1<<PINA1)|(1<<PINA2);			//output pins for LEDs
 172:	87 e0       	ldi	r24, 0x07	; 7
 174:	8a bb       	out	0x1a, r24	; 26
	TCCR1A=0;
 176:	1f bc       	out	0x2f, r1	; 47
	//frequency calculation and documented values
	float freqY  =  1500 + (Y * 3.1372549);			//1757.2549(red)	1954.90196(green)	1628.62745(blue)	
	float freqRY =  1500 + (RY * 3.1372549);		//2252.94118(red)  1606.66667(green)	1845.09804(blue)
	float freqBY =  1500 + (BY * 3.1372549);		//1782.35294(red)	1669.41177(green)	2252.94118(blue)|
	
	SPI_write16(0x100);								//Reset AD9833 
 178:	80 e0       	ldi	r24, 0x00	; 0
 17a:	91 e0       	ldi	r25, 0x01	; 1
 17c:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z11SPI_write16t>
	
	//VIS Code
	{//leader tone
	Set_AD9833(1900);
 180:	60 e0       	ldi	r22, 0x00	; 0
 182:	70 e8       	ldi	r23, 0x80	; 128
 184:	8d ee       	ldi	r24, 0xED	; 237
 186:	94 e4       	ldi	r25, 0x44	; 68
 188:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 18c:	2f ef       	ldi	r18, 0xFF	; 255
 18e:	8f e7       	ldi	r24, 0x7F	; 127
 190:	9d e0       	ldi	r25, 0x0D	; 13
 192:	21 50       	subi	r18, 0x01	; 1
 194:	80 40       	sbci	r24, 0x00	; 0
 196:	90 40       	sbci	r25, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0x28>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0x32>
 19c:	00 00       	nop
	_delay_ms(300);
	//break
	Set_AD9833(1200);
 19e:	60 e0       	ldi	r22, 0x00	; 0
 1a0:	70 e0       	ldi	r23, 0x00	; 0
 1a2:	86 e9       	ldi	r24, 0x96	; 150
 1a4:	94 e4       	ldi	r25, 0x44	; 68
 1a6:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
 1aa:	8f ef       	ldi	r24, 0xFF	; 255
 1ac:	9f e8       	ldi	r25, 0x8F	; 143
 1ae:	01 97       	sbiw	r24, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <main+0x44>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <main+0x4a>
 1b4:	00 00       	nop
	_delay_ms(10);
	//leader
	Set_AD9833(1900);
 1b6:	60 e0       	ldi	r22, 0x00	; 0
 1b8:	70 e8       	ldi	r23, 0x80	; 128
 1ba:	8d ee       	ldi	r24, 0xED	; 237
 1bc:	94 e4       	ldi	r25, 0x44	; 68
 1be:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
 1c2:	9f ef       	ldi	r25, 0xFF	; 255
 1c4:	2f e7       	ldi	r18, 0x7F	; 127
 1c6:	8d e0       	ldi	r24, 0x0D	; 13
 1c8:	91 50       	subi	r25, 0x01	; 1
 1ca:	20 40       	sbci	r18, 0x00	; 0
 1cc:	80 40       	sbci	r24, 0x00	; 0
 1ce:	e1 f7       	brne	.-8      	; 0x1c8 <main+0x5e>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <main+0x68>
 1d2:	00 00       	nop
	_delay_ms(300);
	//VIS start bit
	Set_AD9833(1200);
 1d4:	60 e0       	ldi	r22, 0x00	; 0
 1d6:	70 e0       	ldi	r23, 0x00	; 0
 1d8:	86 e9       	ldi	r24, 0x96	; 150
 1da:	94 e4       	ldi	r25, 0x44	; 68
 1dc:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
 1e0:	99 e9       	ldi	r25, 0x99	; 153
 1e2:	29 e5       	ldi	r18, 0x59	; 89
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	91 50       	subi	r25, 0x01	; 1
 1e8:	20 40       	sbci	r18, 0x00	; 0
 1ea:	80 40       	sbci	r24, 0x00	; 0
 1ec:	e1 f7       	brne	.-8      	; 0x1e6 <main+0x7c>
 1ee:	00 00       	nop
	_delay_ms(30);
	//PD90 VIS code = 99d = 0b1100011
	//bit 0=1
	Set_AD9833(1100);
 1f0:	60 e0       	ldi	r22, 0x00	; 0
 1f2:	70 e8       	ldi	r23, 0x80	; 128
 1f4:	89 e8       	ldi	r24, 0x89	; 137
 1f6:	94 e4       	ldi	r25, 0x44	; 68
 1f8:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
 1fc:	99 e9       	ldi	r25, 0x99	; 153
 1fe:	29 e5       	ldi	r18, 0x59	; 89
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	91 50       	subi	r25, 0x01	; 1
 204:	20 40       	sbci	r18, 0x00	; 0
 206:	80 40       	sbci	r24, 0x00	; 0
 208:	e1 f7       	brne	.-8      	; 0x202 <main+0x98>
 20a:	00 00       	nop
	_delay_ms(30);
	//bit 1=1
	Set_AD9833(1100);
 20c:	60 e0       	ldi	r22, 0x00	; 0
 20e:	70 e8       	ldi	r23, 0x80	; 128
 210:	89 e8       	ldi	r24, 0x89	; 137
 212:	94 e4       	ldi	r25, 0x44	; 68
 214:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
 218:	99 e9       	ldi	r25, 0x99	; 153
 21a:	29 e5       	ldi	r18, 0x59	; 89
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	91 50       	subi	r25, 0x01	; 1
 220:	20 40       	sbci	r18, 0x00	; 0
 222:	80 40       	sbci	r24, 0x00	; 0
 224:	e1 f7       	brne	.-8      	; 0x21e <main+0xb4>
 226:	00 00       	nop
	_delay_ms(30);
	//bit 2=0
	Set_AD9833(1300);
 228:	60 e0       	ldi	r22, 0x00	; 0
 22a:	70 e8       	ldi	r23, 0x80	; 128
 22c:	82 ea       	ldi	r24, 0xA2	; 162
 22e:	94 e4       	ldi	r25, 0x44	; 68
 230:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
 234:	99 e9       	ldi	r25, 0x99	; 153
 236:	29 e5       	ldi	r18, 0x59	; 89
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	91 50       	subi	r25, 0x01	; 1
 23c:	20 40       	sbci	r18, 0x00	; 0
 23e:	80 40       	sbci	r24, 0x00	; 0
 240:	e1 f7       	brne	.-8      	; 0x23a <main+0xd0>
 242:	00 00       	nop
	_delay_ms(30);
	//bit 3=0
	Set_AD9833(1300);
 244:	60 e0       	ldi	r22, 0x00	; 0
 246:	70 e8       	ldi	r23, 0x80	; 128
 248:	82 ea       	ldi	r24, 0xA2	; 162
 24a:	94 e4       	ldi	r25, 0x44	; 68
 24c:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
 250:	99 e9       	ldi	r25, 0x99	; 153
 252:	29 e5       	ldi	r18, 0x59	; 89
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	91 50       	subi	r25, 0x01	; 1
 258:	20 40       	sbci	r18, 0x00	; 0
 25a:	80 40       	sbci	r24, 0x00	; 0
 25c:	e1 f7       	brne	.-8      	; 0x256 <main+0xec>
 25e:	00 00       	nop
	_delay_ms(30);
	//bit 4=0
	Set_AD9833(1300);
 260:	60 e0       	ldi	r22, 0x00	; 0
 262:	70 e8       	ldi	r23, 0x80	; 128
 264:	82 ea       	ldi	r24, 0xA2	; 162
 266:	94 e4       	ldi	r25, 0x44	; 68
 268:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
 26c:	99 e9       	ldi	r25, 0x99	; 153
 26e:	29 e5       	ldi	r18, 0x59	; 89
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	91 50       	subi	r25, 0x01	; 1
 274:	20 40       	sbci	r18, 0x00	; 0
 276:	80 40       	sbci	r24, 0x00	; 0
 278:	e1 f7       	brne	.-8      	; 0x272 <main+0x108>
 27a:	00 00       	nop
	_delay_ms(30);
	//bit 5=1
	Set_AD9833(1100);
 27c:	60 e0       	ldi	r22, 0x00	; 0
 27e:	70 e8       	ldi	r23, 0x80	; 128
 280:	89 e8       	ldi	r24, 0x89	; 137
 282:	94 e4       	ldi	r25, 0x44	; 68
 284:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
 288:	99 e9       	ldi	r25, 0x99	; 153
 28a:	29 e5       	ldi	r18, 0x59	; 89
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	91 50       	subi	r25, 0x01	; 1
 290:	20 40       	sbci	r18, 0x00	; 0
 292:	80 40       	sbci	r24, 0x00	; 0
 294:	e1 f7       	brne	.-8      	; 0x28e <main+0x124>
 296:	00 00       	nop
	_delay_ms(30);
	//bit 6=1
	Set_AD9833(1100);
 298:	60 e0       	ldi	r22, 0x00	; 0
 29a:	70 e8       	ldi	r23, 0x80	; 128
 29c:	89 e8       	ldi	r24, 0x89	; 137
 29e:	94 e4       	ldi	r25, 0x44	; 68
 2a0:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
 2a4:	99 e9       	ldi	r25, 0x99	; 153
 2a6:	29 e5       	ldi	r18, 0x59	; 89
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	91 50       	subi	r25, 0x01	; 1
 2ac:	20 40       	sbci	r18, 0x00	; 0
 2ae:	80 40       	sbci	r24, 0x00	; 0
 2b0:	e1 f7       	brne	.-8      	; 0x2aa <main+0x140>
 2b2:	00 00       	nop
	_delay_ms(30);
	//Parity bit
	Set_AD9833(1100);
 2b4:	60 e0       	ldi	r22, 0x00	; 0
 2b6:	70 e8       	ldi	r23, 0x80	; 128
 2b8:	89 e8       	ldi	r24, 0x89	; 137
 2ba:	94 e4       	ldi	r25, 0x44	; 68
 2bc:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
 2c0:	99 e9       	ldi	r25, 0x99	; 153
 2c2:	29 e5       	ldi	r18, 0x59	; 89
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	91 50       	subi	r25, 0x01	; 1
 2c8:	20 40       	sbci	r18, 0x00	; 0
 2ca:	80 40       	sbci	r24, 0x00	; 0
 2cc:	e1 f7       	brne	.-8      	; 0x2c6 <main+0x15c>
 2ce:	00 00       	nop
	_delay_ms(30);
	//stop bit
	Set_AD9833(1200);
 2d0:	60 e0       	ldi	r22, 0x00	; 0
 2d2:	70 e0       	ldi	r23, 0x00	; 0
 2d4:	86 e9       	ldi	r24, 0x96	; 150
 2d6:	94 e4       	ldi	r25, 0x44	; 68
 2d8:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
 2dc:	99 e9       	ldi	r25, 0x99	; 153
 2de:	29 e5       	ldi	r18, 0x59	; 89
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	91 50       	subi	r25, 0x01	; 1
 2e4:	20 40       	sbci	r18, 0x00	; 0
 2e6:	80 40       	sbci	r24, 0x00	; 0
 2e8:	e1 f7       	brne	.-8      	; 0x2e2 <main+0x178>
 2ea:	00 00       	nop
 2ec:	c0 e8       	ldi	r28, 0x80	; 128
 2ee:	d0 e0       	ldi	r29, 0x00	; 0
	//single color using interrupts
	
	{
	//Y Scan odd line
	cont=0;	
	global_frequency=freqY;	
 2f0:	0f 2e       	mov	r0, r31
 2f2:	f7 ea       	ldi	r31, 0xA7	; 167
 2f4:	cf 2e       	mov	r12, r31
 2f6:	f3 e7       	ldi	r31, 0x73	; 115
 2f8:	df 2e       	mov	r13, r31
 2fa:	fb ed       	ldi	r31, 0xDB	; 219
 2fc:	ef 2e       	mov	r14, r31
 2fe:	f4 e4       	ldi	r31, 0x44	; 68
 300:	ff 2e       	mov	r15, r31
 302:	f0 2d       	mov	r31, r0
	sei();
	TCCR1B|=(1<<CS10);	
	TIMSK|=(1<<TOIE1);
	TCNT1=65534;
 304:	0e ef       	ldi	r16, 0xFE	; 254
 306:	1f ef       	ldi	r17, 0xFF	; 255
	cli();
	TIMSK&=~(1<<OCIE1A);
	TCCR1B=0x00;
	//R-Y Scan average
	cont=0;
	global_frequency=freqRY;
 308:	0f 2e       	mov	r0, r31
 30a:	f0 eb       	ldi	r31, 0xB0	; 176
 30c:	4f 2e       	mov	r4, r31
 30e:	fe ec       	ldi	r31, 0xCE	; 206
 310:	5f 2e       	mov	r5, r31
 312:	fc e0       	ldi	r31, 0x0C	; 12
 314:	6f 2e       	mov	r6, r31
 316:	f5 e4       	ldi	r31, 0x45	; 69
 318:	7f 2e       	mov	r7, r31
 31a:	f0 2d       	mov	r31, r0
	cli();
	TIMSK&=~(1<<OCIE1A);
	TCCR1B=0x00;
	//B-Y Scan average
	cont=0;
	global_frequency=freqBY;
 31c:	0f 2e       	mov	r0, r31
 31e:	f0 ef       	ldi	r31, 0xF0	; 240
 320:	8f 2e       	mov	r8, r31
 322:	ff ed       	ldi	r31, 0xDF	; 223
 324:	9f 2e       	mov	r9, r31
 326:	fe ed       	ldi	r31, 0xDE	; 222
 328:	af 2e       	mov	r10, r31
 32a:	f4 e4       	ldi	r31, 0x44	; 68
 32c:	bf 2e       	mov	r11, r31
 32e:	f0 2d       	mov	r31, r0
	
	//image data
	for (int i=1;i<=128;i++)
	{
	//Sync Pulse
	Set_AD9833(1200);
 330:	60 e0       	ldi	r22, 0x00	; 0
 332:	70 e0       	ldi	r23, 0x00	; 0
 334:	86 e9       	ldi	r24, 0x96	; 150
 336:	94 e4       	ldi	r25, 0x44	; 68
 338:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
 33c:	91 ee       	ldi	r25, 0xE1	; 225
 33e:	2a ed       	ldi	r18, 0xDA	; 218
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	91 50       	subi	r25, 0x01	; 1
 344:	20 40       	sbci	r18, 0x00	; 0
 346:	80 40       	sbci	r24, 0x00	; 0
 348:	e1 f7       	brne	.-8      	; 0x342 <main+0x1d8>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 34a:	84 e1       	ldi	r24, 0x14	; 20
 34c:	9c e0       	ldi	r25, 0x0C	; 12
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	f1 f7       	brne	.-4      	; 0x34e <main+0x1e4>
 352:	00 c0       	rjmp	.+0      	; 0x354 <main+0x1ea>
 354:	00 00       	nop
	_delay_ms(19);
	_delay_us(839);
	//Porch
	Set_AD9833(1500);
 356:	60 e0       	ldi	r22, 0x00	; 0
 358:	70 e8       	ldi	r23, 0x80	; 128
 35a:	8b eb       	ldi	r24, 0xBB	; 187
 35c:	94 e4       	ldi	r25, 0x44	; 68
 35e:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 362:	86 e6       	ldi	r24, 0x66	; 102
 364:	9e e0       	ldi	r25, 0x0E	; 14
 366:	01 97       	sbiw	r24, 0x01	; 1
 368:	f1 f7       	brne	.-4      	; 0x366 <main+0x1fc>
 36a:	00 00       	nop
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 36c:	8f e3       	ldi	r24, 0x3F	; 63
 36e:	9d e0       	ldi	r25, 0x0D	; 13
 370:	01 97       	sbiw	r24, 0x01	; 1
 372:	f1 f7       	brne	.-4      	; 0x370 <main+0x206>
 374:	00 00       	nop
	
	//single color using interrupts
	
	{
	//Y Scan odd line
	cont=0;	
 376:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__data_end+0x1>
 37a:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__data_end>
	global_frequency=freqY;	
 37e:	c0 92 66 00 	sts	0x0066, r12	; 0x800066 <global_frequency>
 382:	d0 92 67 00 	sts	0x0067, r13	; 0x800067 <global_frequency+0x1>
 386:	e0 92 68 00 	sts	0x0068, r14	; 0x800068 <global_frequency+0x2>
 38a:	f0 92 69 00 	sts	0x0069, r15	; 0x800069 <global_frequency+0x3>
	sei();
 38e:	78 94       	sei
	TCCR1B|=(1<<CS10);	
 390:	8e b5       	in	r24, 0x2e	; 46
 392:	81 60       	ori	r24, 0x01	; 1
 394:	8e bd       	out	0x2e, r24	; 46
	TIMSK|=(1<<TOIE1);
 396:	89 b7       	in	r24, 0x39	; 57
 398:	84 60       	ori	r24, 0x04	; 4
 39a:	89 bf       	out	0x39, r24	; 57
	TCNT1=65534;
 39c:	1d bd       	out	0x2d, r17	; 45
 39e:	0c bd       	out	0x2c, r16	; 44
	while (cont<1);
 3a0:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
 3a4:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__data_end+0x1>
 3a8:	18 16       	cp	r1, r24
 3aa:	19 06       	cpc	r1, r25
 3ac:	cc f7       	brge	.-14     	; 0x3a0 <main+0x236>
	cli();
 3ae:	f8 94       	cli
	TIMSK&=~(1<<OCIE1A);
 3b0:	89 b7       	in	r24, 0x39	; 57
 3b2:	8f 7e       	andi	r24, 0xEF	; 239
 3b4:	89 bf       	out	0x39, r24	; 57
	TCCR1B=0x00;
 3b6:	1e bc       	out	0x2e, r1	; 46
	//R-Y Scan average
	cont=0;
 3b8:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__data_end+0x1>
 3bc:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__data_end>
	global_frequency=freqRY;
 3c0:	40 92 66 00 	sts	0x0066, r4	; 0x800066 <global_frequency>
 3c4:	50 92 67 00 	sts	0x0067, r5	; 0x800067 <global_frequency+0x1>
 3c8:	60 92 68 00 	sts	0x0068, r6	; 0x800068 <global_frequency+0x2>
 3cc:	70 92 69 00 	sts	0x0069, r7	; 0x800069 <global_frequency+0x3>
	sei();
 3d0:	78 94       	sei
	TCCR1B|=(1<<CS10);
 3d2:	8e b5       	in	r24, 0x2e	; 46
 3d4:	81 60       	ori	r24, 0x01	; 1
 3d6:	8e bd       	out	0x2e, r24	; 46
	TIMSK|=(1<<TOIE1);
 3d8:	89 b7       	in	r24, 0x39	; 57
 3da:	84 60       	ori	r24, 0x04	; 4
 3dc:	89 bf       	out	0x39, r24	; 57
	TCNT1=TICKS;
 3de:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <TICKS>
 3e2:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <TICKS+0x1>
 3e6:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <TICKS+0x2>
 3ea:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <TICKS+0x3>
 3ee:	0e 94 a1 03 	call	0x742	; 0x742 <__fixunssfsi>
 3f2:	7d bd       	out	0x2d, r23	; 45
 3f4:	6c bd       	out	0x2c, r22	; 44
	while (cont<1);
 3f6:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
 3fa:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__data_end+0x1>
 3fe:	18 16       	cp	r1, r24
 400:	19 06       	cpc	r1, r25
 402:	cc f7       	brge	.-14     	; 0x3f6 <main+0x28c>
	cli();
 404:	f8 94       	cli
	TIMSK&=~(1<<OCIE1A);
 406:	89 b7       	in	r24, 0x39	; 57
 408:	8f 7e       	andi	r24, 0xEF	; 239
 40a:	89 bf       	out	0x39, r24	; 57
	TCCR1B=0x00;
 40c:	1e bc       	out	0x2e, r1	; 46
	//B-Y Scan average
	cont=0;
 40e:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__data_end+0x1>
 412:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__data_end>
	global_frequency=freqBY;
 416:	80 92 66 00 	sts	0x0066, r8	; 0x800066 <global_frequency>
 41a:	90 92 67 00 	sts	0x0067, r9	; 0x800067 <global_frequency+0x1>
 41e:	a0 92 68 00 	sts	0x0068, r10	; 0x800068 <global_frequency+0x2>
 422:	b0 92 69 00 	sts	0x0069, r11	; 0x800069 <global_frequency+0x3>
	sei();
 426:	78 94       	sei
	TCCR1B|=(1<<CS10);
 428:	8e b5       	in	r24, 0x2e	; 46
 42a:	81 60       	ori	r24, 0x01	; 1
 42c:	8e bd       	out	0x2e, r24	; 46
	TIMSK|=(1<<TOIE1);
 42e:	89 b7       	in	r24, 0x39	; 57
 430:	84 60       	ori	r24, 0x04	; 4
 432:	89 bf       	out	0x39, r24	; 57
	TCNT1=TICKS;
 434:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <TICKS>
 438:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <TICKS+0x1>
 43c:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <TICKS+0x2>
 440:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <TICKS+0x3>
 444:	0e 94 a1 03 	call	0x742	; 0x742 <__fixunssfsi>
 448:	7d bd       	out	0x2d, r23	; 45
 44a:	6c bd       	out	0x2c, r22	; 44
	while (cont<1);
 44c:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
 450:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__data_end+0x1>
 454:	18 16       	cp	r1, r24
 456:	19 06       	cpc	r1, r25
 458:	cc f7       	brge	.-14     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
	cli();
 45a:	f8 94       	cli
	TIMSK&=~(1<<OCIE1A);
 45c:	89 b7       	in	r24, 0x39	; 57
 45e:	8f 7e       	andi	r24, 0xEF	; 239
 460:	89 bf       	out	0x39, r24	; 57
	TCCR1B=0x00;
 462:	1e bc       	out	0x2e, r1	; 46
	//Y Scan even line
	cont=0; 
 464:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <__data_end+0x1>
 468:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__data_end>
	global_frequency=freqY;
 46c:	c0 92 66 00 	sts	0x0066, r12	; 0x800066 <global_frequency>
 470:	d0 92 67 00 	sts	0x0067, r13	; 0x800067 <global_frequency+0x1>
 474:	e0 92 68 00 	sts	0x0068, r14	; 0x800068 <global_frequency+0x2>
 478:	f0 92 69 00 	sts	0x0069, r15	; 0x800069 <global_frequency+0x3>
	sei();
 47c:	78 94       	sei
	TCCR1B|=(1<<CS10);
 47e:	8e b5       	in	r24, 0x2e	; 46
 480:	81 60       	ori	r24, 0x01	; 1
 482:	8e bd       	out	0x2e, r24	; 46
	TIMSK|=(1<<TOIE1);
 484:	89 b7       	in	r24, 0x39	; 57
 486:	84 60       	ori	r24, 0x04	; 4
 488:	89 bf       	out	0x39, r24	; 57
	TCNT1=TICKS;
 48a:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <TICKS>
 48e:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <TICKS+0x1>
 492:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <TICKS+0x2>
 496:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <TICKS+0x3>
 49a:	0e 94 a1 03 	call	0x742	; 0x742 <__fixunssfsi>
 49e:	7d bd       	out	0x2d, r23	; 45
 4a0:	6c bd       	out	0x2c, r22	; 44
	while (cont<2);
 4a2:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
 4a6:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__data_end+0x1>
 4aa:	02 97       	sbiw	r24, 0x02	; 2
 4ac:	d4 f3       	brlt	.-12     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
	cli();
 4ae:	f8 94       	cli
	TIMSK&=~(1<<OCIE1A);
 4b0:	89 b7       	in	r24, 0x39	; 57
 4b2:	8f 7e       	andi	r24, 0xEF	; 239
 4b4:	89 bf       	out	0x39, r24	; 57
	TCCR1B=0x00;
 4b6:	1e bc       	out	0x2e, r1	; 46
 4b8:	21 97       	sbiw	r28, 0x01	; 1
	Set_AD9833(1200);
	_delay_ms(30);
	}
	
	//image data
	for (int i=1;i<=128;i++)
 4ba:	09 f0       	breq	.+2      	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4bc:	39 cf       	rjmp	.-398    	; 0x330 <main+0x1c6>
// 		//Y Scan even line
// 		Set_AD9833(freqY);
// 		_delay_us(170079.41);
}
}	
	PORTA=0; PORTA|=(1<<PINA0);
 4be:	1b ba       	out	0x1b, r1	; 27
 4c0:	d8 9a       	sbi	0x1b, 0	; 27
 4c2:	ff cf       	rjmp	.-2      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>

000004c4 <__vector_9>:
	}

}

ISR(TIMER1_OVF_vect)
{	
 4c4:	1f 92       	push	r1
 4c6:	0f 92       	push	r0
 4c8:	0f b6       	in	r0, 0x3f	; 63
 4ca:	0f 92       	push	r0
 4cc:	11 24       	eor	r1, r1
 4ce:	2f 93       	push	r18
 4d0:	3f 93       	push	r19
 4d2:	4f 93       	push	r20
 4d4:	5f 93       	push	r21
 4d6:	6f 93       	push	r22
 4d8:	7f 93       	push	r23
 4da:	8f 93       	push	r24
 4dc:	9f 93       	push	r25
 4de:	af 93       	push	r26
 4e0:	bf 93       	push	r27
 4e2:	ef 93       	push	r30
 4e4:	ff 93       	push	r31
	TCNT1=TICKS;
 4e6:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <TICKS>
 4ea:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <TICKS+0x1>
 4ee:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <TICKS+0x2>
 4f2:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <TICKS+0x3>
 4f6:	0e 94 a1 03 	call	0x742	; 0x742 <__fixunssfsi>
 4fa:	7d bd       	out	0x2d, r23	; 45
 4fc:	6c bd       	out	0x2c, r22	; 44
	cont++;
 4fe:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
 502:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__data_end+0x1>
 506:	01 96       	adiw	r24, 0x01	; 1
 508:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__data_end+0x1>
 50c:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__data_end>
	Set_AD9833(global_frequency);
 510:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <global_frequency>
 514:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <global_frequency+0x1>
 518:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <global_frequency+0x2>
 51c:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <global_frequency+0x3>
 520:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833f>
}
 524:	ff 91       	pop	r31
 526:	ef 91       	pop	r30
 528:	bf 91       	pop	r27
 52a:	af 91       	pop	r26
 52c:	9f 91       	pop	r25
 52e:	8f 91       	pop	r24
 530:	7f 91       	pop	r23
 532:	6f 91       	pop	r22
 534:	5f 91       	pop	r21
 536:	4f 91       	pop	r20
 538:	3f 91       	pop	r19
 53a:	2f 91       	pop	r18
 53c:	0f 90       	pop	r0
 53e:	0f be       	out	0x3f, r0	; 63
 540:	0f 90       	pop	r0
 542:	1f 90       	pop	r1
 544:	18 95       	reti

00000546 <__vector_12>:
	
 EMPTY_INTERRUPT(SPI_STC_vect) 
 546:	18 95       	reti

00000548 <_GLOBAL__sub_I_TEMP>:
#include <math.h>
#include <avr/interrupt.h>
#include <util/atomic.h>

double TEMP = ((((F_CPU)/(TIMER1_PRESCALER*1000000))*532)-1);			//Counter Cycles for required time
double TICKS = 65536-TEMP;												//Value for TCNT1 to implement timing by overflow
 548:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <TEMP>
 54c:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <TEMP+0x1>
 550:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <TEMP+0x2>
 554:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <TEMP+0x3>
 558:	60 e0       	ldi	r22, 0x00	; 0
 55a:	70 e0       	ldi	r23, 0x00	; 0
 55c:	80 e8       	ldi	r24, 0x80	; 128
 55e:	97 e4       	ldi	r25, 0x47	; 71
 560:	0e 94 bb 02 	call	0x576	; 0x576 <__subsf3>
 564:	60 93 6a 00 	sts	0x006A, r22	; 0x80006a <TICKS>
 568:	70 93 6b 00 	sts	0x006B, r23	; 0x80006b <TICKS+0x1>
 56c:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <TICKS+0x2>
 570:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <TICKS+0x3>
 574:	08 95       	ret

00000576 <__subsf3>:
 576:	50 58       	subi	r21, 0x80	; 128

00000578 <__addsf3>:
 578:	bb 27       	eor	r27, r27
 57a:	aa 27       	eor	r26, r26
 57c:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <__addsf3x>
 580:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_round>
 584:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__fp_pscA>
 588:	38 f0       	brcs	.+14     	; 0x598 <__addsf3+0x20>
 58a:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__fp_pscB>
 58e:	20 f0       	brcs	.+8      	; 0x598 <__addsf3+0x20>
 590:	39 f4       	brne	.+14     	; 0x5a0 <__addsf3+0x28>
 592:	9f 3f       	cpi	r25, 0xFF	; 255
 594:	19 f4       	brne	.+6      	; 0x59c <__addsf3+0x24>
 596:	26 f4       	brtc	.+8      	; 0x5a0 <__addsf3+0x28>
 598:	0c 94 d6 03 	jmp	0x7ac	; 0x7ac <__fp_nan>
 59c:	0e f4       	brtc	.+2      	; 0x5a0 <__addsf3+0x28>
 59e:	e0 95       	com	r30
 5a0:	e7 fb       	bst	r30, 7
 5a2:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__fp_inf>

000005a6 <__addsf3x>:
 5a6:	e9 2f       	mov	r30, r25
 5a8:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <__fp_split3>
 5ac:	58 f3       	brcs	.-42     	; 0x584 <__addsf3+0xc>
 5ae:	ba 17       	cp	r27, r26
 5b0:	62 07       	cpc	r22, r18
 5b2:	73 07       	cpc	r23, r19
 5b4:	84 07       	cpc	r24, r20
 5b6:	95 07       	cpc	r25, r21
 5b8:	20 f0       	brcs	.+8      	; 0x5c2 <__addsf3x+0x1c>
 5ba:	79 f4       	brne	.+30     	; 0x5da <__addsf3x+0x34>
 5bc:	a6 f5       	brtc	.+104    	; 0x626 <__addsf3x+0x80>
 5be:	0c 94 1a 04 	jmp	0x834	; 0x834 <__fp_zero>
 5c2:	0e f4       	brtc	.+2      	; 0x5c6 <__addsf3x+0x20>
 5c4:	e0 95       	com	r30
 5c6:	0b 2e       	mov	r0, r27
 5c8:	ba 2f       	mov	r27, r26
 5ca:	a0 2d       	mov	r26, r0
 5cc:	0b 01       	movw	r0, r22
 5ce:	b9 01       	movw	r22, r18
 5d0:	90 01       	movw	r18, r0
 5d2:	0c 01       	movw	r0, r24
 5d4:	ca 01       	movw	r24, r20
 5d6:	a0 01       	movw	r20, r0
 5d8:	11 24       	eor	r1, r1
 5da:	ff 27       	eor	r31, r31
 5dc:	59 1b       	sub	r21, r25
 5de:	99 f0       	breq	.+38     	; 0x606 <__addsf3x+0x60>
 5e0:	59 3f       	cpi	r21, 0xF9	; 249
 5e2:	50 f4       	brcc	.+20     	; 0x5f8 <__addsf3x+0x52>
 5e4:	50 3e       	cpi	r21, 0xE0	; 224
 5e6:	68 f1       	brcs	.+90     	; 0x642 <__addsf3x+0x9c>
 5e8:	1a 16       	cp	r1, r26
 5ea:	f0 40       	sbci	r31, 0x00	; 0
 5ec:	a2 2f       	mov	r26, r18
 5ee:	23 2f       	mov	r18, r19
 5f0:	34 2f       	mov	r19, r20
 5f2:	44 27       	eor	r20, r20
 5f4:	58 5f       	subi	r21, 0xF8	; 248
 5f6:	f3 cf       	rjmp	.-26     	; 0x5de <__addsf3x+0x38>
 5f8:	46 95       	lsr	r20
 5fa:	37 95       	ror	r19
 5fc:	27 95       	ror	r18
 5fe:	a7 95       	ror	r26
 600:	f0 40       	sbci	r31, 0x00	; 0
 602:	53 95       	inc	r21
 604:	c9 f7       	brne	.-14     	; 0x5f8 <__addsf3x+0x52>
 606:	7e f4       	brtc	.+30     	; 0x626 <__addsf3x+0x80>
 608:	1f 16       	cp	r1, r31
 60a:	ba 0b       	sbc	r27, r26
 60c:	62 0b       	sbc	r22, r18
 60e:	73 0b       	sbc	r23, r19
 610:	84 0b       	sbc	r24, r20
 612:	ba f0       	brmi	.+46     	; 0x642 <__addsf3x+0x9c>
 614:	91 50       	subi	r25, 0x01	; 1
 616:	a1 f0       	breq	.+40     	; 0x640 <__addsf3x+0x9a>
 618:	ff 0f       	add	r31, r31
 61a:	bb 1f       	adc	r27, r27
 61c:	66 1f       	adc	r22, r22
 61e:	77 1f       	adc	r23, r23
 620:	88 1f       	adc	r24, r24
 622:	c2 f7       	brpl	.-16     	; 0x614 <__addsf3x+0x6e>
 624:	0e c0       	rjmp	.+28     	; 0x642 <__addsf3x+0x9c>
 626:	ba 0f       	add	r27, r26
 628:	62 1f       	adc	r22, r18
 62a:	73 1f       	adc	r23, r19
 62c:	84 1f       	adc	r24, r20
 62e:	48 f4       	brcc	.+18     	; 0x642 <__addsf3x+0x9c>
 630:	87 95       	ror	r24
 632:	77 95       	ror	r23
 634:	67 95       	ror	r22
 636:	b7 95       	ror	r27
 638:	f7 95       	ror	r31
 63a:	9e 3f       	cpi	r25, 0xFE	; 254
 63c:	08 f0       	brcs	.+2      	; 0x640 <__addsf3x+0x9a>
 63e:	b0 cf       	rjmp	.-160    	; 0x5a0 <__addsf3+0x28>
 640:	93 95       	inc	r25
 642:	88 0f       	add	r24, r24
 644:	08 f0       	brcs	.+2      	; 0x648 <__addsf3x+0xa2>
 646:	99 27       	eor	r25, r25
 648:	ee 0f       	add	r30, r30
 64a:	97 95       	ror	r25
 64c:	87 95       	ror	r24
 64e:	08 95       	ret

00000650 <__divsf3>:
 650:	0e 94 3c 03 	call	0x678	; 0x678 <__divsf3x>
 654:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_round>
 658:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__fp_pscB>
 65c:	58 f0       	brcs	.+22     	; 0x674 <__divsf3+0x24>
 65e:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__fp_pscA>
 662:	40 f0       	brcs	.+16     	; 0x674 <__divsf3+0x24>
 664:	29 f4       	brne	.+10     	; 0x670 <__divsf3+0x20>
 666:	5f 3f       	cpi	r21, 0xFF	; 255
 668:	29 f0       	breq	.+10     	; 0x674 <__divsf3+0x24>
 66a:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__fp_inf>
 66e:	51 11       	cpse	r21, r1
 670:	0c 94 1b 04 	jmp	0x836	; 0x836 <__fp_szero>
 674:	0c 94 d6 03 	jmp	0x7ac	; 0x7ac <__fp_nan>

00000678 <__divsf3x>:
 678:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <__fp_split3>
 67c:	68 f3       	brcs	.-38     	; 0x658 <__divsf3+0x8>

0000067e <__divsf3_pse>:
 67e:	99 23       	and	r25, r25
 680:	b1 f3       	breq	.-20     	; 0x66e <__divsf3+0x1e>
 682:	55 23       	and	r21, r21
 684:	91 f3       	breq	.-28     	; 0x66a <__divsf3+0x1a>
 686:	95 1b       	sub	r25, r21
 688:	55 0b       	sbc	r21, r21
 68a:	bb 27       	eor	r27, r27
 68c:	aa 27       	eor	r26, r26
 68e:	62 17       	cp	r22, r18
 690:	73 07       	cpc	r23, r19
 692:	84 07       	cpc	r24, r20
 694:	38 f0       	brcs	.+14     	; 0x6a4 <__divsf3_pse+0x26>
 696:	9f 5f       	subi	r25, 0xFF	; 255
 698:	5f 4f       	sbci	r21, 0xFF	; 255
 69a:	22 0f       	add	r18, r18
 69c:	33 1f       	adc	r19, r19
 69e:	44 1f       	adc	r20, r20
 6a0:	aa 1f       	adc	r26, r26
 6a2:	a9 f3       	breq	.-22     	; 0x68e <__divsf3_pse+0x10>
 6a4:	35 d0       	rcall	.+106    	; 0x710 <__divsf3_pse+0x92>
 6a6:	0e 2e       	mov	r0, r30
 6a8:	3a f0       	brmi	.+14     	; 0x6b8 <__divsf3_pse+0x3a>
 6aa:	e0 e8       	ldi	r30, 0x80	; 128
 6ac:	32 d0       	rcall	.+100    	; 0x712 <__divsf3_pse+0x94>
 6ae:	91 50       	subi	r25, 0x01	; 1
 6b0:	50 40       	sbci	r21, 0x00	; 0
 6b2:	e6 95       	lsr	r30
 6b4:	00 1c       	adc	r0, r0
 6b6:	ca f7       	brpl	.-14     	; 0x6aa <__divsf3_pse+0x2c>
 6b8:	2b d0       	rcall	.+86     	; 0x710 <__divsf3_pse+0x92>
 6ba:	fe 2f       	mov	r31, r30
 6bc:	29 d0       	rcall	.+82     	; 0x710 <__divsf3_pse+0x92>
 6be:	66 0f       	add	r22, r22
 6c0:	77 1f       	adc	r23, r23
 6c2:	88 1f       	adc	r24, r24
 6c4:	bb 1f       	adc	r27, r27
 6c6:	26 17       	cp	r18, r22
 6c8:	37 07       	cpc	r19, r23
 6ca:	48 07       	cpc	r20, r24
 6cc:	ab 07       	cpc	r26, r27
 6ce:	b0 e8       	ldi	r27, 0x80	; 128
 6d0:	09 f0       	breq	.+2      	; 0x6d4 <__divsf3_pse+0x56>
 6d2:	bb 0b       	sbc	r27, r27
 6d4:	80 2d       	mov	r24, r0
 6d6:	bf 01       	movw	r22, r30
 6d8:	ff 27       	eor	r31, r31
 6da:	93 58       	subi	r25, 0x83	; 131
 6dc:	5f 4f       	sbci	r21, 0xFF	; 255
 6de:	3a f0       	brmi	.+14     	; 0x6ee <__divsf3_pse+0x70>
 6e0:	9e 3f       	cpi	r25, 0xFE	; 254
 6e2:	51 05       	cpc	r21, r1
 6e4:	78 f0       	brcs	.+30     	; 0x704 <__divsf3_pse+0x86>
 6e6:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__fp_inf>
 6ea:	0c 94 1b 04 	jmp	0x836	; 0x836 <__fp_szero>
 6ee:	5f 3f       	cpi	r21, 0xFF	; 255
 6f0:	e4 f3       	brlt	.-8      	; 0x6ea <__divsf3_pse+0x6c>
 6f2:	98 3e       	cpi	r25, 0xE8	; 232
 6f4:	d4 f3       	brlt	.-12     	; 0x6ea <__divsf3_pse+0x6c>
 6f6:	86 95       	lsr	r24
 6f8:	77 95       	ror	r23
 6fa:	67 95       	ror	r22
 6fc:	b7 95       	ror	r27
 6fe:	f7 95       	ror	r31
 700:	9f 5f       	subi	r25, 0xFF	; 255
 702:	c9 f7       	brne	.-14     	; 0x6f6 <__divsf3_pse+0x78>
 704:	88 0f       	add	r24, r24
 706:	91 1d       	adc	r25, r1
 708:	96 95       	lsr	r25
 70a:	87 95       	ror	r24
 70c:	97 f9       	bld	r25, 7
 70e:	08 95       	ret
 710:	e1 e0       	ldi	r30, 0x01	; 1
 712:	66 0f       	add	r22, r22
 714:	77 1f       	adc	r23, r23
 716:	88 1f       	adc	r24, r24
 718:	bb 1f       	adc	r27, r27
 71a:	62 17       	cp	r22, r18
 71c:	73 07       	cpc	r23, r19
 71e:	84 07       	cpc	r24, r20
 720:	ba 07       	cpc	r27, r26
 722:	20 f0       	brcs	.+8      	; 0x72c <__divsf3_pse+0xae>
 724:	62 1b       	sub	r22, r18
 726:	73 0b       	sbc	r23, r19
 728:	84 0b       	sbc	r24, r20
 72a:	ba 0b       	sbc	r27, r26
 72c:	ee 1f       	adc	r30, r30
 72e:	88 f7       	brcc	.-30     	; 0x712 <__divsf3_pse+0x94>
 730:	e0 95       	com	r30
 732:	08 95       	ret

00000734 <__fixsfsi>:
 734:	0e 94 a1 03 	call	0x742	; 0x742 <__fixunssfsi>
 738:	68 94       	set
 73a:	b1 11       	cpse	r27, r1
 73c:	0c 94 1b 04 	jmp	0x836	; 0x836 <__fp_szero>
 740:	08 95       	ret

00000742 <__fixunssfsi>:
 742:	0e 94 00 04 	call	0x800	; 0x800 <__fp_splitA>
 746:	88 f0       	brcs	.+34     	; 0x76a <__fixunssfsi+0x28>
 748:	9f 57       	subi	r25, 0x7F	; 127
 74a:	98 f0       	brcs	.+38     	; 0x772 <__fixunssfsi+0x30>
 74c:	b9 2f       	mov	r27, r25
 74e:	99 27       	eor	r25, r25
 750:	b7 51       	subi	r27, 0x17	; 23
 752:	b0 f0       	brcs	.+44     	; 0x780 <__fixunssfsi+0x3e>
 754:	e1 f0       	breq	.+56     	; 0x78e <__fixunssfsi+0x4c>
 756:	66 0f       	add	r22, r22
 758:	77 1f       	adc	r23, r23
 75a:	88 1f       	adc	r24, r24
 75c:	99 1f       	adc	r25, r25
 75e:	1a f0       	brmi	.+6      	; 0x766 <__fixunssfsi+0x24>
 760:	ba 95       	dec	r27
 762:	c9 f7       	brne	.-14     	; 0x756 <__fixunssfsi+0x14>
 764:	14 c0       	rjmp	.+40     	; 0x78e <__fixunssfsi+0x4c>
 766:	b1 30       	cpi	r27, 0x01	; 1
 768:	91 f0       	breq	.+36     	; 0x78e <__fixunssfsi+0x4c>
 76a:	0e 94 1a 04 	call	0x834	; 0x834 <__fp_zero>
 76e:	b1 e0       	ldi	r27, 0x01	; 1
 770:	08 95       	ret
 772:	0c 94 1a 04 	jmp	0x834	; 0x834 <__fp_zero>
 776:	67 2f       	mov	r22, r23
 778:	78 2f       	mov	r23, r24
 77a:	88 27       	eor	r24, r24
 77c:	b8 5f       	subi	r27, 0xF8	; 248
 77e:	39 f0       	breq	.+14     	; 0x78e <__fixunssfsi+0x4c>
 780:	b9 3f       	cpi	r27, 0xF9	; 249
 782:	cc f3       	brlt	.-14     	; 0x776 <__fixunssfsi+0x34>
 784:	86 95       	lsr	r24
 786:	77 95       	ror	r23
 788:	67 95       	ror	r22
 78a:	b3 95       	inc	r27
 78c:	d9 f7       	brne	.-10     	; 0x784 <__fixunssfsi+0x42>
 78e:	3e f4       	brtc	.+14     	; 0x79e <__fixunssfsi+0x5c>
 790:	90 95       	com	r25
 792:	80 95       	com	r24
 794:	70 95       	com	r23
 796:	61 95       	neg	r22
 798:	7f 4f       	sbci	r23, 0xFF	; 255
 79a:	8f 4f       	sbci	r24, 0xFF	; 255
 79c:	9f 4f       	sbci	r25, 0xFF	; 255
 79e:	08 95       	ret

000007a0 <__fp_inf>:
 7a0:	97 f9       	bld	r25, 7
 7a2:	9f 67       	ori	r25, 0x7F	; 127
 7a4:	80 e8       	ldi	r24, 0x80	; 128
 7a6:	70 e0       	ldi	r23, 0x00	; 0
 7a8:	60 e0       	ldi	r22, 0x00	; 0
 7aa:	08 95       	ret

000007ac <__fp_nan>:
 7ac:	9f ef       	ldi	r25, 0xFF	; 255
 7ae:	80 ec       	ldi	r24, 0xC0	; 192
 7b0:	08 95       	ret

000007b2 <__fp_pscA>:
 7b2:	00 24       	eor	r0, r0
 7b4:	0a 94       	dec	r0
 7b6:	16 16       	cp	r1, r22
 7b8:	17 06       	cpc	r1, r23
 7ba:	18 06       	cpc	r1, r24
 7bc:	09 06       	cpc	r0, r25
 7be:	08 95       	ret

000007c0 <__fp_pscB>:
 7c0:	00 24       	eor	r0, r0
 7c2:	0a 94       	dec	r0
 7c4:	12 16       	cp	r1, r18
 7c6:	13 06       	cpc	r1, r19
 7c8:	14 06       	cpc	r1, r20
 7ca:	05 06       	cpc	r0, r21
 7cc:	08 95       	ret

000007ce <__fp_round>:
 7ce:	09 2e       	mov	r0, r25
 7d0:	03 94       	inc	r0
 7d2:	00 0c       	add	r0, r0
 7d4:	11 f4       	brne	.+4      	; 0x7da <__fp_round+0xc>
 7d6:	88 23       	and	r24, r24
 7d8:	52 f0       	brmi	.+20     	; 0x7ee <__fp_round+0x20>
 7da:	bb 0f       	add	r27, r27
 7dc:	40 f4       	brcc	.+16     	; 0x7ee <__fp_round+0x20>
 7de:	bf 2b       	or	r27, r31
 7e0:	11 f4       	brne	.+4      	; 0x7e6 <__fp_round+0x18>
 7e2:	60 ff       	sbrs	r22, 0
 7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fp_round+0x20>
 7e6:	6f 5f       	subi	r22, 0xFF	; 255
 7e8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ea:	8f 4f       	sbci	r24, 0xFF	; 255
 7ec:	9f 4f       	sbci	r25, 0xFF	; 255
 7ee:	08 95       	ret

000007f0 <__fp_split3>:
 7f0:	57 fd       	sbrc	r21, 7
 7f2:	90 58       	subi	r25, 0x80	; 128
 7f4:	44 0f       	add	r20, r20
 7f6:	55 1f       	adc	r21, r21
 7f8:	59 f0       	breq	.+22     	; 0x810 <__fp_splitA+0x10>
 7fa:	5f 3f       	cpi	r21, 0xFF	; 255
 7fc:	71 f0       	breq	.+28     	; 0x81a <__fp_splitA+0x1a>
 7fe:	47 95       	ror	r20

00000800 <__fp_splitA>:
 800:	88 0f       	add	r24, r24
 802:	97 fb       	bst	r25, 7
 804:	99 1f       	adc	r25, r25
 806:	61 f0       	breq	.+24     	; 0x820 <__fp_splitA+0x20>
 808:	9f 3f       	cpi	r25, 0xFF	; 255
 80a:	79 f0       	breq	.+30     	; 0x82a <__fp_splitA+0x2a>
 80c:	87 95       	ror	r24
 80e:	08 95       	ret
 810:	12 16       	cp	r1, r18
 812:	13 06       	cpc	r1, r19
 814:	14 06       	cpc	r1, r20
 816:	55 1f       	adc	r21, r21
 818:	f2 cf       	rjmp	.-28     	; 0x7fe <__fp_split3+0xe>
 81a:	46 95       	lsr	r20
 81c:	f1 df       	rcall	.-30     	; 0x800 <__fp_splitA>
 81e:	08 c0       	rjmp	.+16     	; 0x830 <__fp_splitA+0x30>
 820:	16 16       	cp	r1, r22
 822:	17 06       	cpc	r1, r23
 824:	18 06       	cpc	r1, r24
 826:	99 1f       	adc	r25, r25
 828:	f1 cf       	rjmp	.-30     	; 0x80c <__fp_splitA+0xc>
 82a:	86 95       	lsr	r24
 82c:	71 05       	cpc	r23, r1
 82e:	61 05       	cpc	r22, r1
 830:	08 94       	sec
 832:	08 95       	ret

00000834 <__fp_zero>:
 834:	e8 94       	clt

00000836 <__fp_szero>:
 836:	bb 27       	eor	r27, r27
 838:	66 27       	eor	r22, r22
 83a:	77 27       	eor	r23, r23
 83c:	cb 01       	movw	r24, r22
 83e:	97 f9       	bld	r25, 7
 840:	08 95       	ret

00000842 <__mulsf3>:
 842:	0e 94 34 04 	call	0x868	; 0x868 <__mulsf3x>
 846:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_round>
 84a:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__fp_pscA>
 84e:	38 f0       	brcs	.+14     	; 0x85e <__mulsf3+0x1c>
 850:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__fp_pscB>
 854:	20 f0       	brcs	.+8      	; 0x85e <__mulsf3+0x1c>
 856:	95 23       	and	r25, r21
 858:	11 f0       	breq	.+4      	; 0x85e <__mulsf3+0x1c>
 85a:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__fp_inf>
 85e:	0c 94 d6 03 	jmp	0x7ac	; 0x7ac <__fp_nan>
 862:	11 24       	eor	r1, r1
 864:	0c 94 1b 04 	jmp	0x836	; 0x836 <__fp_szero>

00000868 <__mulsf3x>:
 868:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <__fp_split3>
 86c:	70 f3       	brcs	.-36     	; 0x84a <__mulsf3+0x8>

0000086e <__mulsf3_pse>:
 86e:	95 9f       	mul	r25, r21
 870:	c1 f3       	breq	.-16     	; 0x862 <__stack+0x3>
 872:	95 0f       	add	r25, r21
 874:	50 e0       	ldi	r21, 0x00	; 0
 876:	55 1f       	adc	r21, r21
 878:	62 9f       	mul	r22, r18
 87a:	f0 01       	movw	r30, r0
 87c:	72 9f       	mul	r23, r18
 87e:	bb 27       	eor	r27, r27
 880:	f0 0d       	add	r31, r0
 882:	b1 1d       	adc	r27, r1
 884:	63 9f       	mul	r22, r19
 886:	aa 27       	eor	r26, r26
 888:	f0 0d       	add	r31, r0
 88a:	b1 1d       	adc	r27, r1
 88c:	aa 1f       	adc	r26, r26
 88e:	64 9f       	mul	r22, r20
 890:	66 27       	eor	r22, r22
 892:	b0 0d       	add	r27, r0
 894:	a1 1d       	adc	r26, r1
 896:	66 1f       	adc	r22, r22
 898:	82 9f       	mul	r24, r18
 89a:	22 27       	eor	r18, r18
 89c:	b0 0d       	add	r27, r0
 89e:	a1 1d       	adc	r26, r1
 8a0:	62 1f       	adc	r22, r18
 8a2:	73 9f       	mul	r23, r19
 8a4:	b0 0d       	add	r27, r0
 8a6:	a1 1d       	adc	r26, r1
 8a8:	62 1f       	adc	r22, r18
 8aa:	83 9f       	mul	r24, r19
 8ac:	a0 0d       	add	r26, r0
 8ae:	61 1d       	adc	r22, r1
 8b0:	22 1f       	adc	r18, r18
 8b2:	74 9f       	mul	r23, r20
 8b4:	33 27       	eor	r19, r19
 8b6:	a0 0d       	add	r26, r0
 8b8:	61 1d       	adc	r22, r1
 8ba:	23 1f       	adc	r18, r19
 8bc:	84 9f       	mul	r24, r20
 8be:	60 0d       	add	r22, r0
 8c0:	21 1d       	adc	r18, r1
 8c2:	82 2f       	mov	r24, r18
 8c4:	76 2f       	mov	r23, r22
 8c6:	6a 2f       	mov	r22, r26
 8c8:	11 24       	eor	r1, r1
 8ca:	9f 57       	subi	r25, 0x7F	; 127
 8cc:	50 40       	sbci	r21, 0x00	; 0
 8ce:	9a f0       	brmi	.+38     	; 0x8f6 <__mulsf3_pse+0x88>
 8d0:	f1 f0       	breq	.+60     	; 0x90e <__mulsf3_pse+0xa0>
 8d2:	88 23       	and	r24, r24
 8d4:	4a f0       	brmi	.+18     	; 0x8e8 <__mulsf3_pse+0x7a>
 8d6:	ee 0f       	add	r30, r30
 8d8:	ff 1f       	adc	r31, r31
 8da:	bb 1f       	adc	r27, r27
 8dc:	66 1f       	adc	r22, r22
 8de:	77 1f       	adc	r23, r23
 8e0:	88 1f       	adc	r24, r24
 8e2:	91 50       	subi	r25, 0x01	; 1
 8e4:	50 40       	sbci	r21, 0x00	; 0
 8e6:	a9 f7       	brne	.-22     	; 0x8d2 <__mulsf3_pse+0x64>
 8e8:	9e 3f       	cpi	r25, 0xFE	; 254
 8ea:	51 05       	cpc	r21, r1
 8ec:	80 f0       	brcs	.+32     	; 0x90e <__mulsf3_pse+0xa0>
 8ee:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__fp_inf>
 8f2:	0c 94 1b 04 	jmp	0x836	; 0x836 <__fp_szero>
 8f6:	5f 3f       	cpi	r21, 0xFF	; 255
 8f8:	e4 f3       	brlt	.-8      	; 0x8f2 <__mulsf3_pse+0x84>
 8fa:	98 3e       	cpi	r25, 0xE8	; 232
 8fc:	d4 f3       	brlt	.-12     	; 0x8f2 <__mulsf3_pse+0x84>
 8fe:	86 95       	lsr	r24
 900:	77 95       	ror	r23
 902:	67 95       	ror	r22
 904:	b7 95       	ror	r27
 906:	f7 95       	ror	r31
 908:	e7 95       	ror	r30
 90a:	9f 5f       	subi	r25, 0xFF	; 255
 90c:	c1 f7       	brne	.-16     	; 0x8fe <__mulsf3_pse+0x90>
 90e:	fe 2b       	or	r31, r30
 910:	88 0f       	add	r24, r24
 912:	91 1d       	adc	r25, r1
 914:	96 95       	lsr	r25
 916:	87 95       	ror	r24
 918:	97 f9       	bld	r25, 7
 91a:	08 95       	ret

0000091c <__tablejump2__>:
 91c:	ee 0f       	add	r30, r30
 91e:	ff 1f       	adc	r31, r31
 920:	05 90       	lpm	r0, Z+
 922:	f4 91       	lpm	r31, Z
 924:	e0 2d       	mov	r30, r0
 926:	09 94       	ijmp

00000928 <_exit>:
 928:	f8 94       	cli

0000092a <__stop_program>:
 92a:	ff cf       	rjmp	.-2      	; 0x92a <__stop_program>
