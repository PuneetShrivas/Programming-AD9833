
Programming-AD9833.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006aa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000006fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000006fe  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000730  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  0000076c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001269  00000000  00000000  000007cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006cb  00000000  00000000  00001a35  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000499  00000000  00000000  00002100  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d4  00000000  00000000  0000259c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000496  00000000  00000000  00002670  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a0e  00000000  00000000  00002b06  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00003514  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 96 00 	call	0x12c	; 0x12c <main>
  64:	0c 94 53 03 	jmp	0x6a6	; 0x6a6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <_Z8SPI_initv>:
	unsigned char MSdata = ((data>>8) & 0x00FF);  	//filter out MS
	unsigned char LSdata = (data & 0x00FF);			//filter out LS
	UART_send(MSdata);
	UART_send(LSdata);
	
}
  6c:	81 ea       	ldi	r24, 0xA1	; 161
  6e:	87 bb       	out	0x17, r24	; 23
  70:	81 e1       	ldi	r24, 0x11	; 17
  72:	88 bb       	out	0x18, r24	; 24
  74:	89 ed       	ldi	r24, 0xD9	; 217
  76:	8d b9       	out	0x0d, r24	; 13
  78:	08 95       	ret

0000007a <_Z9UART_initv>:
  7a:	10 bc       	out	0x20, r1	; 32
  7c:	8f e5       	ldi	r24, 0x5F	; 95
  7e:	89 b9       	out	0x09, r24	; 9
  80:	88 e1       	ldi	r24, 0x18	; 24
  82:	8a b9       	out	0x0a, r24	; 10
  84:	8e e8       	ldi	r24, 0x8E	; 142
  86:	80 bd       	out	0x20, r24	; 32
  88:	08 95       	ret

0000008a <_Z12SPI_transferh>:
  8a:	8f b9       	out	0x0f, r24	; 15
  8c:	77 9b       	sbis	0x0e, 7	; 14
  8e:	fe cf       	rjmp	.-4      	; 0x8c <_Z12SPI_transferh+0x2>
  90:	08 95       	ret

00000092 <_Z11SPI_write16t>:
void SPI_write16 (unsigned short data)    			//send a 16bit word and use f sync
{  
  92:	cf 93       	push	r28
  94:	c8 2f       	mov	r28, r24
	unsigned char MSdata = ((data>>8) & 0x00FF);  	//filter out MS
	unsigned char LSdata = (data & 0x00FF);			//filter out LS
	PORTB &= ~(1<<PINB0);						    //F sync Low --> begin frame
  96:	c0 98       	cbi	0x18, 0	; 24
	SPI_transfer(MSdata);							
  98:	89 2f       	mov	r24, r25
  9a:	0e 94 45 00 	call	0x8a	; 0x8a <_Z12SPI_transferh>
	SPI_transfer(LSdata);
  9e:	8c 2f       	mov	r24, r28
  a0:	0e 94 45 00 	call	0x8a	; 0x8a <_Z12SPI_transferh>
	PORTB |= (1<<PINB0);						    //F sync High --> End of frame
  a4:	c0 9a       	sbi	0x18, 0	; 24
}
  a6:	cf 91       	pop	r28
  a8:	08 95       	ret

000000aa <_Z10Set_AD9833f>:

void Set_AD9833(float frequency)
{
  aa:	cf 92       	push	r12
  ac:	df 92       	push	r13
  ae:	ef 92       	push	r14
  b0:	ff 92       	push	r15
  b2:	cf 93       	push	r28
  b4:	df 93       	push	r29
	long FreqReg = (frequency*pow(2,28))/(float)Fmclk;  //Calculate frequency to be sent to AD9833
  b6:	20 e0       	ldi	r18, 0x00	; 0
  b8:	30 e0       	ldi	r19, 0x00	; 0
  ba:	40 e8       	ldi	r20, 0x80	; 128
  bc:	5d e4       	ldi	r21, 0x4D	; 77
  be:	0e 94 e6 02 	call	0x5cc	; 0x5cc <__mulsf3>
  c2:	20 e2       	ldi	r18, 0x20	; 32
  c4:	3c eb       	ldi	r19, 0xBC	; 188
  c6:	4e eb       	ldi	r20, 0xBE	; 190
  c8:	5b e4       	ldi	r21, 0x4B	; 75
  ca:	0e 94 ed 01 	call	0x3da	; 0x3da <__divsf3>
  ce:	0e 94 5f 02 	call	0x4be	; 0x4be <__fixsfsi>
	int MSB = (int)((FreqReg &  0xFFFC000) >> 14);		  //Extract first 14 bits of FreqReg and place them at last 14 bits of MSB
  d2:	6b 01       	movw	r12, r22
  d4:	7c 01       	movw	r14, r24
  d6:	cc 24       	eor	r12, r12
  d8:	20 ec       	ldi	r18, 0xC0	; 192
  da:	d2 22       	and	r13, r18
  dc:	2f e0       	ldi	r18, 0x0F	; 15
  de:	f2 22       	and	r15, r18
  e0:	0b 2e       	mov	r0, r27
  e2:	be e0       	ldi	r27, 0x0E	; 14
  e4:	f5 94       	asr	r15
  e6:	e7 94       	ror	r14
  e8:	d7 94       	ror	r13
  ea:	c7 94       	ror	r12
  ec:	ba 95       	dec	r27
  ee:	d1 f7       	brne	.-12     	; 0xe4 <_Z10Set_AD9833f+0x3a>
  f0:	b0 2d       	mov	r27, r0
	int LSB = (int)((FreqReg & 0x3FFF));				  //Extract last 14 bits of FreqReg and place them at last 14 bits of MSB	
  f2:	eb 01       	movw	r28, r22
  f4:	df 73       	andi	r29, 0x3F	; 63
	MSB|=0x4000;										  //Set D14,D15 = (1,0) for using FREQ0 registers, MSB has all 16 bits set
	LSB|=0x4000;     									  //Set D14,D15 = (1,0) for using FREQ0 registers, LSB has all 16 bits set
	SPI_write16(0x2100);								  //define waveform and set reset bit
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	91 e2       	ldi	r25, 0x21	; 33
  fa:	0e 94 49 00 	call	0x92	; 0x92 <_Z11SPI_write16t>
	SPI_write16(LSB);									  //Write LSBs
  fe:	ce 01       	movw	r24, r28
 100:	90 64       	ori	r25, 0x40	; 64
 102:	0e 94 49 00 	call	0x92	; 0x92 <_Z11SPI_write16t>
	SPI_write16(MSB);									  //Write MSBs
 106:	c6 01       	movw	r24, r12
 108:	90 64       	ori	r25, 0x40	; 64
 10a:	0e 94 49 00 	call	0x92	; 0x92 <_Z11SPI_write16t>
	SPI_write16(0xC000);								  //Mode selection for writing to phase register bit, selection of PHASE0 register (Needs to be fixed)
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	90 ec       	ldi	r25, 0xC0	; 192
 112:	0e 94 49 00 	call	0x92	; 0x92 <_Z11SPI_write16t>
	SPI_write16(0x2000);                                                                                                                                                                                                                                                                                             
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	90 e2       	ldi	r25, 0x20	; 32
 11a:	0e 94 49 00 	call	0x92	; 0x92 <_Z11SPI_write16t>
}
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	ff 90       	pop	r15
 124:	ef 90       	pop	r14
 126:	df 90       	pop	r13
 128:	cf 90       	pop	r12
 12a:	08 95       	ret

0000012c <main>:

int main(void)
{
	UART_init();
 12c:	0e 94 3d 00 	call	0x7a	; 0x7a <_Z9UART_initv>
	SPI_init();
 130:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8SPI_initv>
	DDRA=(1<<PINA0)|(1<<PINA1)|(1<<PINA2);
 134:	87 e0       	ldi	r24, 0x07	; 7
 136:	8a bb       	out	0x1a, r24	; 26
	PORTA=0;
 138:	1b ba       	out	0x1b, r1	; 27
	float BY = 128.0 + (.003906 * ((-37.945 * R) + (-74.494 * G) + (112.439 * B)));
	float freqY  =  1500 + (Y * 3.1372549); //1757.2549(red)	1954.90196(green)	1628.62745(blue)	
	float freqRY =  1500 + (RY * 3.1372549); //2252.94118(red)  1606.66667(green)	1845.09804(blue)
	float freqBY =  1500 + (BY * 3.1372549); //1782.35294(red)	1669.41177(green)	2252.94118(blue)
	
	SPI_write16(0x100);							//Reset AD9833 
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	91 e0       	ldi	r25, 0x01	; 1
 13e:	0e 94 49 00 	call	0x92	; 0x92 <_Z11SPI_write16t>
	
	/*VIS CODE*/
	//leader tone
	Set_AD9833(1900);
 142:	60 e0       	ldi	r22, 0x00	; 0
 144:	70 e8       	ldi	r23, 0x80	; 128
 146:	8d ee       	ldi	r24, 0xED	; 237
 148:	94 e4       	ldi	r25, 0x44	; 68
 14a:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 14e:	2f ef       	ldi	r18, 0xFF	; 255
 150:	8f e7       	ldi	r24, 0x7F	; 127
 152:	9d e0       	ldi	r25, 0x0D	; 13
 154:	21 50       	subi	r18, 0x01	; 1
 156:	80 40       	sbci	r24, 0x00	; 0
 158:	90 40       	sbci	r25, 0x00	; 0
 15a:	e1 f7       	brne	.-8      	; 0x154 <main+0x28>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <main+0x32>
 15e:	00 00       	nop
	_delay_ms(300);
	//break
	Set_AD9833(1200);
 160:	60 e0       	ldi	r22, 0x00	; 0
 162:	70 e0       	ldi	r23, 0x00	; 0
 164:	86 e9       	ldi	r24, 0x96	; 150
 166:	94 e4       	ldi	r25, 0x44	; 68
 168:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 16c:	8f ef       	ldi	r24, 0xFF	; 255
 16e:	9f e8       	ldi	r25, 0x8F	; 143
 170:	01 97       	sbiw	r24, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <main+0x44>
 174:	00 c0       	rjmp	.+0      	; 0x176 <main+0x4a>
 176:	00 00       	nop
	_delay_ms(10);
	//leader
	Set_AD9833(1900);
 178:	60 e0       	ldi	r22, 0x00	; 0
 17a:	70 e8       	ldi	r23, 0x80	; 128
 17c:	8d ee       	ldi	r24, 0xED	; 237
 17e:	94 e4       	ldi	r25, 0x44	; 68
 180:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 184:	9f ef       	ldi	r25, 0xFF	; 255
 186:	2f e7       	ldi	r18, 0x7F	; 127
 188:	8d e0       	ldi	r24, 0x0D	; 13
 18a:	91 50       	subi	r25, 0x01	; 1
 18c:	20 40       	sbci	r18, 0x00	; 0
 18e:	80 40       	sbci	r24, 0x00	; 0
 190:	e1 f7       	brne	.-8      	; 0x18a <main+0x5e>
 192:	00 c0       	rjmp	.+0      	; 0x194 <main+0x68>
 194:	00 00       	nop
	_delay_ms(300);
	//VIS start bit
	Set_AD9833(1200);
 196:	60 e0       	ldi	r22, 0x00	; 0
 198:	70 e0       	ldi	r23, 0x00	; 0
 19a:	86 e9       	ldi	r24, 0x96	; 150
 19c:	94 e4       	ldi	r25, 0x44	; 68
 19e:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 1a2:	99 e9       	ldi	r25, 0x99	; 153
 1a4:	29 e5       	ldi	r18, 0x59	; 89
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	91 50       	subi	r25, 0x01	; 1
 1aa:	20 40       	sbci	r18, 0x00	; 0
 1ac:	80 40       	sbci	r24, 0x00	; 0
 1ae:	e1 f7       	brne	.-8      	; 0x1a8 <main+0x7c>
 1b0:	00 00       	nop
	_delay_ms(30);
	//PD90 VIS code = 99d = 0b1100011
	//bit 0=1
	Set_AD9833(1100);
 1b2:	60 e0       	ldi	r22, 0x00	; 0
 1b4:	70 e8       	ldi	r23, 0x80	; 128
 1b6:	89 e8       	ldi	r24, 0x89	; 137
 1b8:	94 e4       	ldi	r25, 0x44	; 68
 1ba:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 1be:	99 e9       	ldi	r25, 0x99	; 153
 1c0:	29 e5       	ldi	r18, 0x59	; 89
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	91 50       	subi	r25, 0x01	; 1
 1c6:	20 40       	sbci	r18, 0x00	; 0
 1c8:	80 40       	sbci	r24, 0x00	; 0
 1ca:	e1 f7       	brne	.-8      	; 0x1c4 <main+0x98>
 1cc:	00 00       	nop
	_delay_ms(30);
	//bit 1=1
	Set_AD9833(1100);
 1ce:	60 e0       	ldi	r22, 0x00	; 0
 1d0:	70 e8       	ldi	r23, 0x80	; 128
 1d2:	89 e8       	ldi	r24, 0x89	; 137
 1d4:	94 e4       	ldi	r25, 0x44	; 68
 1d6:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 1da:	99 e9       	ldi	r25, 0x99	; 153
 1dc:	29 e5       	ldi	r18, 0x59	; 89
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	91 50       	subi	r25, 0x01	; 1
 1e2:	20 40       	sbci	r18, 0x00	; 0
 1e4:	80 40       	sbci	r24, 0x00	; 0
 1e6:	e1 f7       	brne	.-8      	; 0x1e0 <main+0xb4>
 1e8:	00 00       	nop
	_delay_ms(30);
	//bit 2=0
	Set_AD9833(1300);
 1ea:	60 e0       	ldi	r22, 0x00	; 0
 1ec:	70 e8       	ldi	r23, 0x80	; 128
 1ee:	82 ea       	ldi	r24, 0xA2	; 162
 1f0:	94 e4       	ldi	r25, 0x44	; 68
 1f2:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 1f6:	99 e9       	ldi	r25, 0x99	; 153
 1f8:	29 e5       	ldi	r18, 0x59	; 89
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	91 50       	subi	r25, 0x01	; 1
 1fe:	20 40       	sbci	r18, 0x00	; 0
 200:	80 40       	sbci	r24, 0x00	; 0
 202:	e1 f7       	brne	.-8      	; 0x1fc <main+0xd0>
 204:	00 00       	nop
	_delay_ms(30);
	//bit 3=0
	Set_AD9833(1300);
 206:	60 e0       	ldi	r22, 0x00	; 0
 208:	70 e8       	ldi	r23, 0x80	; 128
 20a:	82 ea       	ldi	r24, 0xA2	; 162
 20c:	94 e4       	ldi	r25, 0x44	; 68
 20e:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 212:	99 e9       	ldi	r25, 0x99	; 153
 214:	29 e5       	ldi	r18, 0x59	; 89
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	91 50       	subi	r25, 0x01	; 1
 21a:	20 40       	sbci	r18, 0x00	; 0
 21c:	80 40       	sbci	r24, 0x00	; 0
 21e:	e1 f7       	brne	.-8      	; 0x218 <main+0xec>
 220:	00 00       	nop
	_delay_ms(30);
	//bit 4=0
	Set_AD9833(1300);
 222:	60 e0       	ldi	r22, 0x00	; 0
 224:	70 e8       	ldi	r23, 0x80	; 128
 226:	82 ea       	ldi	r24, 0xA2	; 162
 228:	94 e4       	ldi	r25, 0x44	; 68
 22a:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 22e:	99 e9       	ldi	r25, 0x99	; 153
 230:	29 e5       	ldi	r18, 0x59	; 89
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	91 50       	subi	r25, 0x01	; 1
 236:	20 40       	sbci	r18, 0x00	; 0
 238:	80 40       	sbci	r24, 0x00	; 0
 23a:	e1 f7       	brne	.-8      	; 0x234 <main+0x108>
 23c:	00 00       	nop
	_delay_ms(30);
	//bit 5=1
	Set_AD9833(1100);
 23e:	60 e0       	ldi	r22, 0x00	; 0
 240:	70 e8       	ldi	r23, 0x80	; 128
 242:	89 e8       	ldi	r24, 0x89	; 137
 244:	94 e4       	ldi	r25, 0x44	; 68
 246:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 24a:	99 e9       	ldi	r25, 0x99	; 153
 24c:	29 e5       	ldi	r18, 0x59	; 89
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	91 50       	subi	r25, 0x01	; 1
 252:	20 40       	sbci	r18, 0x00	; 0
 254:	80 40       	sbci	r24, 0x00	; 0
 256:	e1 f7       	brne	.-8      	; 0x250 <main+0x124>
 258:	00 00       	nop
	_delay_ms(30);
	//bit 6=1
	Set_AD9833(1100);
 25a:	60 e0       	ldi	r22, 0x00	; 0
 25c:	70 e8       	ldi	r23, 0x80	; 128
 25e:	89 e8       	ldi	r24, 0x89	; 137
 260:	94 e4       	ldi	r25, 0x44	; 68
 262:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 266:	99 e9       	ldi	r25, 0x99	; 153
 268:	29 e5       	ldi	r18, 0x59	; 89
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	91 50       	subi	r25, 0x01	; 1
 26e:	20 40       	sbci	r18, 0x00	; 0
 270:	80 40       	sbci	r24, 0x00	; 0
 272:	e1 f7       	brne	.-8      	; 0x26c <main+0x140>
 274:	00 00       	nop
	_delay_ms(30);
	//Parity bit
	Set_AD9833(1100);
 276:	60 e0       	ldi	r22, 0x00	; 0
 278:	70 e8       	ldi	r23, 0x80	; 128
 27a:	89 e8       	ldi	r24, 0x89	; 137
 27c:	94 e4       	ldi	r25, 0x44	; 68
 27e:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 282:	99 e9       	ldi	r25, 0x99	; 153
 284:	29 e5       	ldi	r18, 0x59	; 89
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	91 50       	subi	r25, 0x01	; 1
 28a:	20 40       	sbci	r18, 0x00	; 0
 28c:	80 40       	sbci	r24, 0x00	; 0
 28e:	e1 f7       	brne	.-8      	; 0x288 <main+0x15c>
 290:	00 00       	nop
	_delay_ms(30);
	//stop bit
	Set_AD9833(1200);
 292:	60 e0       	ldi	r22, 0x00	; 0
 294:	70 e0       	ldi	r23, 0x00	; 0
 296:	86 e9       	ldi	r24, 0x96	; 150
 298:	94 e4       	ldi	r25, 0x44	; 68
 29a:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 29e:	99 e9       	ldi	r25, 0x99	; 153
 2a0:	29 e5       	ldi	r18, 0x59	; 89
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	91 50       	subi	r25, 0x01	; 1
 2a6:	20 40       	sbci	r18, 0x00	; 0
 2a8:	80 40       	sbci	r24, 0x00	; 0
 2aa:	e1 f7       	brne	.-8      	; 0x2a4 <main+0x178>
 2ac:	00 00       	nop
 2ae:	00 e8       	ldi	r16, 0x80	; 128
 2b0:	10 e0       	ldi	r17, 0x00	; 0
	
	
	for (int i=1;i<=128;i++)
	{
		//Sync Pulse
		Set_AD9833(1200);
 2b2:	60 e0       	ldi	r22, 0x00	; 0
 2b4:	70 e0       	ldi	r23, 0x00	; 0
 2b6:	86 e9       	ldi	r24, 0x96	; 150
 2b8:	94 e4       	ldi	r25, 0x44	; 68
 2ba:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 2be:	91 ee       	ldi	r25, 0xE1	; 225
 2c0:	2a ed       	ldi	r18, 0xDA	; 218
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	91 50       	subi	r25, 0x01	; 1
 2c6:	20 40       	sbci	r18, 0x00	; 0
 2c8:	80 40       	sbci	r24, 0x00	; 0
 2ca:	e1 f7       	brne	.-8      	; 0x2c4 <main+0x198>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2cc:	84 e1       	ldi	r24, 0x14	; 20
 2ce:	9c e0       	ldi	r25, 0x0C	; 12
 2d0:	01 97       	sbiw	r24, 0x01	; 1
 2d2:	f1 f7       	brne	.-4      	; 0x2d0 <main+0x1a4>
 2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <main+0x1aa>
 2d6:	00 00       	nop
		_delay_ms(19);
		_delay_us(839);
		//Porch
		Set_AD9833(1500);
 2d8:	60 e0       	ldi	r22, 0x00	; 0
 2da:	70 e8       	ldi	r23, 0x80	; 128
 2dc:	8b eb       	ldi	r24, 0xBB	; 187
 2de:	94 e4       	ldi	r25, 0x44	; 68
 2e0:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2e4:	86 e6       	ldi	r24, 0x66	; 102
 2e6:	9e e0       	ldi	r25, 0x0E	; 14
 2e8:	01 97       	sbiw	r24, 0x01	; 1
 2ea:	f1 f7       	brne	.-4      	; 0x2e8 <main+0x1bc>
 2ec:	00 00       	nop
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ee:	8f e3       	ldi	r24, 0x3F	; 63
 2f0:	9d e0       	ldi	r25, 0x0D	; 13
 2f2:	01 97       	sbiw	r24, 0x01	; 1
 2f4:	f1 f7       	brne	.-4      	; 0x2f2 <main+0x1c6>
 2f6:	00 00       	nop
 2f8:	c0 e2       	ldi	r28, 0x20	; 32
 2fa:	d0 e0       	ldi	r29, 0x00	; 0
		//Color transmission
		
		//Y Scan odd line 
		for (int j=1;j<=32;j++)
		{
			Set_AD9833(1757); 
 2fc:	60 e0       	ldi	r22, 0x00	; 0
 2fe:	70 ea       	ldi	r23, 0xA0	; 160
 300:	8b ed       	ldi	r24, 0xDB	; 219
 302:	94 e4       	ldi	r25, 0x44	; 68
 304:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 308:	8c ef       	ldi	r24, 0xFC	; 252
 30a:	93 e2       	ldi	r25, 0x23	; 35
 30c:	01 97       	sbiw	r24, 0x01	; 1
 30e:	f1 f7       	brne	.-4      	; 0x30c <main+0x1e0>
 310:	00 00       	nop
			_delay_us(532*5-161);
			Set_AD9833(1955);
 312:	60 e0       	ldi	r22, 0x00	; 0
 314:	70 e6       	ldi	r23, 0x60	; 96
 316:	84 ef       	ldi	r24, 0xF4	; 244
 318:	94 e4       	ldi	r25, 0x44	; 68
 31a:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 31e:	8f ef       	ldi	r24, 0xFF	; 255
 320:	93 e2       	ldi	r25, 0x23	; 35
 322:	01 97       	sbiw	r24, 0x01	; 1
 324:	f1 f7       	brne	.-4      	; 0x322 <main+0x1f6>
 326:	00 c0       	rjmp	.+0      	; 0x328 <main+0x1fc>
 328:	00 00       	nop
 32a:	21 97       	sbiw	r28, 0x01	; 1
		_delay_ms(1);
		_delay_us(920);
		//Color transmission
		
		//Y Scan odd line 
		for (int j=1;j<=32;j++)
 32c:	39 f7       	brne	.-50     	; 0x2fc <main+0x1d0>
 32e:	c0 e2       	ldi	r28, 0x20	; 32
 330:	d0 e0       	ldi	r29, 0x00	; 0
			 _delay_us(532*5-160);
		}
		//R-Y Scan average
		for (int j=1;j<=32;j++)
		{
			Set_AD9833(2253);
 332:	60 e0       	ldi	r22, 0x00	; 0
 334:	70 ed       	ldi	r23, 0xD0	; 208
 336:	8c e0       	ldi	r24, 0x0C	; 12
 338:	95 e4       	ldi	r25, 0x45	; 69
 33a:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 33e:	8c ef       	ldi	r24, 0xFC	; 252
 340:	93 e2       	ldi	r25, 0x23	; 35
 342:	01 97       	sbiw	r24, 0x01	; 1
 344:	f1 f7       	brne	.-4      	; 0x342 <main+0x216>
 346:	00 00       	nop
			 _delay_us(532*5-161);
			Set_AD9833(1607);
 348:	60 e0       	ldi	r22, 0x00	; 0
 34a:	70 ee       	ldi	r23, 0xE0	; 224
 34c:	88 ec       	ldi	r24, 0xC8	; 200
 34e:	94 e4       	ldi	r25, 0x44	; 68
 350:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 354:	8f ef       	ldi	r24, 0xFF	; 255
 356:	93 e2       	ldi	r25, 0x23	; 35
 358:	01 97       	sbiw	r24, 0x01	; 1
 35a:	f1 f7       	brne	.-4      	; 0x358 <main+0x22c>
 35c:	00 c0       	rjmp	.+0      	; 0x35e <main+0x232>
 35e:	00 00       	nop
 360:	21 97       	sbiw	r28, 0x01	; 1
			_delay_us(532*5-161);
			Set_AD9833(1955);
			 _delay_us(532*5-160);
		}
		//R-Y Scan average
		for (int j=1;j<=32;j++)
 362:	39 f7       	brne	.-50     	; 0x332 <main+0x206>
 364:	c0 e2       	ldi	r28, 0x20	; 32
 366:	d0 e0       	ldi	r29, 0x00	; 0
			 _delay_us(532*5-160);
		}
		//B-Y Scan average
		for (int j=1;j<=32;j++)
		{
			Set_AD9833(1782); _delay_us(532*5-160);
 368:	60 e0       	ldi	r22, 0x00	; 0
 36a:	70 ec       	ldi	r23, 0xC0	; 192
 36c:	8e ed       	ldi	r24, 0xDE	; 222
 36e:	94 e4       	ldi	r25, 0x44	; 68
 370:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 374:	8f ef       	ldi	r24, 0xFF	; 255
 376:	93 e2       	ldi	r25, 0x23	; 35
 378:	01 97       	sbiw	r24, 0x01	; 1
 37a:	f1 f7       	brne	.-4      	; 0x378 <main+0x24c>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <main+0x252>
 37e:	00 00       	nop
			Set_AD9833(1669); _delay_us(532*5-161);
 380:	60 e0       	ldi	r22, 0x00	; 0
 382:	70 ea       	ldi	r23, 0xA0	; 160
 384:	80 ed       	ldi	r24, 0xD0	; 208
 386:	94 e4       	ldi	r25, 0x44	; 68
 388:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 38c:	8c ef       	ldi	r24, 0xFC	; 252
 38e:	93 e2       	ldi	r25, 0x23	; 35
 390:	01 97       	sbiw	r24, 0x01	; 1
 392:	f1 f7       	brne	.-4      	; 0x390 <main+0x264>
 394:	00 00       	nop
 396:	21 97       	sbiw	r28, 0x01	; 1
			 _delay_us(532*5-161);
			Set_AD9833(1607);
			 _delay_us(532*5-160);
		}
		//B-Y Scan average
		for (int j=1;j<=32;j++)
 398:	39 f7       	brne	.-50     	; 0x368 <main+0x23c>
 39a:	c0 e2       	ldi	r28, 0x20	; 32
 39c:	d0 e0       	ldi	r29, 0x00	; 0
			Set_AD9833(1669); _delay_us(532*5-161);
		}
		//Y Scan even line
		for (int j=1;j<=32;j++)
		{
			Set_AD9833(1757); _delay_us(532*5-160);
 39e:	60 e0       	ldi	r22, 0x00	; 0
 3a0:	70 ea       	ldi	r23, 0xA0	; 160
 3a2:	8b ed       	ldi	r24, 0xDB	; 219
 3a4:	94 e4       	ldi	r25, 0x44	; 68
 3a6:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 3aa:	8f ef       	ldi	r24, 0xFF	; 255
 3ac:	93 e2       	ldi	r25, 0x23	; 35
 3ae:	01 97       	sbiw	r24, 0x01	; 1
 3b0:	f1 f7       	brne	.-4      	; 0x3ae <main+0x282>
 3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <main+0x288>
 3b4:	00 00       	nop
			Set_AD9833(1955); _delay_us(532*5-161);
 3b6:	60 e0       	ldi	r22, 0x00	; 0
 3b8:	70 e6       	ldi	r23, 0x60	; 96
 3ba:	84 ef       	ldi	r24, 0xF4	; 244
 3bc:	94 e4       	ldi	r25, 0x44	; 68
 3be:	0e 94 55 00 	call	0xaa	; 0xaa <_Z10Set_AD9833f>
 3c2:	8c ef       	ldi	r24, 0xFC	; 252
 3c4:	93 e2       	ldi	r25, 0x23	; 35
 3c6:	01 97       	sbiw	r24, 0x01	; 1
 3c8:	f1 f7       	brne	.-4      	; 0x3c6 <main+0x29a>
 3ca:	00 00       	nop
 3cc:	21 97       	sbiw	r28, 0x01	; 1
		{
			Set_AD9833(1782); _delay_us(532*5-160);
			Set_AD9833(1669); _delay_us(532*5-161);
		}
		//Y Scan even line
		for (int j=1;j<=32;j++)
 3ce:	39 f7       	brne	.-50     	; 0x39e <main+0x272>
 3d0:	01 50       	subi	r16, 0x01	; 1
 3d2:	11 09       	sbc	r17, r1
	//stop bit
	Set_AD9833(1200);
	_delay_ms(30);
	
	
	for (int i=1;i<=128;i++)
 3d4:	09 f0       	breq	.+2      	; 0x3d8 <main+0x2ac>
 3d6:	6d cf       	rjmp	.-294    	; 0x2b2 <main+0x186>
 3d8:	ff cf       	rjmp	.-2      	; 0x3d8 <main+0x2ac>

000003da <__divsf3>:
 3da:	0e 94 01 02 	call	0x402	; 0x402 <__divsf3x>
 3de:	0c 94 ac 02 	jmp	0x558	; 0x558 <__fp_round>
 3e2:	0e 94 a5 02 	call	0x54a	; 0x54a <__fp_pscB>
 3e6:	58 f0       	brcs	.+22     	; 0x3fe <__divsf3+0x24>
 3e8:	0e 94 9e 02 	call	0x53c	; 0x53c <__fp_pscA>
 3ec:	40 f0       	brcs	.+16     	; 0x3fe <__divsf3+0x24>
 3ee:	29 f4       	brne	.+10     	; 0x3fa <__divsf3+0x20>
 3f0:	5f 3f       	cpi	r21, 0xFF	; 255
 3f2:	29 f0       	breq	.+10     	; 0x3fe <__divsf3+0x24>
 3f4:	0c 94 95 02 	jmp	0x52a	; 0x52a <__fp_inf>
 3f8:	51 11       	cpse	r21, r1
 3fa:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_szero>
 3fe:	0c 94 9b 02 	jmp	0x536	; 0x536 <__fp_nan>

00000402 <__divsf3x>:
 402:	0e 94 bd 02 	call	0x57a	; 0x57a <__fp_split3>
 406:	68 f3       	brcs	.-38     	; 0x3e2 <__divsf3+0x8>

00000408 <__divsf3_pse>:
 408:	99 23       	and	r25, r25
 40a:	b1 f3       	breq	.-20     	; 0x3f8 <__divsf3+0x1e>
 40c:	55 23       	and	r21, r21
 40e:	91 f3       	breq	.-28     	; 0x3f4 <__divsf3+0x1a>
 410:	95 1b       	sub	r25, r21
 412:	55 0b       	sbc	r21, r21
 414:	bb 27       	eor	r27, r27
 416:	aa 27       	eor	r26, r26
 418:	62 17       	cp	r22, r18
 41a:	73 07       	cpc	r23, r19
 41c:	84 07       	cpc	r24, r20
 41e:	38 f0       	brcs	.+14     	; 0x42e <__divsf3_pse+0x26>
 420:	9f 5f       	subi	r25, 0xFF	; 255
 422:	5f 4f       	sbci	r21, 0xFF	; 255
 424:	22 0f       	add	r18, r18
 426:	33 1f       	adc	r19, r19
 428:	44 1f       	adc	r20, r20
 42a:	aa 1f       	adc	r26, r26
 42c:	a9 f3       	breq	.-22     	; 0x418 <__divsf3_pse+0x10>
 42e:	35 d0       	rcall	.+106    	; 0x49a <__divsf3_pse+0x92>
 430:	0e 2e       	mov	r0, r30
 432:	3a f0       	brmi	.+14     	; 0x442 <__divsf3_pse+0x3a>
 434:	e0 e8       	ldi	r30, 0x80	; 128
 436:	32 d0       	rcall	.+100    	; 0x49c <__divsf3_pse+0x94>
 438:	91 50       	subi	r25, 0x01	; 1
 43a:	50 40       	sbci	r21, 0x00	; 0
 43c:	e6 95       	lsr	r30
 43e:	00 1c       	adc	r0, r0
 440:	ca f7       	brpl	.-14     	; 0x434 <__divsf3_pse+0x2c>
 442:	2b d0       	rcall	.+86     	; 0x49a <__divsf3_pse+0x92>
 444:	fe 2f       	mov	r31, r30
 446:	29 d0       	rcall	.+82     	; 0x49a <__divsf3_pse+0x92>
 448:	66 0f       	add	r22, r22
 44a:	77 1f       	adc	r23, r23
 44c:	88 1f       	adc	r24, r24
 44e:	bb 1f       	adc	r27, r27
 450:	26 17       	cp	r18, r22
 452:	37 07       	cpc	r19, r23
 454:	48 07       	cpc	r20, r24
 456:	ab 07       	cpc	r26, r27
 458:	b0 e8       	ldi	r27, 0x80	; 128
 45a:	09 f0       	breq	.+2      	; 0x45e <__divsf3_pse+0x56>
 45c:	bb 0b       	sbc	r27, r27
 45e:	80 2d       	mov	r24, r0
 460:	bf 01       	movw	r22, r30
 462:	ff 27       	eor	r31, r31
 464:	93 58       	subi	r25, 0x83	; 131
 466:	5f 4f       	sbci	r21, 0xFF	; 255
 468:	3a f0       	brmi	.+14     	; 0x478 <__divsf3_pse+0x70>
 46a:	9e 3f       	cpi	r25, 0xFE	; 254
 46c:	51 05       	cpc	r21, r1
 46e:	78 f0       	brcs	.+30     	; 0x48e <__divsf3_pse+0x86>
 470:	0c 94 95 02 	jmp	0x52a	; 0x52a <__fp_inf>
 474:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_szero>
 478:	5f 3f       	cpi	r21, 0xFF	; 255
 47a:	e4 f3       	brlt	.-8      	; 0x474 <__divsf3_pse+0x6c>
 47c:	98 3e       	cpi	r25, 0xE8	; 232
 47e:	d4 f3       	brlt	.-12     	; 0x474 <__divsf3_pse+0x6c>
 480:	86 95       	lsr	r24
 482:	77 95       	ror	r23
 484:	67 95       	ror	r22
 486:	b7 95       	ror	r27
 488:	f7 95       	ror	r31
 48a:	9f 5f       	subi	r25, 0xFF	; 255
 48c:	c9 f7       	brne	.-14     	; 0x480 <__divsf3_pse+0x78>
 48e:	88 0f       	add	r24, r24
 490:	91 1d       	adc	r25, r1
 492:	96 95       	lsr	r25
 494:	87 95       	ror	r24
 496:	97 f9       	bld	r25, 7
 498:	08 95       	ret
 49a:	e1 e0       	ldi	r30, 0x01	; 1
 49c:	66 0f       	add	r22, r22
 49e:	77 1f       	adc	r23, r23
 4a0:	88 1f       	adc	r24, r24
 4a2:	bb 1f       	adc	r27, r27
 4a4:	62 17       	cp	r22, r18
 4a6:	73 07       	cpc	r23, r19
 4a8:	84 07       	cpc	r24, r20
 4aa:	ba 07       	cpc	r27, r26
 4ac:	20 f0       	brcs	.+8      	; 0x4b6 <__divsf3_pse+0xae>
 4ae:	62 1b       	sub	r22, r18
 4b0:	73 0b       	sbc	r23, r19
 4b2:	84 0b       	sbc	r24, r20
 4b4:	ba 0b       	sbc	r27, r26
 4b6:	ee 1f       	adc	r30, r30
 4b8:	88 f7       	brcc	.-30     	; 0x49c <__divsf3_pse+0x94>
 4ba:	e0 95       	com	r30
 4bc:	08 95       	ret

000004be <__fixsfsi>:
 4be:	0e 94 66 02 	call	0x4cc	; 0x4cc <__fixunssfsi>
 4c2:	68 94       	set
 4c4:	b1 11       	cpse	r27, r1
 4c6:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_szero>
 4ca:	08 95       	ret

000004cc <__fixunssfsi>:
 4cc:	0e 94 c5 02 	call	0x58a	; 0x58a <__fp_splitA>
 4d0:	88 f0       	brcs	.+34     	; 0x4f4 <__fixunssfsi+0x28>
 4d2:	9f 57       	subi	r25, 0x7F	; 127
 4d4:	98 f0       	brcs	.+38     	; 0x4fc <__fixunssfsi+0x30>
 4d6:	b9 2f       	mov	r27, r25
 4d8:	99 27       	eor	r25, r25
 4da:	b7 51       	subi	r27, 0x17	; 23
 4dc:	b0 f0       	brcs	.+44     	; 0x50a <__fixunssfsi+0x3e>
 4de:	e1 f0       	breq	.+56     	; 0x518 <__fixunssfsi+0x4c>
 4e0:	66 0f       	add	r22, r22
 4e2:	77 1f       	adc	r23, r23
 4e4:	88 1f       	adc	r24, r24
 4e6:	99 1f       	adc	r25, r25
 4e8:	1a f0       	brmi	.+6      	; 0x4f0 <__fixunssfsi+0x24>
 4ea:	ba 95       	dec	r27
 4ec:	c9 f7       	brne	.-14     	; 0x4e0 <__fixunssfsi+0x14>
 4ee:	14 c0       	rjmp	.+40     	; 0x518 <__fixunssfsi+0x4c>
 4f0:	b1 30       	cpi	r27, 0x01	; 1
 4f2:	91 f0       	breq	.+36     	; 0x518 <__fixunssfsi+0x4c>
 4f4:	0e 94 df 02 	call	0x5be	; 0x5be <__fp_zero>
 4f8:	b1 e0       	ldi	r27, 0x01	; 1
 4fa:	08 95       	ret
 4fc:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_zero>
 500:	67 2f       	mov	r22, r23
 502:	78 2f       	mov	r23, r24
 504:	88 27       	eor	r24, r24
 506:	b8 5f       	subi	r27, 0xF8	; 248
 508:	39 f0       	breq	.+14     	; 0x518 <__fixunssfsi+0x4c>
 50a:	b9 3f       	cpi	r27, 0xF9	; 249
 50c:	cc f3       	brlt	.-14     	; 0x500 <__fixunssfsi+0x34>
 50e:	86 95       	lsr	r24
 510:	77 95       	ror	r23
 512:	67 95       	ror	r22
 514:	b3 95       	inc	r27
 516:	d9 f7       	brne	.-10     	; 0x50e <__fixunssfsi+0x42>
 518:	3e f4       	brtc	.+14     	; 0x528 <__fixunssfsi+0x5c>
 51a:	90 95       	com	r25
 51c:	80 95       	com	r24
 51e:	70 95       	com	r23
 520:	61 95       	neg	r22
 522:	7f 4f       	sbci	r23, 0xFF	; 255
 524:	8f 4f       	sbci	r24, 0xFF	; 255
 526:	9f 4f       	sbci	r25, 0xFF	; 255
 528:	08 95       	ret

0000052a <__fp_inf>:
 52a:	97 f9       	bld	r25, 7
 52c:	9f 67       	ori	r25, 0x7F	; 127
 52e:	80 e8       	ldi	r24, 0x80	; 128
 530:	70 e0       	ldi	r23, 0x00	; 0
 532:	60 e0       	ldi	r22, 0x00	; 0
 534:	08 95       	ret

00000536 <__fp_nan>:
 536:	9f ef       	ldi	r25, 0xFF	; 255
 538:	80 ec       	ldi	r24, 0xC0	; 192
 53a:	08 95       	ret

0000053c <__fp_pscA>:
 53c:	00 24       	eor	r0, r0
 53e:	0a 94       	dec	r0
 540:	16 16       	cp	r1, r22
 542:	17 06       	cpc	r1, r23
 544:	18 06       	cpc	r1, r24
 546:	09 06       	cpc	r0, r25
 548:	08 95       	ret

0000054a <__fp_pscB>:
 54a:	00 24       	eor	r0, r0
 54c:	0a 94       	dec	r0
 54e:	12 16       	cp	r1, r18
 550:	13 06       	cpc	r1, r19
 552:	14 06       	cpc	r1, r20
 554:	05 06       	cpc	r0, r21
 556:	08 95       	ret

00000558 <__fp_round>:
 558:	09 2e       	mov	r0, r25
 55a:	03 94       	inc	r0
 55c:	00 0c       	add	r0, r0
 55e:	11 f4       	brne	.+4      	; 0x564 <__fp_round+0xc>
 560:	88 23       	and	r24, r24
 562:	52 f0       	brmi	.+20     	; 0x578 <__fp_round+0x20>
 564:	bb 0f       	add	r27, r27
 566:	40 f4       	brcc	.+16     	; 0x578 <__fp_round+0x20>
 568:	bf 2b       	or	r27, r31
 56a:	11 f4       	brne	.+4      	; 0x570 <__fp_round+0x18>
 56c:	60 ff       	sbrs	r22, 0
 56e:	04 c0       	rjmp	.+8      	; 0x578 <__fp_round+0x20>
 570:	6f 5f       	subi	r22, 0xFF	; 255
 572:	7f 4f       	sbci	r23, 0xFF	; 255
 574:	8f 4f       	sbci	r24, 0xFF	; 255
 576:	9f 4f       	sbci	r25, 0xFF	; 255
 578:	08 95       	ret

0000057a <__fp_split3>:
 57a:	57 fd       	sbrc	r21, 7
 57c:	90 58       	subi	r25, 0x80	; 128
 57e:	44 0f       	add	r20, r20
 580:	55 1f       	adc	r21, r21
 582:	59 f0       	breq	.+22     	; 0x59a <__fp_splitA+0x10>
 584:	5f 3f       	cpi	r21, 0xFF	; 255
 586:	71 f0       	breq	.+28     	; 0x5a4 <__fp_splitA+0x1a>
 588:	47 95       	ror	r20

0000058a <__fp_splitA>:
 58a:	88 0f       	add	r24, r24
 58c:	97 fb       	bst	r25, 7
 58e:	99 1f       	adc	r25, r25
 590:	61 f0       	breq	.+24     	; 0x5aa <__fp_splitA+0x20>
 592:	9f 3f       	cpi	r25, 0xFF	; 255
 594:	79 f0       	breq	.+30     	; 0x5b4 <__fp_splitA+0x2a>
 596:	87 95       	ror	r24
 598:	08 95       	ret
 59a:	12 16       	cp	r1, r18
 59c:	13 06       	cpc	r1, r19
 59e:	14 06       	cpc	r1, r20
 5a0:	55 1f       	adc	r21, r21
 5a2:	f2 cf       	rjmp	.-28     	; 0x588 <__fp_split3+0xe>
 5a4:	46 95       	lsr	r20
 5a6:	f1 df       	rcall	.-30     	; 0x58a <__fp_splitA>
 5a8:	08 c0       	rjmp	.+16     	; 0x5ba <__fp_splitA+0x30>
 5aa:	16 16       	cp	r1, r22
 5ac:	17 06       	cpc	r1, r23
 5ae:	18 06       	cpc	r1, r24
 5b0:	99 1f       	adc	r25, r25
 5b2:	f1 cf       	rjmp	.-30     	; 0x596 <__fp_splitA+0xc>
 5b4:	86 95       	lsr	r24
 5b6:	71 05       	cpc	r23, r1
 5b8:	61 05       	cpc	r22, r1
 5ba:	08 94       	sec
 5bc:	08 95       	ret

000005be <__fp_zero>:
 5be:	e8 94       	clt

000005c0 <__fp_szero>:
 5c0:	bb 27       	eor	r27, r27
 5c2:	66 27       	eor	r22, r22
 5c4:	77 27       	eor	r23, r23
 5c6:	cb 01       	movw	r24, r22
 5c8:	97 f9       	bld	r25, 7
 5ca:	08 95       	ret

000005cc <__mulsf3>:
 5cc:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <__mulsf3x>
 5d0:	0c 94 ac 02 	jmp	0x558	; 0x558 <__fp_round>
 5d4:	0e 94 9e 02 	call	0x53c	; 0x53c <__fp_pscA>
 5d8:	38 f0       	brcs	.+14     	; 0x5e8 <__mulsf3+0x1c>
 5da:	0e 94 a5 02 	call	0x54a	; 0x54a <__fp_pscB>
 5de:	20 f0       	brcs	.+8      	; 0x5e8 <__mulsf3+0x1c>
 5e0:	95 23       	and	r25, r21
 5e2:	11 f0       	breq	.+4      	; 0x5e8 <__mulsf3+0x1c>
 5e4:	0c 94 95 02 	jmp	0x52a	; 0x52a <__fp_inf>
 5e8:	0c 94 9b 02 	jmp	0x536	; 0x536 <__fp_nan>
 5ec:	11 24       	eor	r1, r1
 5ee:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_szero>

000005f2 <__mulsf3x>:
 5f2:	0e 94 bd 02 	call	0x57a	; 0x57a <__fp_split3>
 5f6:	70 f3       	brcs	.-36     	; 0x5d4 <__mulsf3+0x8>

000005f8 <__mulsf3_pse>:
 5f8:	95 9f       	mul	r25, r21
 5fa:	c1 f3       	breq	.-16     	; 0x5ec <__mulsf3+0x20>
 5fc:	95 0f       	add	r25, r21
 5fe:	50 e0       	ldi	r21, 0x00	; 0
 600:	55 1f       	adc	r21, r21
 602:	62 9f       	mul	r22, r18
 604:	f0 01       	movw	r30, r0
 606:	72 9f       	mul	r23, r18
 608:	bb 27       	eor	r27, r27
 60a:	f0 0d       	add	r31, r0
 60c:	b1 1d       	adc	r27, r1
 60e:	63 9f       	mul	r22, r19
 610:	aa 27       	eor	r26, r26
 612:	f0 0d       	add	r31, r0
 614:	b1 1d       	adc	r27, r1
 616:	aa 1f       	adc	r26, r26
 618:	64 9f       	mul	r22, r20
 61a:	66 27       	eor	r22, r22
 61c:	b0 0d       	add	r27, r0
 61e:	a1 1d       	adc	r26, r1
 620:	66 1f       	adc	r22, r22
 622:	82 9f       	mul	r24, r18
 624:	22 27       	eor	r18, r18
 626:	b0 0d       	add	r27, r0
 628:	a1 1d       	adc	r26, r1
 62a:	62 1f       	adc	r22, r18
 62c:	73 9f       	mul	r23, r19
 62e:	b0 0d       	add	r27, r0
 630:	a1 1d       	adc	r26, r1
 632:	62 1f       	adc	r22, r18
 634:	83 9f       	mul	r24, r19
 636:	a0 0d       	add	r26, r0
 638:	61 1d       	adc	r22, r1
 63a:	22 1f       	adc	r18, r18
 63c:	74 9f       	mul	r23, r20
 63e:	33 27       	eor	r19, r19
 640:	a0 0d       	add	r26, r0
 642:	61 1d       	adc	r22, r1
 644:	23 1f       	adc	r18, r19
 646:	84 9f       	mul	r24, r20
 648:	60 0d       	add	r22, r0
 64a:	21 1d       	adc	r18, r1
 64c:	82 2f       	mov	r24, r18
 64e:	76 2f       	mov	r23, r22
 650:	6a 2f       	mov	r22, r26
 652:	11 24       	eor	r1, r1
 654:	9f 57       	subi	r25, 0x7F	; 127
 656:	50 40       	sbci	r21, 0x00	; 0
 658:	9a f0       	brmi	.+38     	; 0x680 <__mulsf3_pse+0x88>
 65a:	f1 f0       	breq	.+60     	; 0x698 <__mulsf3_pse+0xa0>
 65c:	88 23       	and	r24, r24
 65e:	4a f0       	brmi	.+18     	; 0x672 <__mulsf3_pse+0x7a>
 660:	ee 0f       	add	r30, r30
 662:	ff 1f       	adc	r31, r31
 664:	bb 1f       	adc	r27, r27
 666:	66 1f       	adc	r22, r22
 668:	77 1f       	adc	r23, r23
 66a:	88 1f       	adc	r24, r24
 66c:	91 50       	subi	r25, 0x01	; 1
 66e:	50 40       	sbci	r21, 0x00	; 0
 670:	a9 f7       	brne	.-22     	; 0x65c <__mulsf3_pse+0x64>
 672:	9e 3f       	cpi	r25, 0xFE	; 254
 674:	51 05       	cpc	r21, r1
 676:	80 f0       	brcs	.+32     	; 0x698 <__mulsf3_pse+0xa0>
 678:	0c 94 95 02 	jmp	0x52a	; 0x52a <__fp_inf>
 67c:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_szero>
 680:	5f 3f       	cpi	r21, 0xFF	; 255
 682:	e4 f3       	brlt	.-8      	; 0x67c <__mulsf3_pse+0x84>
 684:	98 3e       	cpi	r25, 0xE8	; 232
 686:	d4 f3       	brlt	.-12     	; 0x67c <__mulsf3_pse+0x84>
 688:	86 95       	lsr	r24
 68a:	77 95       	ror	r23
 68c:	67 95       	ror	r22
 68e:	b7 95       	ror	r27
 690:	f7 95       	ror	r31
 692:	e7 95       	ror	r30
 694:	9f 5f       	subi	r25, 0xFF	; 255
 696:	c1 f7       	brne	.-16     	; 0x688 <__mulsf3_pse+0x90>
 698:	fe 2b       	or	r31, r30
 69a:	88 0f       	add	r24, r24
 69c:	91 1d       	adc	r25, r1
 69e:	96 95       	lsr	r25
 6a0:	87 95       	ror	r24
 6a2:	97 f9       	bld	r25, 7
 6a4:	08 95       	ret

000006a6 <_exit>:
 6a6:	f8 94       	cli

000006a8 <__stop_program>:
 6a8:	ff cf       	rjmp	.-2      	; 0x6a8 <__stop_program>
