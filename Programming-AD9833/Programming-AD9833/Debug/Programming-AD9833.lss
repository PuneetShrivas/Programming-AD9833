
Programming-AD9833.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000010e6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000010e6  0000117a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000004c  00800068  00800068  00001182  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001182  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000011b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000011f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bca  00000000  00000000  00001270  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c4  00000000  00000000  00001e3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003f8  00000000  00000000  000024fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000244  00000000  00000000  000028f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000054c  00000000  00000000  00002b3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000737  00000000  00000000  00003088  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  000037bf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2b 00 	jmp	0x56	; 0x56 <__ctors_end>
       4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
       8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
       c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      1c:	0c 94 44 01 	jmp	0x288	; 0x288 <__vector_7>
      20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      30:	0c 94 02 03 	jmp	0x604	; 0x604 <__vector_12>
      34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
      50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

00000054 <__ctors_start>:
      54:	03 03       	mulsu	r16, r19

00000056 <__ctors_end>:
      56:	11 24       	eor	r1, r1
      58:	1f be       	out	0x3f, r1	; 63
      5a:	cf e5       	ldi	r28, 0x5F	; 95
      5c:	d8 e0       	ldi	r29, 0x08	; 8
      5e:	de bf       	out	0x3e, r29	; 62
      60:	cd bf       	out	0x3d, r28	; 61

00000062 <__do_copy_data>:
      62:	10 e0       	ldi	r17, 0x00	; 0
      64:	a0 e6       	ldi	r26, 0x60	; 96
      66:	b0 e0       	ldi	r27, 0x00	; 0
      68:	e6 ee       	ldi	r30, 0xE6	; 230
      6a:	f0 e1       	ldi	r31, 0x10	; 16
      6c:	02 c0       	rjmp	.+4      	; 0x72 <__do_copy_data+0x10>
      6e:	05 90       	lpm	r0, Z+
      70:	0d 92       	st	X+, r0
      72:	a8 36       	cpi	r26, 0x68	; 104
      74:	b1 07       	cpc	r27, r17
      76:	d9 f7       	brne	.-10     	; 0x6e <__do_copy_data+0xc>

00000078 <__do_clear_bss>:
      78:	20 e0       	ldi	r18, 0x00	; 0
      7a:	a8 e6       	ldi	r26, 0x68	; 104
      7c:	b0 e0       	ldi	r27, 0x00	; 0
      7e:	01 c0       	rjmp	.+2      	; 0x82 <.do_clear_bss_start>

00000080 <.do_clear_bss_loop>:
      80:	1d 92       	st	X+, r1

00000082 <.do_clear_bss_start>:
      82:	a4 3b       	cpi	r26, 0xB4	; 180
      84:	b2 07       	cpc	r27, r18
      86:	e1 f7       	brne	.-8      	; 0x80 <.do_clear_bss_loop>

00000088 <__do_global_ctors>:
      88:	10 e0       	ldi	r17, 0x00	; 0
      8a:	cb e2       	ldi	r28, 0x2B	; 43
      8c:	d0 e0       	ldi	r29, 0x00	; 0
      8e:	04 c0       	rjmp	.+8      	; 0x98 <__do_global_ctors+0x10>
      90:	21 97       	sbiw	r28, 0x01	; 1
      92:	fe 01       	movw	r30, r28
      94:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <__tablejump2__>
      98:	ca 32       	cpi	r28, 0x2A	; 42
      9a:	d1 07       	cpc	r29, r17
      9c:	c9 f7       	brne	.-14     	; 0x90 <__do_global_ctors+0x8>
      9e:	0e 94 2f 01 	call	0x25e	; 0x25e <main>
      a2:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <_exit>

000000a6 <__bad_interrupt>:
      a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <_Z8SPI_initv>:
{
	unsigned char MSdata = ((data>>8) & 0x00FF);  	//filter out MS
	unsigned char LSdata = (data & 0x00FF);			//filter out LS
	UART_send(MSdata);
	UART_send(LSdata);
}
      aa:	81 ea       	ldi	r24, 0xA1	; 161
      ac:	87 bb       	out	0x17, r24	; 23
      ae:	81 e1       	ldi	r24, 0x11	; 17
      b0:	88 bb       	out	0x18, r24	; 24
      b2:	89 ed       	ldi	r24, 0xD9	; 217
      b4:	8d b9       	out	0x0d, r24	; 13
      b6:	08 95       	ret

000000b8 <_Z9UART_initv>:
      b8:	10 bc       	out	0x20, r1	; 32
      ba:	8f e5       	ldi	r24, 0x5F	; 95
      bc:	89 b9       	out	0x09, r24	; 9
      be:	88 e1       	ldi	r24, 0x18	; 24
      c0:	8a b9       	out	0x0a, r24	; 10
      c2:	8e e8       	ldi	r24, 0x8E	; 142
      c4:	80 bd       	out	0x20, r24	; 32
      c6:	08 95       	ret

000000c8 <_Z12SPI_transferh>:
      c8:	8f b9       	out	0x0f, r24	; 15
      ca:	77 9b       	sbis	0x0e, 7	; 14
      cc:	fe cf       	rjmp	.-4      	; 0xca <_Z12SPI_transferh+0x2>
      ce:	08 95       	ret

000000d0 <_Z11SPI_write16t>:

void SPI_write16 (unsigned short data)    			//send a 16bit word and use f sync
{  
      d0:	cf 93       	push	r28
      d2:	c8 2f       	mov	r28, r24
	unsigned char MSdata = ((data>>8) & 0x00FF);  	//filter out MS
	unsigned char LSdata = (data & 0x00FF);			//filter out LS
	PORTB &= ~(1<<PINB0);						    //F sync Low --> begin frame
      d4:	c0 98       	cbi	0x18, 0	; 24
	SPI_transfer(MSdata);							
      d6:	89 2f       	mov	r24, r25
      d8:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z12SPI_transferh>
	SPI_transfer(LSdata);
      dc:	8c 2f       	mov	r24, r28
      de:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z12SPI_transferh>
	PORTB |= (1<<PINB0);						    //F sync High --> End of frame
      e2:	c0 9a       	sbi	0x18, 0	; 24
}
      e4:	cf 91       	pop	r28
      e6:	08 95       	ret

000000e8 <_Z10Set_AD9833fj>:

void Set_AD9833(float frequency, unsigned int phase)
{
      e8:	cf 92       	push	r12
      ea:	df 92       	push	r13
      ec:	ef 92       	push	r14
      ee:	ff 92       	push	r15
      f0:	0f 93       	push	r16
      f2:	1f 93       	push	r17
      f4:	cf 93       	push	r28
      f6:	df 93       	push	r29
      f8:	8a 01       	movw	r16, r20
	long FreqReg = (frequency*pow(2,28))/(float)Fmclk;	  //Calculate frequency to be sent to AD9833
      fa:	20 e0       	ldi	r18, 0x00	; 0
      fc:	30 e0       	ldi	r19, 0x00	; 0
      fe:	40 e8       	ldi	r20, 0x80	; 128
     100:	5d e4       	ldi	r21, 0x4D	; 77
     102:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     106:	20 e2       	ldi	r18, 0x20	; 32
     108:	3c eb       	ldi	r19, 0xBC	; 188
     10a:	4e eb       	ldi	r20, 0xBE	; 190
     10c:	5b e4       	ldi	r21, 0x4B	; 75
     10e:	0e 94 1a 06 	call	0xc34	; 0xc34 <__divsf3>
     112:	0e 94 8c 06 	call	0xd18	; 0xd18 <__fixsfsi>
	int MSB = (int)((FreqReg &  0xFFFC000) >> 14);		   //Extract first 14 bits of FreqReg and place them at last 14 bits of MSB
     116:	6b 01       	movw	r12, r22
     118:	7c 01       	movw	r14, r24
     11a:	cc 24       	eor	r12, r12
     11c:	20 ec       	ldi	r18, 0xC0	; 192
     11e:	d2 22       	and	r13, r18
     120:	2f e0       	ldi	r18, 0x0F	; 15
     122:	f2 22       	and	r15, r18
     124:	0b 2e       	mov	r0, r27
     126:	be e0       	ldi	r27, 0x0E	; 14
     128:	f5 94       	asr	r15
     12a:	e7 94       	ror	r14
     12c:	d7 94       	ror	r13
     12e:	c7 94       	ror	r12
     130:	ba 95       	dec	r27
     132:	d1 f7       	brne	.-12     	; 0x128 <_Z10Set_AD9833fj+0x40>
     134:	b0 2d       	mov	r27, r0
	int LSB = (int)((FreqReg & 0x3FFF));				  //Extract last 14 bits of FreqReg and place them at last 14 bits of MSB	
     136:	eb 01       	movw	r28, r22
     138:	df 73       	andi	r29, 0x3F	; 63
	MSB|=0x4000;										  //Set D14,D15 = (1,0) for using FREQ0 registers, MSB has all 16 bits set
	LSB|=0x4000;     									  //Set D14,D15 = (1,0) for using FREQ0 registers, LSB has all 16 bits set
	SPI_write16(0x2100);								  //define waveform and set reset bit
     13a:	80 e0       	ldi	r24, 0x00	; 0
     13c:	91 e2       	ldi	r25, 0x21	; 33
     13e:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z11SPI_write16t>
	SPI_write16(LSB);									  //Write LSBs
     142:	ce 01       	movw	r24, r28
     144:	90 64       	ori	r25, 0x40	; 64
     146:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z11SPI_write16t>
	SPI_write16(MSB);									  //Write MSBs
     14a:	c6 01       	movw	r24, r12
     14c:	90 64       	ori	r25, 0x40	; 64
     14e:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z11SPI_write16t>
	phase&=0x0FFF;
     152:	c8 01       	movw	r24, r16
     154:	9f 70       	andi	r25, 0x0F	; 15
	phase|=0xC000;
	//SPI_write16(0xC000);								  //Mode selection for writing to phase register bit, selection of PHASE0 register (Needs to be fixed)
	SPI_write16(phase);
     156:	90 6c       	ori	r25, 0xC0	; 192
     158:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z11SPI_write16t>
	SPI_write16(0x2000);                                                                                                                                                                                                                                                                                
     15c:	80 e0       	ldi	r24, 0x00	; 0
     15e:	90 e2       	ldi	r25, 0x20	; 32
     160:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z11SPI_write16t>
}
     164:	df 91       	pop	r29
     166:	cf 91       	pop	r28
     168:	1f 91       	pop	r17
     16a:	0f 91       	pop	r16
     16c:	ff 90       	pop	r15
     16e:	ef 90       	pop	r14
     170:	df 90       	pop	r13
     172:	cf 90       	pop	r12
     174:	08 95       	ret

00000176 <_Z8getphasefff>:

unsigned int getphase(float pphase,float freq, float time)
{
     176:	4f 92       	push	r4
     178:	5f 92       	push	r5
     17a:	6f 92       	push	r6
     17c:	7f 92       	push	r7
     17e:	8f 92       	push	r8
     180:	9f 92       	push	r9
     182:	af 92       	push	r10
     184:	bf 92       	push	r11
     186:	cf 92       	push	r12
     188:	df 92       	push	r13
     18a:	ef 92       	push	r14
     18c:	ff 92       	push	r15
     18e:	0f 93       	push	r16
     190:	1f 93       	push	r17
     192:	cf 93       	push	r28
     194:	df 93       	push	r29
     196:	00 d0       	rcall	.+0      	; 0x198 <_Z8getphasefff+0x22>
     198:	00 d0       	rcall	.+0      	; 0x19a <_Z8getphasefff+0x24>
     19a:	cd b7       	in	r28, 0x3d	; 61
     19c:	de b7       	in	r29, 0x3e	; 62
     19e:	2b 01       	movw	r4, r22
     1a0:	3c 01       	movw	r6, r24
     1a2:	49 01       	movw	r8, r18
     1a4:	5a 01       	movw	r10, r20
     1a6:	67 01       	movw	r12, r14
     1a8:	78 01       	movw	r14, r16
	time/=1000000;
	pphase/=2048/PI;
	float ph=((fmod(time,(1/freq))*2*PI*freq)+pphase)*2048/PI;
     1aa:	60 e0       	ldi	r22, 0x00	; 0
     1ac:	70 e0       	ldi	r23, 0x00	; 0
     1ae:	80 e8       	ldi	r24, 0x80	; 128
     1b0:	9f e3       	ldi	r25, 0x3F	; 63
     1b2:	0e 94 1a 06 	call	0xc34	; 0xc34 <__divsf3>
     1b6:	69 83       	std	Y+1, r22	; 0x01
     1b8:	7a 83       	std	Y+2, r23	; 0x02
     1ba:	8b 83       	std	Y+3, r24	; 0x03
     1bc:	9c 83       	std	Y+4, r25	; 0x04
     1be:	20 e0       	ldi	r18, 0x00	; 0
     1c0:	34 e2       	ldi	r19, 0x24	; 36
     1c2:	44 e7       	ldi	r20, 0x74	; 116
     1c4:	59 e4       	ldi	r21, 0x49	; 73
     1c6:	c7 01       	movw	r24, r14
     1c8:	b6 01       	movw	r22, r12
     1ca:	0e 94 1a 06 	call	0xc34	; 0xc34 <__divsf3>
     1ce:	29 81       	ldd	r18, Y+1	; 0x01
     1d0:	3a 81       	ldd	r19, Y+2	; 0x02
     1d2:	4b 81       	ldd	r20, Y+3	; 0x03
     1d4:	5c 81       	ldd	r21, Y+4	; 0x04
     1d6:	0e 94 0a 07 	call	0xe14	; 0xe14 <fmod>
	return (unsigned int) ph;
     1da:	9b 01       	movw	r18, r22
     1dc:	ac 01       	movw	r20, r24
     1de:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     1e2:	20 ed       	ldi	r18, 0xD0	; 208
     1e4:	3f e0       	ldi	r19, 0x0F	; 15
     1e6:	49 e4       	ldi	r20, 0x49	; 73
     1e8:	50 e4       	ldi	r21, 0x40	; 64
     1ea:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     1ee:	a5 01       	movw	r20, r10
     1f0:	94 01       	movw	r18, r8
     1f2:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     1f6:	6b 01       	movw	r12, r22
     1f8:	7c 01       	movw	r14, r24
     1fa:	2c e8       	ldi	r18, 0x8C	; 140
     1fc:	39 ef       	ldi	r19, 0xF9	; 249
     1fe:	42 e2       	ldi	r20, 0x22	; 34
     200:	54 e4       	ldi	r21, 0x44	; 68
     202:	c3 01       	movw	r24, r6
     204:	b2 01       	movw	r22, r4
     206:	0e 94 1a 06 	call	0xc34	; 0xc34 <__divsf3>
     20a:	9b 01       	movw	r18, r22
     20c:	ac 01       	movw	r20, r24
     20e:	c7 01       	movw	r24, r14
     210:	b6 01       	movw	r22, r12
     212:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     216:	20 e0       	ldi	r18, 0x00	; 0
     218:	30 e0       	ldi	r19, 0x00	; 0
     21a:	40 e0       	ldi	r20, 0x00	; 0
     21c:	55 e4       	ldi	r21, 0x45	; 69
     21e:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     222:	20 ed       	ldi	r18, 0xD0	; 208
     224:	3f e0       	ldi	r19, 0x0F	; 15
     226:	49 e4       	ldi	r20, 0x49	; 73
     228:	50 e4       	ldi	r21, 0x40	; 64
     22a:	0e 94 1a 06 	call	0xc34	; 0xc34 <__divsf3>
     22e:	0e 94 93 06 	call	0xd26	; 0xd26 <__fixunssfsi>
}
     232:	cb 01       	movw	r24, r22
     234:	0f 90       	pop	r0
     236:	0f 90       	pop	r0
     238:	0f 90       	pop	r0
     23a:	0f 90       	pop	r0
     23c:	df 91       	pop	r29
     23e:	cf 91       	pop	r28
     240:	1f 91       	pop	r17
     242:	0f 91       	pop	r16
     244:	ff 90       	pop	r15
     246:	ef 90       	pop	r14
     248:	df 90       	pop	r13
     24a:	cf 90       	pop	r12
     24c:	bf 90       	pop	r11
     24e:	af 90       	pop	r10
     250:	9f 90       	pop	r9
     252:	8f 90       	pop	r8
     254:	7f 90       	pop	r7
     256:	6f 90       	pop	r6
     258:	5f 90       	pop	r5
     25a:	4f 90       	pop	r4
     25c:	08 95       	ret

0000025e <main>:
volatile float freqRY2 =  1500 + (RY2 * 3.1372549);		//2252.94118(red)  1606.66667(green)	1845.09804(blue)
volatile float freqBY2 =  1500 + (BY2 * 3.1372549);		//1782.35294(red)	1669.41177(green)	2252.94118(blue)

int main(void)
{
	UART_init();
     25e:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Z9UART_initv>
	SPI_init();
     262:	0e 94 55 00 	call	0xaa	; 0xaa <_Z8SPI_initv>
	DDRA=(1<<PINA0)|(1<<PINA1)|(1<<PINA2);			//output pins for LEDs
     266:	87 e0       	ldi	r24, 0x07	; 7
     268:	8a bb       	out	0x1a, r24	; 26
	TCCR1A=0;
     26a:	1f bc       	out	0x2f, r1	; 47
	PORTA=0;
     26c:	1b ba       	out	0x1b, r1	; 27
	// // 	UART_send(contnext);
	// 	}
	//////////////////////////////////////////////////////////////////////////
	

	SPI_write16(0x100);								//Reset AD9833 
     26e:	80 e0       	ldi	r24, 0x00	; 0
     270:	91 e0       	ldi	r25, 0x01	; 1
     272:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z11SPI_write16t>
// }
// 
// 	}
// 
// Set_AD9833(0x00,0);
Set_AD9833(2300,0);
     276:	40 e0       	ldi	r20, 0x00	; 0
     278:	50 e0       	ldi	r21, 0x00	; 0
     27a:	60 e0       	ldi	r22, 0x00	; 0
     27c:	70 ec       	ldi	r23, 0xC0	; 192
     27e:	8f e0       	ldi	r24, 0x0F	; 15
     280:	95 e4       	ldi	r25, 0x45	; 69
     282:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833fj>
     286:	ff cf       	rjmp	.-2      	; 0x286 <main+0x28>

00000288 <__vector_7>:
	}

}

ISR(TIMER1_COMPA_vect)
{
     288:	1f 92       	push	r1
     28a:	0f 92       	push	r0
     28c:	0f b6       	in	r0, 0x3f	; 63
     28e:	0f 92       	push	r0
     290:	11 24       	eor	r1, r1
     292:	8f 92       	push	r8
     294:	9f 92       	push	r9
     296:	af 92       	push	r10
     298:	bf 92       	push	r11
     29a:	cf 92       	push	r12
     29c:	df 92       	push	r13
     29e:	ef 92       	push	r14
     2a0:	ff 92       	push	r15
     2a2:	0f 93       	push	r16
     2a4:	1f 93       	push	r17
     2a6:	2f 93       	push	r18
     2a8:	3f 93       	push	r19
     2aa:	4f 93       	push	r20
     2ac:	5f 93       	push	r21
     2ae:	6f 93       	push	r22
     2b0:	7f 93       	push	r23
     2b2:	8f 93       	push	r24
     2b4:	9f 93       	push	r25
     2b6:	af 93       	push	r26
     2b8:	bf 93       	push	r27
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	ef 93       	push	r30
     2c0:	ff 93       	push	r31
	if(compare==0)
     2c2:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <compare>
     2c6:	90 91 a1 00 	lds	r25, 0x00A1	; 0x8000a1 <compare+0x1>
     2ca:	89 2b       	or	r24, r25
     2cc:	99 f4       	brne	.+38     	; 0x2f4 <__vector_7+0x6c>
	{
		Set_AD9833(global_frequency,next_phase);
     2ce:	40 91 a4 00 	lds	r20, 0x00A4	; 0x8000a4 <next_phase>
     2d2:	50 91 a5 00 	lds	r21, 0x00A5	; 0x8000a5 <next_phase+0x1>
     2d6:	60 91 ae 00 	lds	r22, 0x00AE	; 0x8000ae <global_frequency>
     2da:	70 91 af 00 	lds	r23, 0x00AF	; 0x8000af <global_frequency+0x1>
     2de:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <global_frequency+0x2>
     2e2:	90 91 b1 00 	lds	r25, 0x00B1	; 0x8000b1 <global_frequency+0x3>
     2e6:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z10Set_AD9833fj>
		notSet=0;
     2ea:	10 92 9f 00 	sts	0x009F, r1	; 0x80009f <notSet+0x1>
     2ee:	10 92 9e 00 	sts	0x009E, r1	; 0x80009e <notSet>
     2f2:	09 c0       	rjmp	.+18     	; 0x306 <__vector_7+0x7e>
	}
	else
	{
		notSet++;
     2f4:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <notSet>
     2f8:	90 91 9f 00 	lds	r25, 0x009F	; 0x80009f <notSet+0x1>
     2fc:	01 96       	adiw	r24, 0x01	; 1
     2fe:	90 93 9f 00 	sts	0x009F, r25	; 0x80009f <notSet+0x1>
     302:	80 93 9e 00 	sts	0x009E, r24	; 0x80009e <notSet>
	}
//	Set_AD9833(global_frequency,next_phase);	          
	prev_phase=next_phase;
     306:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <next_phase>
     30a:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <next_phase+0x1>
     30e:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <prev_phase+0x1>
     312:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <prev_phase>
	prev_freq = global_frequency;	
     316:	80 91 ae 00 	lds	r24, 0x00AE	; 0x8000ae <global_frequency>
     31a:	90 91 af 00 	lds	r25, 0x00AF	; 0x8000af <global_frequency+0x1>
     31e:	a0 91 b0 00 	lds	r26, 0x00B0	; 0x8000b0 <global_frequency+0x2>
     322:	b0 91 b1 00 	lds	r27, 0x00B1	; 0x8000b1 <global_frequency+0x3>
     326:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <prev_freq>
     32a:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <prev_freq+0x1>
     32e:	a0 93 ac 00 	sts	0x00AC, r26	; 0x8000ac <prev_freq+0x2>
     332:	b0 93 ad 00 	sts	0x00AD, r27	; 0x8000ad <prev_freq+0x3>
// 	if(cont==319) global_frequency = freqRY1;
// 	else if(cont==639) global_frequency = freqBY1;
// 	else if(cont==959) global_frequency = freqY1;
	if(((cont-2)%20)==0) 
     336:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <cont>
     33a:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <cont+0x1>
     33e:	02 97       	sbiw	r24, 0x02	; 2
     340:	64 e1       	ldi	r22, 0x14	; 20
     342:	70 e0       	ldi	r23, 0x00	; 0
     344:	0e 94 43 08 	call	0x1086	; 0x1086 <__divmodhi4>
     348:	89 2b       	or	r24, r25
     34a:	09 f0       	breq	.+2      	; 0x34e <__vector_7+0xc6>
     34c:	db c0       	rjmp	.+438    	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
	{
		t = (cont-2)/20;
     34e:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <cont>
     352:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <cont+0x1>
     356:	02 97       	sbiw	r24, 0x02	; 2
     358:	64 e1       	ldi	r22, 0x14	; 20
     35a:	70 e0       	ldi	r23, 0x00	; 0
     35c:	0e 94 43 08 	call	0x1086	; 0x1086 <__divmodhi4>
     360:	70 93 a3 00 	sts	0x00A3, r23	; 0x8000a3 <t+0x1>
     364:	60 93 a2 00 	sts	0x00A2, r22	; 0x8000a2 <t>
		if((t%2)==0)
     368:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <t>
     36c:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <t+0x1>
     370:	80 fd       	sbrc	r24, 0
     372:	5d c0       	rjmp	.+186    	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
		{
			if(t<15) global_frequency = freqY1;
     374:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <t>
     378:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <t+0x1>
     37c:	0f 97       	sbiw	r24, 0x0f	; 15
     37e:	8c f4       	brge	.+34     	; 0x3a2 <__vector_7+0x11a>
     380:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <freqY1>
     384:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <freqY1+0x1>
     388:	a0 91 8a 00 	lds	r26, 0x008A	; 0x80008a <freqY1+0x2>
     38c:	b0 91 8b 00 	lds	r27, 0x008B	; 0x80008b <freqY1+0x3>
     390:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <global_frequency>
     394:	90 93 af 00 	sts	0x00AF, r25	; 0x8000af <global_frequency+0x1>
     398:	a0 93 b0 00 	sts	0x00B0, r26	; 0x8000b0 <global_frequency+0x2>
     39c:	b0 93 b1 00 	sts	0x00B1, r27	; 0x8000b1 <global_frequency+0x3>
     3a0:	b1 c0       	rjmp	.+354    	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
			else if(t<31) global_frequency = freqRY1;
     3a2:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <t>
     3a6:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <t+0x1>
     3aa:	4f 97       	sbiw	r24, 0x1f	; 31
     3ac:	8c f4       	brge	.+34     	; 0x3d0 <__vector_7+0x148>
     3ae:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <freqRY1>
     3b2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <freqRY1+0x1>
     3b6:	a0 91 86 00 	lds	r26, 0x0086	; 0x800086 <freqRY1+0x2>
     3ba:	b0 91 87 00 	lds	r27, 0x0087	; 0x800087 <freqRY1+0x3>
     3be:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <global_frequency>
     3c2:	90 93 af 00 	sts	0x00AF, r25	; 0x8000af <global_frequency+0x1>
     3c6:	a0 93 b0 00 	sts	0x00B0, r26	; 0x8000b0 <global_frequency+0x2>
     3ca:	b0 93 b1 00 	sts	0x00B1, r27	; 0x8000b1 <global_frequency+0x3>
     3ce:	9a c0       	rjmp	.+308    	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
			else if(t<47) global_frequency = freqBY1;
     3d0:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <t>
     3d4:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <t+0x1>
     3d8:	8f 97       	sbiw	r24, 0x2f	; 47
     3da:	8c f4       	brge	.+34     	; 0x3fe <__vector_7+0x176>
     3dc:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <freqBY1>
     3e0:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <freqBY1+0x1>
     3e4:	a0 91 82 00 	lds	r26, 0x0082	; 0x800082 <freqBY1+0x2>
     3e8:	b0 91 83 00 	lds	r27, 0x0083	; 0x800083 <freqBY1+0x3>
     3ec:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <global_frequency>
     3f0:	90 93 af 00 	sts	0x00AF, r25	; 0x8000af <global_frequency+0x1>
     3f4:	a0 93 b0 00 	sts	0x00B0, r26	; 0x8000b0 <global_frequency+0x2>
     3f8:	b0 93 b1 00 	sts	0x00B1, r27	; 0x8000b1 <global_frequency+0x3>
     3fc:	83 c0       	rjmp	.+262    	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
			else if(t<63) global_frequency = freqY1;
     3fe:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <t>
     402:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <t+0x1>
     406:	cf 97       	sbiw	r24, 0x3f	; 63
     408:	0c f0       	brlt	.+2      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     40a:	7c c0       	rjmp	.+248    	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
     40c:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <freqY1>
     410:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <freqY1+0x1>
     414:	a0 91 8a 00 	lds	r26, 0x008A	; 0x80008a <freqY1+0x2>
     418:	b0 91 8b 00 	lds	r27, 0x008B	; 0x80008b <freqY1+0x3>
     41c:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <global_frequency>
     420:	90 93 af 00 	sts	0x00AF, r25	; 0x8000af <global_frequency+0x1>
     424:	a0 93 b0 00 	sts	0x00B0, r26	; 0x8000b0 <global_frequency+0x2>
     428:	b0 93 b1 00 	sts	0x00B1, r27	; 0x8000b1 <global_frequency+0x3>
     42c:	6b c0       	rjmp	.+214    	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
		}
		else if((t%2)==1)
     42e:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <t>
     432:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <t+0x1>
     436:	81 70       	andi	r24, 0x01	; 1
     438:	90 78       	andi	r25, 0x80	; 128
     43a:	99 23       	and	r25, r25
     43c:	24 f4       	brge	.+8      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
     43e:	01 97       	sbiw	r24, 0x01	; 1
     440:	8e 6f       	ori	r24, 0xFE	; 254
     442:	9f 6f       	ori	r25, 0xFF	; 255
     444:	01 96       	adiw	r24, 0x01	; 1
     446:	01 97       	sbiw	r24, 0x01	; 1
     448:	09 f0       	breq	.+2      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     44a:	5c c0       	rjmp	.+184    	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
		{
			if(t<16) global_frequency = freqY2;
     44c:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <t>
     450:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <t+0x1>
     454:	40 97       	sbiw	r24, 0x10	; 16
     456:	8c f4       	brge	.+34     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
     458:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <freqY2>
     45c:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <freqY2+0x1>
     460:	a0 91 72 00 	lds	r26, 0x0072	; 0x800072 <freqY2+0x2>
     464:	b0 91 73 00 	lds	r27, 0x0073	; 0x800073 <freqY2+0x3>
     468:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <global_frequency>
     46c:	90 93 af 00 	sts	0x00AF, r25	; 0x8000af <global_frequency+0x1>
     470:	a0 93 b0 00 	sts	0x00B0, r26	; 0x8000b0 <global_frequency+0x2>
     474:	b0 93 b1 00 	sts	0x00B1, r27	; 0x8000b1 <global_frequency+0x3>
     478:	45 c0       	rjmp	.+138    	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
			else if(t<32) global_frequency = freqRY2;
     47a:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <t>
     47e:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <t+0x1>
     482:	80 97       	sbiw	r24, 0x20	; 32
     484:	8c f4       	brge	.+34     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
     486:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <freqRY2>
     48a:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <freqRY2+0x1>
     48e:	a0 91 6e 00 	lds	r26, 0x006E	; 0x80006e <freqRY2+0x2>
     492:	b0 91 6f 00 	lds	r27, 0x006F	; 0x80006f <freqRY2+0x3>
     496:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <global_frequency>
     49a:	90 93 af 00 	sts	0x00AF, r25	; 0x8000af <global_frequency+0x1>
     49e:	a0 93 b0 00 	sts	0x00B0, r26	; 0x8000b0 <global_frequency+0x2>
     4a2:	b0 93 b1 00 	sts	0x00B1, r27	; 0x8000b1 <global_frequency+0x3>
     4a6:	2e c0       	rjmp	.+92     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
			else if(t<48) global_frequency = freqBY2;
     4a8:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <t>
     4ac:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <t+0x1>
     4b0:	c0 97       	sbiw	r24, 0x30	; 48
     4b2:	8c f4       	brge	.+34     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
     4b4:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_end>
     4b8:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <__data_end+0x1>
     4bc:	a0 91 6a 00 	lds	r26, 0x006A	; 0x80006a <__data_end+0x2>
     4c0:	b0 91 6b 00 	lds	r27, 0x006B	; 0x80006b <__data_end+0x3>
     4c4:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <global_frequency>
     4c8:	90 93 af 00 	sts	0x00AF, r25	; 0x8000af <global_frequency+0x1>
     4cc:	a0 93 b0 00 	sts	0x00B0, r26	; 0x8000b0 <global_frequency+0x2>
     4d0:	b0 93 b1 00 	sts	0x00B1, r27	; 0x8000b1 <global_frequency+0x3>
     4d4:	17 c0       	rjmp	.+46     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
			else if(t<64) global_frequency = freqY2;
     4d6:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <t>
     4da:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <t+0x1>
     4de:	80 34       	cpi	r24, 0x40	; 64
     4e0:	91 05       	cpc	r25, r1
     4e2:	84 f4       	brge	.+32     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
     4e4:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <freqY2>
     4e8:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <freqY2+0x1>
     4ec:	a0 91 72 00 	lds	r26, 0x0072	; 0x800072 <freqY2+0x2>
     4f0:	b0 91 73 00 	lds	r27, 0x0073	; 0x800073 <freqY2+0x3>
     4f4:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <global_frequency>
     4f8:	90 93 af 00 	sts	0x00AF, r25	; 0x8000af <global_frequency+0x1>
     4fc:	a0 93 b0 00 	sts	0x00B0, r26	; 0x8000b0 <global_frequency+0x2>
     500:	b0 93 b1 00 	sts	0x00B1, r27	; 0x8000b1 <global_frequency+0x3>
		}
	}
	next_phase = getphase(prev_phase,prev_freq,(532*notSet));		//calculation of phase to be added in new wave
     504:	20 91 9e 00 	lds	r18, 0x009E	; 0x80009e <notSet>
     508:	30 91 9f 00 	lds	r19, 0x009F	; 0x80009f <notSet+0x1>
     50c:	80 90 aa 00 	lds	r8, 0x00AA	; 0x8000aa <prev_freq>
     510:	90 90 ab 00 	lds	r9, 0x00AB	; 0x8000ab <prev_freq+0x1>
     514:	a0 90 ac 00 	lds	r10, 0x00AC	; 0x8000ac <prev_freq+0x2>
     518:	b0 90 ad 00 	lds	r11, 0x00AD	; 0x8000ad <prev_freq+0x3>
     51c:	c0 91 a6 00 	lds	r28, 0x00A6	; 0x8000a6 <prev_phase>
     520:	d0 91 a7 00 	lds	r29, 0x00A7	; 0x8000a7 <prev_phase+0x1>
     524:	84 e1       	ldi	r24, 0x14	; 20
     526:	92 e0       	ldi	r25, 0x02	; 2
     528:	28 9f       	mul	r18, r24
     52a:	b0 01       	movw	r22, r0
     52c:	29 9f       	mul	r18, r25
     52e:	70 0d       	add	r23, r0
     530:	38 9f       	mul	r19, r24
     532:	70 0d       	add	r23, r0
     534:	11 24       	eor	r1, r1
     536:	07 2e       	mov	r0, r23
     538:	00 0c       	add	r0, r0
     53a:	88 0b       	sbc	r24, r24
     53c:	99 0b       	sbc	r25, r25
     53e:	0e 94 c4 06 	call	0xd88	; 0xd88 <__floatsisf>
     542:	6b 01       	movw	r12, r22
     544:	7c 01       	movw	r14, r24
     546:	be 01       	movw	r22, r28
     548:	80 e0       	ldi	r24, 0x00	; 0
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	0e 94 c2 06 	call	0xd84	; 0xd84 <__floatunsisf>
     550:	87 01       	movw	r16, r14
     552:	76 01       	movw	r14, r12
     554:	a5 01       	movw	r20, r10
     556:	94 01       	movw	r18, r8
     558:	0e 94 bb 00 	call	0x176	; 0x176 <_Z8getphasefff>
     55c:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <next_phase+0x1>
     560:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <next_phase>
	cont++;
     564:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <cont>
     568:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <cont+0x1>
     56c:	01 96       	adiw	r24, 0x01	; 1
     56e:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <cont+0x1>
     572:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <cont>
	if (global_frequency==prev_freq) compare=1;
     576:	60 91 ae 00 	lds	r22, 0x00AE	; 0x8000ae <global_frequency>
     57a:	70 91 af 00 	lds	r23, 0x00AF	; 0x8000af <global_frequency+0x1>
     57e:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <global_frequency+0x2>
     582:	90 91 b1 00 	lds	r25, 0x00B1	; 0x8000b1 <global_frequency+0x3>
     586:	20 91 aa 00 	lds	r18, 0x00AA	; 0x8000aa <prev_freq>
     58a:	30 91 ab 00 	lds	r19, 0x00AB	; 0x8000ab <prev_freq+0x1>
     58e:	40 91 ac 00 	lds	r20, 0x00AC	; 0x8000ac <prev_freq+0x2>
     592:	50 91 ad 00 	lds	r21, 0x00AD	; 0x8000ad <prev_freq+0x3>
     596:	0e 94 15 06 	call	0xc2a	; 0xc2a <__cmpsf2>
     59a:	81 11       	cpse	r24, r1
     59c:	07 c0       	rjmp	.+14     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
     59e:	81 e0       	ldi	r24, 0x01	; 1
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	90 93 a1 00 	sts	0x00A1, r25	; 0x8000a1 <compare+0x1>
     5a6:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <compare>
     5aa:	04 c0       	rjmp	.+8      	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
	else compare =0;
     5ac:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <compare+0x1>
     5b0:	10 92 a0 00 	sts	0x00A0, r1	; 0x8000a0 <compare>
	if (cont==1280) compare=0;
     5b4:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <cont>
     5b8:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <cont+0x1>
     5bc:	81 15       	cp	r24, r1
     5be:	95 40       	sbci	r25, 0x05	; 5
     5c0:	21 f4       	brne	.+8      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
     5c2:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <compare+0x1>
     5c6:	10 92 a0 00 	sts	0x00A0, r1	; 0x8000a0 <compare>

}
     5ca:	ff 91       	pop	r31
     5cc:	ef 91       	pop	r30
     5ce:	df 91       	pop	r29
     5d0:	cf 91       	pop	r28
     5d2:	bf 91       	pop	r27
     5d4:	af 91       	pop	r26
     5d6:	9f 91       	pop	r25
     5d8:	8f 91       	pop	r24
     5da:	7f 91       	pop	r23
     5dc:	6f 91       	pop	r22
     5de:	5f 91       	pop	r21
     5e0:	4f 91       	pop	r20
     5e2:	3f 91       	pop	r19
     5e4:	2f 91       	pop	r18
     5e6:	1f 91       	pop	r17
     5e8:	0f 91       	pop	r16
     5ea:	ff 90       	pop	r15
     5ec:	ef 90       	pop	r14
     5ee:	df 90       	pop	r13
     5f0:	cf 90       	pop	r12
     5f2:	bf 90       	pop	r11
     5f4:	af 90       	pop	r10
     5f6:	9f 90       	pop	r9
     5f8:	8f 90       	pop	r8
     5fa:	0f 90       	pop	r0
     5fc:	0f be       	out	0x3f, r0	; 63
     5fe:	0f 90       	pop	r0
     600:	1f 90       	pop	r1
     602:	18 95       	reti

00000604 <__vector_12>:
	
     604:	18 95       	reti

00000606 <_GLOBAL__sub_I_TEMP>:
     606:	4f 92       	push	r4
     608:	5f 92       	push	r5
     60a:	6f 92       	push	r6
     60c:	7f 92       	push	r7
     60e:	8f 92       	push	r8
     610:	9f 92       	push	r9
     612:	af 92       	push	r10
     614:	bf 92       	push	r11
     616:	cf 92       	push	r12
     618:	df 92       	push	r13
     61a:	ef 92       	push	r14
     61c:	ff 92       	push	r15
     61e:	cf 93       	push	r28
     620:	df 93       	push	r29
     622:	cd b7       	in	r28, 0x3d	; 61
     624:	de b7       	in	r29, 0x3e	; 62
     626:	28 97       	sbiw	r28, 0x08	; 8
     628:	0f b6       	in	r0, 0x3f	; 63
     62a:	f8 94       	cli
     62c:	de bf       	out	0x3e, r29	; 62
     62e:	0f be       	out	0x3f, r0	; 63
     630:	cd bf       	out	0x3d, r28	; 61
#include <math.h>
#include <avr/interrupt.h>
#include <util/atomic.h>

int TEMP = ((((F_CPU)/(TIMER1_PRESCALER*1000000))*560.5)-1);			//Counter Cycles for required time557
int TICKS = 65535-TEMP;												//Value for TCNT1 to implement timing by overflow
     632:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <TEMP>
     636:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <TEMP+0x1>
     63a:	80 95       	com	r24
     63c:	90 95       	com	r25
     63e:	90 93 b3 00 	sts	0x00B3, r25	; 0x8000b3 <TICKS+0x1>
     642:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <TICKS>
	return (unsigned int) ph;
}

//color conversion from RGB to Y/RY/BY
int R1=0,G1=0,B1=0;
float Y1 = 16.0 + (.003906 * ((65.738 * R1) + (129.057 * G1) + (25.064 * B1)));
     646:	60 91 9c 00 	lds	r22, 0x009C	; 0x80009c <R1>
     64a:	70 91 9d 00 	lds	r23, 0x009D	; 0x80009d <R1+0x1>
     64e:	07 2e       	mov	r0, r23
     650:	00 0c       	add	r0, r0
     652:	88 0b       	sbc	r24, r24
     654:	99 0b       	sbc	r25, r25
     656:	0e 94 c4 06 	call	0xd88	; 0xd88 <__floatsisf>
     65a:	69 83       	std	Y+1, r22	; 0x01
     65c:	7a 83       	std	Y+2, r23	; 0x02
     65e:	8b 83       	std	Y+3, r24	; 0x03
     660:	9c 83       	std	Y+4, r25	; 0x04
     662:	60 91 9a 00 	lds	r22, 0x009A	; 0x80009a <G1>
     666:	70 91 9b 00 	lds	r23, 0x009B	; 0x80009b <G1+0x1>
     66a:	07 2e       	mov	r0, r23
     66c:	00 0c       	add	r0, r0
     66e:	88 0b       	sbc	r24, r24
     670:	99 0b       	sbc	r25, r25
     672:	0e 94 c4 06 	call	0xd88	; 0xd88 <__floatsisf>
     676:	6d 83       	std	Y+5, r22	; 0x05
     678:	7e 83       	std	Y+6, r23	; 0x06
     67a:	8f 83       	std	Y+7, r24	; 0x07
     67c:	98 87       	std	Y+8, r25	; 0x08
     67e:	60 91 98 00 	lds	r22, 0x0098	; 0x800098 <B1>
     682:	70 91 99 00 	lds	r23, 0x0099	; 0x800099 <B1+0x1>
     686:	07 2e       	mov	r0, r23
     688:	00 0c       	add	r0, r0
     68a:	88 0b       	sbc	r24, r24
     68c:	99 0b       	sbc	r25, r25
     68e:	0e 94 c4 06 	call	0xd88	; 0xd88 <__floatsisf>
     692:	6b 01       	movw	r12, r22
     694:	7c 01       	movw	r14, r24
     696:	2b ed       	ldi	r18, 0xDB	; 219
     698:	39 e7       	ldi	r19, 0x79	; 121
     69a:	43 e8       	ldi	r20, 0x83	; 131
     69c:	52 e4       	ldi	r21, 0x42	; 66
     69e:	69 81       	ldd	r22, Y+1	; 0x01
     6a0:	7a 81       	ldd	r23, Y+2	; 0x02
     6a2:	8b 81       	ldd	r24, Y+3	; 0x03
     6a4:	9c 81       	ldd	r25, Y+4	; 0x04
     6a6:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     6aa:	4b 01       	movw	r8, r22
     6ac:	5c 01       	movw	r10, r24
     6ae:	28 e9       	ldi	r18, 0x98	; 152
     6b0:	3e e0       	ldi	r19, 0x0E	; 14
     6b2:	41 e0       	ldi	r20, 0x01	; 1
     6b4:	53 e4       	ldi	r21, 0x43	; 67
     6b6:	6d 81       	ldd	r22, Y+5	; 0x05
     6b8:	7e 81       	ldd	r23, Y+6	; 0x06
     6ba:	8f 81       	ldd	r24, Y+7	; 0x07
     6bc:	98 85       	ldd	r25, Y+8	; 0x08
     6be:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     6c2:	9b 01       	movw	r18, r22
     6c4:	ac 01       	movw	r20, r24
     6c6:	c5 01       	movw	r24, r10
     6c8:	b4 01       	movw	r22, r8
     6ca:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     6ce:	4b 01       	movw	r8, r22
     6d0:	5c 01       	movw	r10, r24
     6d2:	22 e1       	ldi	r18, 0x12	; 18
     6d4:	33 e8       	ldi	r19, 0x83	; 131
     6d6:	48 ec       	ldi	r20, 0xC8	; 200
     6d8:	51 e4       	ldi	r21, 0x41	; 65
     6da:	c7 01       	movw	r24, r14
     6dc:	b6 01       	movw	r22, r12
     6de:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     6e2:	9b 01       	movw	r18, r22
     6e4:	ac 01       	movw	r20, r24
     6e6:	c5 01       	movw	r24, r10
     6e8:	b4 01       	movw	r22, r8
     6ea:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     6ee:	2e ec       	ldi	r18, 0xCE	; 206
     6f0:	3b ef       	ldi	r19, 0xFB	; 251
     6f2:	4f e7       	ldi	r20, 0x7F	; 127
     6f4:	5b e3       	ldi	r21, 0x3B	; 59
     6f6:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     6fa:	20 e0       	ldi	r18, 0x00	; 0
     6fc:	30 e0       	ldi	r19, 0x00	; 0
     6fe:	40 e8       	ldi	r20, 0x80	; 128
     700:	51 e4       	ldi	r21, 0x41	; 65
     702:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     706:	2b 01       	movw	r4, r22
     708:	3c 01       	movw	r6, r24
     70a:	60 93 94 00 	sts	0x0094, r22	; 0x800094 <Y1>
     70e:	70 93 95 00 	sts	0x0095, r23	; 0x800095 <Y1+0x1>
     712:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <Y1+0x2>
     716:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <Y1+0x3>
float RY1 = 128.0 + (.003906 * ((112.439 * R1) + (-94.154 * G1) + (-18.285 * B1)));
     71a:	25 ec       	ldi	r18, 0xC5	; 197
     71c:	30 ee       	ldi	r19, 0xE0	; 224
     71e:	40 ee       	ldi	r20, 0xE0	; 224
     720:	52 e4       	ldi	r21, 0x42	; 66
     722:	69 81       	ldd	r22, Y+1	; 0x01
     724:	7a 81       	ldd	r23, Y+2	; 0x02
     726:	8b 81       	ldd	r24, Y+3	; 0x03
     728:	9c 81       	ldd	r25, Y+4	; 0x04
     72a:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     72e:	4b 01       	movw	r8, r22
     730:	5c 01       	movw	r10, r24
     732:	29 ed       	ldi	r18, 0xD9	; 217
     734:	3e e4       	ldi	r19, 0x4E	; 78
     736:	4c eb       	ldi	r20, 0xBC	; 188
     738:	52 ec       	ldi	r21, 0xC2	; 194
     73a:	6d 81       	ldd	r22, Y+5	; 0x05
     73c:	7e 81       	ldd	r23, Y+6	; 0x06
     73e:	8f 81       	ldd	r24, Y+7	; 0x07
     740:	98 85       	ldd	r25, Y+8	; 0x08
     742:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     746:	9b 01       	movw	r18, r22
     748:	ac 01       	movw	r20, r24
     74a:	c5 01       	movw	r24, r10
     74c:	b4 01       	movw	r22, r8
     74e:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     752:	4b 01       	movw	r8, r22
     754:	5c 01       	movw	r10, r24
     756:	2e ea       	ldi	r18, 0xAE	; 174
     758:	37 e4       	ldi	r19, 0x47	; 71
     75a:	42 e9       	ldi	r20, 0x92	; 146
     75c:	51 ec       	ldi	r21, 0xC1	; 193
     75e:	c7 01       	movw	r24, r14
     760:	b6 01       	movw	r22, r12
     762:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     766:	9b 01       	movw	r18, r22
     768:	ac 01       	movw	r20, r24
     76a:	c5 01       	movw	r24, r10
     76c:	b4 01       	movw	r22, r8
     76e:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     772:	2e ec       	ldi	r18, 0xCE	; 206
     774:	3b ef       	ldi	r19, 0xFB	; 251
     776:	4f e7       	ldi	r20, 0x7F	; 127
     778:	5b e3       	ldi	r21, 0x3B	; 59
     77a:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	30 e0       	ldi	r19, 0x00	; 0
     782:	40 e0       	ldi	r20, 0x00	; 0
     784:	53 e4       	ldi	r21, 0x43	; 67
     786:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     78a:	4b 01       	movw	r8, r22
     78c:	5c 01       	movw	r10, r24
     78e:	60 93 90 00 	sts	0x0090, r22	; 0x800090 <RY1>
     792:	70 93 91 00 	sts	0x0091, r23	; 0x800091 <RY1+0x1>
     796:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <RY1+0x2>
     79a:	90 93 93 00 	sts	0x0093, r25	; 0x800093 <RY1+0x3>
float BY1 = 128.0 + (.003906 * ((-37.945 * R1) + (-74.494 * G1) + (112.439 * B1)));
     79e:	2e ea       	ldi	r18, 0xAE	; 174
     7a0:	37 ec       	ldi	r19, 0xC7	; 199
     7a2:	47 e1       	ldi	r20, 0x17	; 23
     7a4:	52 ec       	ldi	r21, 0xC2	; 194
     7a6:	69 81       	ldd	r22, Y+1	; 0x01
     7a8:	7a 81       	ldd	r23, Y+2	; 0x02
     7aa:	8b 81       	ldd	r24, Y+3	; 0x03
     7ac:	9c 81       	ldd	r25, Y+4	; 0x04
     7ae:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     7b2:	69 83       	std	Y+1, r22	; 0x01
     7b4:	7a 83       	std	Y+2, r23	; 0x02
     7b6:	8b 83       	std	Y+3, r24	; 0x03
     7b8:	9c 83       	std	Y+4, r25	; 0x04
     7ba:	2e ee       	ldi	r18, 0xEE	; 238
     7bc:	3c ef       	ldi	r19, 0xFC	; 252
     7be:	44 e9       	ldi	r20, 0x94	; 148
     7c0:	52 ec       	ldi	r21, 0xC2	; 194
     7c2:	6d 81       	ldd	r22, Y+5	; 0x05
     7c4:	7e 81       	ldd	r23, Y+6	; 0x06
     7c6:	8f 81       	ldd	r24, Y+7	; 0x07
     7c8:	98 85       	ldd	r25, Y+8	; 0x08
     7ca:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     7ce:	9b 01       	movw	r18, r22
     7d0:	ac 01       	movw	r20, r24
     7d2:	69 81       	ldd	r22, Y+1	; 0x01
     7d4:	7a 81       	ldd	r23, Y+2	; 0x02
     7d6:	8b 81       	ldd	r24, Y+3	; 0x03
     7d8:	9c 81       	ldd	r25, Y+4	; 0x04
     7da:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     7de:	69 83       	std	Y+1, r22	; 0x01
     7e0:	7a 83       	std	Y+2, r23	; 0x02
     7e2:	8b 83       	std	Y+3, r24	; 0x03
     7e4:	9c 83       	std	Y+4, r25	; 0x04
     7e6:	25 ec       	ldi	r18, 0xC5	; 197
     7e8:	30 ee       	ldi	r19, 0xE0	; 224
     7ea:	40 ee       	ldi	r20, 0xE0	; 224
     7ec:	52 e4       	ldi	r21, 0x42	; 66
     7ee:	c7 01       	movw	r24, r14
     7f0:	b6 01       	movw	r22, r12
     7f2:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     7f6:	9b 01       	movw	r18, r22
     7f8:	ac 01       	movw	r20, r24
     7fa:	69 81       	ldd	r22, Y+1	; 0x01
     7fc:	7a 81       	ldd	r23, Y+2	; 0x02
     7fe:	8b 81       	ldd	r24, Y+3	; 0x03
     800:	9c 81       	ldd	r25, Y+4	; 0x04
     802:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     806:	2e ec       	ldi	r18, 0xCE	; 206
     808:	3b ef       	ldi	r19, 0xFB	; 251
     80a:	4f e7       	ldi	r20, 0x7F	; 127
     80c:	5b e3       	ldi	r21, 0x3B	; 59
     80e:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     812:	20 e0       	ldi	r18, 0x00	; 0
     814:	30 e0       	ldi	r19, 0x00	; 0
     816:	40 e0       	ldi	r20, 0x00	; 0
     818:	53 e4       	ldi	r21, 0x43	; 67
     81a:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     81e:	6b 01       	movw	r12, r22
     820:	7c 01       	movw	r14, r24
     822:	60 93 8c 00 	sts	0x008C, r22	; 0x80008c <BY1>
     826:	70 93 8d 00 	sts	0x008D, r23	; 0x80008d <BY1+0x1>
     82a:	80 93 8e 00 	sts	0x008E, r24	; 0x80008e <BY1+0x2>
     82e:	90 93 8f 00 	sts	0x008F, r25	; 0x80008f <BY1+0x3>
//frequency calculation and documented values
volatile float freqY1  =  1500 + (Y1 * 3.1372549);			//1757.2549(red)	1954.90196(green)	1628.62745(blue)
     832:	29 ec       	ldi	r18, 0xC9	; 201
     834:	38 ec       	ldi	r19, 0xC8	; 200
     836:	48 e4       	ldi	r20, 0x48	; 72
     838:	50 e4       	ldi	r21, 0x40	; 64
     83a:	c3 01       	movw	r24, r6
     83c:	b2 01       	movw	r22, r4
     83e:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     842:	20 e0       	ldi	r18, 0x00	; 0
     844:	30 e8       	ldi	r19, 0x80	; 128
     846:	4b eb       	ldi	r20, 0xBB	; 187
     848:	54 e4       	ldi	r21, 0x44	; 68
     84a:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     84e:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <freqY1>
     852:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <freqY1+0x1>
     856:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <freqY1+0x2>
     85a:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <freqY1+0x3>
volatile float freqRY1 =   1500 + (RY1 * 3.1372549);		//2252.94118(red)  1606.66667(green)	1845.09804(blue)
     85e:	29 ec       	ldi	r18, 0xC9	; 201
     860:	38 ec       	ldi	r19, 0xC8	; 200
     862:	48 e4       	ldi	r20, 0x48	; 72
     864:	50 e4       	ldi	r21, 0x40	; 64
     866:	c5 01       	movw	r24, r10
     868:	b4 01       	movw	r22, r8
     86a:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     86e:	20 e0       	ldi	r18, 0x00	; 0
     870:	30 e8       	ldi	r19, 0x80	; 128
     872:	4b eb       	ldi	r20, 0xBB	; 187
     874:	54 e4       	ldi	r21, 0x44	; 68
     876:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     87a:	60 93 84 00 	sts	0x0084, r22	; 0x800084 <freqRY1>
     87e:	70 93 85 00 	sts	0x0085, r23	; 0x800085 <freqRY1+0x1>
     882:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <freqRY1+0x2>
     886:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <freqRY1+0x3>
volatile float freqBY1 =  1500 + (BY1 * 3.1372549);		//1782.35294(red)	1669.41177(green)	2252.94118(blue)
     88a:	29 ec       	ldi	r18, 0xC9	; 201
     88c:	38 ec       	ldi	r19, 0xC8	; 200
     88e:	48 e4       	ldi	r20, 0x48	; 72
     890:	50 e4       	ldi	r21, 0x40	; 64
     892:	c7 01       	movw	r24, r14
     894:	b6 01       	movw	r22, r12
     896:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     89a:	20 e0       	ldi	r18, 0x00	; 0
     89c:	30 e8       	ldi	r19, 0x80	; 128
     89e:	4b eb       	ldi	r20, 0xBB	; 187
     8a0:	54 e4       	ldi	r21, 0x44	; 68
     8a2:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     8a6:	60 93 80 00 	sts	0x0080, r22	; 0x800080 <freqBY1>
     8aa:	70 93 81 00 	sts	0x0081, r23	; 0x800081 <freqBY1+0x1>
     8ae:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <freqBY1+0x2>
     8b2:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <freqBY1+0x3>

int R2=255,G2=255,B2=255;
float Y2 = 16.0 + (.003906 * ((65.738 * R2) + (129.057 * G2) + (25.064 * B2)));
     8b6:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <R2>
     8ba:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <R2+0x1>
     8be:	07 2e       	mov	r0, r23
     8c0:	00 0c       	add	r0, r0
     8c2:	88 0b       	sbc	r24, r24
     8c4:	99 0b       	sbc	r25, r25
     8c6:	0e 94 c4 06 	call	0xd88	; 0xd88 <__floatsisf>
     8ca:	69 83       	std	Y+1, r22	; 0x01
     8cc:	7a 83       	std	Y+2, r23	; 0x02
     8ce:	8b 83       	std	Y+3, r24	; 0x03
     8d0:	9c 83       	std	Y+4, r25	; 0x04
     8d2:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <G2>
     8d6:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <G2+0x1>
     8da:	07 2e       	mov	r0, r23
     8dc:	00 0c       	add	r0, r0
     8de:	88 0b       	sbc	r24, r24
     8e0:	99 0b       	sbc	r25, r25
     8e2:	0e 94 c4 06 	call	0xd88	; 0xd88 <__floatsisf>
     8e6:	6d 83       	std	Y+5, r22	; 0x05
     8e8:	7e 83       	std	Y+6, r23	; 0x06
     8ea:	8f 83       	std	Y+7, r24	; 0x07
     8ec:	98 87       	std	Y+8, r25	; 0x08
     8ee:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <B2>
     8f2:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <B2+0x1>
     8f6:	07 2e       	mov	r0, r23
     8f8:	00 0c       	add	r0, r0
     8fa:	88 0b       	sbc	r24, r24
     8fc:	99 0b       	sbc	r25, r25
     8fe:	0e 94 c4 06 	call	0xd88	; 0xd88 <__floatsisf>
     902:	6b 01       	movw	r12, r22
     904:	7c 01       	movw	r14, r24
     906:	2b ed       	ldi	r18, 0xDB	; 219
     908:	39 e7       	ldi	r19, 0x79	; 121
     90a:	43 e8       	ldi	r20, 0x83	; 131
     90c:	52 e4       	ldi	r21, 0x42	; 66
     90e:	69 81       	ldd	r22, Y+1	; 0x01
     910:	7a 81       	ldd	r23, Y+2	; 0x02
     912:	8b 81       	ldd	r24, Y+3	; 0x03
     914:	9c 81       	ldd	r25, Y+4	; 0x04
     916:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     91a:	4b 01       	movw	r8, r22
     91c:	5c 01       	movw	r10, r24
     91e:	28 e9       	ldi	r18, 0x98	; 152
     920:	3e e0       	ldi	r19, 0x0E	; 14
     922:	41 e0       	ldi	r20, 0x01	; 1
     924:	53 e4       	ldi	r21, 0x43	; 67
     926:	6d 81       	ldd	r22, Y+5	; 0x05
     928:	7e 81       	ldd	r23, Y+6	; 0x06
     92a:	8f 81       	ldd	r24, Y+7	; 0x07
     92c:	98 85       	ldd	r25, Y+8	; 0x08
     92e:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     932:	9b 01       	movw	r18, r22
     934:	ac 01       	movw	r20, r24
     936:	c5 01       	movw	r24, r10
     938:	b4 01       	movw	r22, r8
     93a:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     93e:	4b 01       	movw	r8, r22
     940:	5c 01       	movw	r10, r24
     942:	22 e1       	ldi	r18, 0x12	; 18
     944:	33 e8       	ldi	r19, 0x83	; 131
     946:	48 ec       	ldi	r20, 0xC8	; 200
     948:	51 e4       	ldi	r21, 0x41	; 65
     94a:	c7 01       	movw	r24, r14
     94c:	b6 01       	movw	r22, r12
     94e:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     952:	9b 01       	movw	r18, r22
     954:	ac 01       	movw	r20, r24
     956:	c5 01       	movw	r24, r10
     958:	b4 01       	movw	r22, r8
     95a:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     95e:	2e ec       	ldi	r18, 0xCE	; 206
     960:	3b ef       	ldi	r19, 0xFB	; 251
     962:	4f e7       	ldi	r20, 0x7F	; 127
     964:	5b e3       	ldi	r21, 0x3B	; 59
     966:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     96a:	20 e0       	ldi	r18, 0x00	; 0
     96c:	30 e0       	ldi	r19, 0x00	; 0
     96e:	40 e8       	ldi	r20, 0x80	; 128
     970:	51 e4       	ldi	r21, 0x41	; 65
     972:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     976:	2b 01       	movw	r4, r22
     978:	3c 01       	movw	r6, r24
     97a:	60 93 7c 00 	sts	0x007C, r22	; 0x80007c <Y2>
     97e:	70 93 7d 00 	sts	0x007D, r23	; 0x80007d <Y2+0x1>
     982:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <Y2+0x2>
     986:	90 93 7f 00 	sts	0x007F, r25	; 0x80007f <Y2+0x3>
float RY2 = 128.0 + (.003906 * ((112.439 * R2) + (-94.154 * G2) + (-18.285 * B2)));
     98a:	25 ec       	ldi	r18, 0xC5	; 197
     98c:	30 ee       	ldi	r19, 0xE0	; 224
     98e:	40 ee       	ldi	r20, 0xE0	; 224
     990:	52 e4       	ldi	r21, 0x42	; 66
     992:	69 81       	ldd	r22, Y+1	; 0x01
     994:	7a 81       	ldd	r23, Y+2	; 0x02
     996:	8b 81       	ldd	r24, Y+3	; 0x03
     998:	9c 81       	ldd	r25, Y+4	; 0x04
     99a:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     99e:	4b 01       	movw	r8, r22
     9a0:	5c 01       	movw	r10, r24
     9a2:	29 ed       	ldi	r18, 0xD9	; 217
     9a4:	3e e4       	ldi	r19, 0x4E	; 78
     9a6:	4c eb       	ldi	r20, 0xBC	; 188
     9a8:	52 ec       	ldi	r21, 0xC2	; 194
     9aa:	6d 81       	ldd	r22, Y+5	; 0x05
     9ac:	7e 81       	ldd	r23, Y+6	; 0x06
     9ae:	8f 81       	ldd	r24, Y+7	; 0x07
     9b0:	98 85       	ldd	r25, Y+8	; 0x08
     9b2:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     9b6:	9b 01       	movw	r18, r22
     9b8:	ac 01       	movw	r20, r24
     9ba:	c5 01       	movw	r24, r10
     9bc:	b4 01       	movw	r22, r8
     9be:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     9c2:	4b 01       	movw	r8, r22
     9c4:	5c 01       	movw	r10, r24
     9c6:	2e ea       	ldi	r18, 0xAE	; 174
     9c8:	37 e4       	ldi	r19, 0x47	; 71
     9ca:	42 e9       	ldi	r20, 0x92	; 146
     9cc:	51 ec       	ldi	r21, 0xC1	; 193
     9ce:	c7 01       	movw	r24, r14
     9d0:	b6 01       	movw	r22, r12
     9d2:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     9d6:	9b 01       	movw	r18, r22
     9d8:	ac 01       	movw	r20, r24
     9da:	c5 01       	movw	r24, r10
     9dc:	b4 01       	movw	r22, r8
     9de:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     9e2:	2e ec       	ldi	r18, 0xCE	; 206
     9e4:	3b ef       	ldi	r19, 0xFB	; 251
     9e6:	4f e7       	ldi	r20, 0x7F	; 127
     9e8:	5b e3       	ldi	r21, 0x3B	; 59
     9ea:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     9ee:	20 e0       	ldi	r18, 0x00	; 0
     9f0:	30 e0       	ldi	r19, 0x00	; 0
     9f2:	40 e0       	ldi	r20, 0x00	; 0
     9f4:	53 e4       	ldi	r21, 0x43	; 67
     9f6:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     9fa:	4b 01       	movw	r8, r22
     9fc:	5c 01       	movw	r10, r24
     9fe:	60 93 78 00 	sts	0x0078, r22	; 0x800078 <RY2>
     a02:	70 93 79 00 	sts	0x0079, r23	; 0x800079 <RY2+0x1>
     a06:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <RY2+0x2>
     a0a:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <RY2+0x3>
float BY2 = 128.0 + (.003906 * ((-37.945 * R2) + (-74.494 * G2) + (112.439 * B2)));
     a0e:	2e ea       	ldi	r18, 0xAE	; 174
     a10:	37 ec       	ldi	r19, 0xC7	; 199
     a12:	47 e1       	ldi	r20, 0x17	; 23
     a14:	52 ec       	ldi	r21, 0xC2	; 194
     a16:	69 81       	ldd	r22, Y+1	; 0x01
     a18:	7a 81       	ldd	r23, Y+2	; 0x02
     a1a:	8b 81       	ldd	r24, Y+3	; 0x03
     a1c:	9c 81       	ldd	r25, Y+4	; 0x04
     a1e:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     a22:	69 83       	std	Y+1, r22	; 0x01
     a24:	7a 83       	std	Y+2, r23	; 0x02
     a26:	8b 83       	std	Y+3, r24	; 0x03
     a28:	9c 83       	std	Y+4, r25	; 0x04
     a2a:	2e ee       	ldi	r18, 0xEE	; 238
     a2c:	3c ef       	ldi	r19, 0xFC	; 252
     a2e:	44 e9       	ldi	r20, 0x94	; 148
     a30:	52 ec       	ldi	r21, 0xC2	; 194
     a32:	6d 81       	ldd	r22, Y+5	; 0x05
     a34:	7e 81       	ldd	r23, Y+6	; 0x06
     a36:	8f 81       	ldd	r24, Y+7	; 0x07
     a38:	98 85       	ldd	r25, Y+8	; 0x08
     a3a:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     a3e:	9b 01       	movw	r18, r22
     a40:	ac 01       	movw	r20, r24
     a42:	69 81       	ldd	r22, Y+1	; 0x01
     a44:	7a 81       	ldd	r23, Y+2	; 0x02
     a46:	8b 81       	ldd	r24, Y+3	; 0x03
     a48:	9c 81       	ldd	r25, Y+4	; 0x04
     a4a:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     a4e:	69 83       	std	Y+1, r22	; 0x01
     a50:	7a 83       	std	Y+2, r23	; 0x02
     a52:	8b 83       	std	Y+3, r24	; 0x03
     a54:	9c 83       	std	Y+4, r25	; 0x04
     a56:	25 ec       	ldi	r18, 0xC5	; 197
     a58:	30 ee       	ldi	r19, 0xE0	; 224
     a5a:	40 ee       	ldi	r20, 0xE0	; 224
     a5c:	52 e4       	ldi	r21, 0x42	; 66
     a5e:	c7 01       	movw	r24, r14
     a60:	b6 01       	movw	r22, r12
     a62:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     a66:	9b 01       	movw	r18, r22
     a68:	ac 01       	movw	r20, r24
     a6a:	69 81       	ldd	r22, Y+1	; 0x01
     a6c:	7a 81       	ldd	r23, Y+2	; 0x02
     a6e:	8b 81       	ldd	r24, Y+3	; 0x03
     a70:	9c 81       	ldd	r25, Y+4	; 0x04
     a72:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     a76:	2e ec       	ldi	r18, 0xCE	; 206
     a78:	3b ef       	ldi	r19, 0xFB	; 251
     a7a:	4f e7       	ldi	r20, 0x7F	; 127
     a7c:	5b e3       	ldi	r21, 0x3B	; 59
     a7e:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     a82:	20 e0       	ldi	r18, 0x00	; 0
     a84:	30 e0       	ldi	r19, 0x00	; 0
     a86:	40 e0       	ldi	r20, 0x00	; 0
     a88:	53 e4       	ldi	r21, 0x43	; 67
     a8a:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     a8e:	6b 01       	movw	r12, r22
     a90:	7c 01       	movw	r14, r24
     a92:	60 93 74 00 	sts	0x0074, r22	; 0x800074 <BY2>
     a96:	70 93 75 00 	sts	0x0075, r23	; 0x800075 <BY2+0x1>
     a9a:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <BY2+0x2>
     a9e:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <BY2+0x3>
//frequency calculation and documented values
volatile float freqY2  =  1500 + (Y2  * 3.1372549);			//1757.2549(red)	1954.90196(green)	1628.62745(blue)
     aa2:	29 ec       	ldi	r18, 0xC9	; 201
     aa4:	38 ec       	ldi	r19, 0xC8	; 200
     aa6:	48 e4       	ldi	r20, 0x48	; 72
     aa8:	50 e4       	ldi	r21, 0x40	; 64
     aaa:	c3 01       	movw	r24, r6
     aac:	b2 01       	movw	r22, r4
     aae:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     ab2:	20 e0       	ldi	r18, 0x00	; 0
     ab4:	30 e8       	ldi	r19, 0x80	; 128
     ab6:	4b eb       	ldi	r20, 0xBB	; 187
     ab8:	54 e4       	ldi	r21, 0x44	; 68
     aba:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     abe:	60 93 70 00 	sts	0x0070, r22	; 0x800070 <freqY2>
     ac2:	70 93 71 00 	sts	0x0071, r23	; 0x800071 <freqY2+0x1>
     ac6:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <freqY2+0x2>
     aca:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <freqY2+0x3>
volatile float freqRY2 =  1500 + (RY2 * 3.1372549);		//2252.94118(red)  1606.66667(green)	1845.09804(blue)
     ace:	29 ec       	ldi	r18, 0xC9	; 201
     ad0:	38 ec       	ldi	r19, 0xC8	; 200
     ad2:	48 e4       	ldi	r20, 0x48	; 72
     ad4:	50 e4       	ldi	r21, 0x40	; 64
     ad6:	c5 01       	movw	r24, r10
     ad8:	b4 01       	movw	r22, r8
     ada:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     ade:	20 e0       	ldi	r18, 0x00	; 0
     ae0:	30 e8       	ldi	r19, 0x80	; 128
     ae2:	4b eb       	ldi	r20, 0xBB	; 187
     ae4:	54 e4       	ldi	r21, 0x44	; 68
     ae6:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     aea:	60 93 6c 00 	sts	0x006C, r22	; 0x80006c <freqRY2>
     aee:	70 93 6d 00 	sts	0x006D, r23	; 0x80006d <freqRY2+0x1>
     af2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <freqRY2+0x2>
     af6:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <freqRY2+0x3>
volatile float freqBY2 =  1500 + (BY2 * 3.1372549);		//1782.35294(red)	1669.41177(green)	2252.94118(blue)
     afa:	29 ec       	ldi	r18, 0xC9	; 201
     afc:	38 ec       	ldi	r19, 0xC8	; 200
     afe:	48 e4       	ldi	r20, 0x48	; 72
     b00:	50 e4       	ldi	r21, 0x40	; 64
     b02:	c7 01       	movw	r24, r14
     b04:	b6 01       	movw	r22, r12
     b06:	0e 94 d6 07 	call	0xfac	; 0xfac <__mulsf3>
     b0a:	20 e0       	ldi	r18, 0x00	; 0
     b0c:	30 e8       	ldi	r19, 0x80	; 128
     b0e:	4b eb       	ldi	r20, 0xBB	; 187
     b10:	54 e4       	ldi	r21, 0x44	; 68
     b12:	0e 94 a9 05 	call	0xb52	; 0xb52 <__addsf3>
     b16:	60 93 68 00 	sts	0x0068, r22	; 0x800068 <__data_end>
     b1a:	70 93 69 00 	sts	0x0069, r23	; 0x800069 <__data_end+0x1>
     b1e:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end+0x2>
     b22:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__data_end+0x3>
	else compare =0;
	if (cont==1280) compare=0;

}
	
     b26:	28 96       	adiw	r28, 0x08	; 8
     b28:	0f b6       	in	r0, 0x3f	; 63
     b2a:	f8 94       	cli
     b2c:	de bf       	out	0x3e, r29	; 62
     b2e:	0f be       	out	0x3f, r0	; 63
     b30:	cd bf       	out	0x3d, r28	; 61
     b32:	df 91       	pop	r29
     b34:	cf 91       	pop	r28
     b36:	ff 90       	pop	r15
     b38:	ef 90       	pop	r14
     b3a:	df 90       	pop	r13
     b3c:	cf 90       	pop	r12
     b3e:	bf 90       	pop	r11
     b40:	af 90       	pop	r10
     b42:	9f 90       	pop	r9
     b44:	8f 90       	pop	r8
     b46:	7f 90       	pop	r7
     b48:	6f 90       	pop	r6
     b4a:	5f 90       	pop	r5
     b4c:	4f 90       	pop	r4
     b4e:	08 95       	ret

00000b50 <__subsf3>:
     b50:	50 58       	subi	r21, 0x80	; 128

00000b52 <__addsf3>:
     b52:	bb 27       	eor	r27, r27
     b54:	aa 27       	eor	r26, r26
     b56:	0e 94 c0 05 	call	0xb80	; 0xb80 <__addsf3x>
     b5a:	0c 94 9c 07 	jmp	0xf38	; 0xf38 <__fp_round>
     b5e:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__fp_pscA>
     b62:	38 f0       	brcs	.+14     	; 0xb72 <__addsf3+0x20>
     b64:	0e 94 95 07 	call	0xf2a	; 0xf2a <__fp_pscB>
     b68:	20 f0       	brcs	.+8      	; 0xb72 <__addsf3+0x20>
     b6a:	39 f4       	brne	.+14     	; 0xb7a <__addsf3+0x28>
     b6c:	9f 3f       	cpi	r25, 0xFF	; 255
     b6e:	19 f4       	brne	.+6      	; 0xb76 <__addsf3+0x24>
     b70:	26 f4       	brtc	.+8      	; 0xb7a <__addsf3+0x28>
     b72:	0c 94 8b 07 	jmp	0xf16	; 0xf16 <__fp_nan>
     b76:	0e f4       	brtc	.+2      	; 0xb7a <__addsf3+0x28>
     b78:	e0 95       	com	r30
     b7a:	e7 fb       	bst	r30, 7
     b7c:	0c 94 77 07 	jmp	0xeee	; 0xeee <__fp_inf>

00000b80 <__addsf3x>:
     b80:	e9 2f       	mov	r30, r25
     b82:	0e 94 ad 07 	call	0xf5a	; 0xf5a <__fp_split3>
     b86:	58 f3       	brcs	.-42     	; 0xb5e <__addsf3+0xc>
     b88:	ba 17       	cp	r27, r26
     b8a:	62 07       	cpc	r22, r18
     b8c:	73 07       	cpc	r23, r19
     b8e:	84 07       	cpc	r24, r20
     b90:	95 07       	cpc	r25, r21
     b92:	20 f0       	brcs	.+8      	; 0xb9c <__addsf3x+0x1c>
     b94:	79 f4       	brne	.+30     	; 0xbb4 <__addsf3x+0x34>
     b96:	a6 f5       	brtc	.+104    	; 0xc00 <__addsf3x+0x80>
     b98:	0c 94 cf 07 	jmp	0xf9e	; 0xf9e <__fp_zero>
     b9c:	0e f4       	brtc	.+2      	; 0xba0 <__addsf3x+0x20>
     b9e:	e0 95       	com	r30
     ba0:	0b 2e       	mov	r0, r27
     ba2:	ba 2f       	mov	r27, r26
     ba4:	a0 2d       	mov	r26, r0
     ba6:	0b 01       	movw	r0, r22
     ba8:	b9 01       	movw	r22, r18
     baa:	90 01       	movw	r18, r0
     bac:	0c 01       	movw	r0, r24
     bae:	ca 01       	movw	r24, r20
     bb0:	a0 01       	movw	r20, r0
     bb2:	11 24       	eor	r1, r1
     bb4:	ff 27       	eor	r31, r31
     bb6:	59 1b       	sub	r21, r25
     bb8:	99 f0       	breq	.+38     	; 0xbe0 <__addsf3x+0x60>
     bba:	59 3f       	cpi	r21, 0xF9	; 249
     bbc:	50 f4       	brcc	.+20     	; 0xbd2 <__addsf3x+0x52>
     bbe:	50 3e       	cpi	r21, 0xE0	; 224
     bc0:	68 f1       	brcs	.+90     	; 0xc1c <__addsf3x+0x9c>
     bc2:	1a 16       	cp	r1, r26
     bc4:	f0 40       	sbci	r31, 0x00	; 0
     bc6:	a2 2f       	mov	r26, r18
     bc8:	23 2f       	mov	r18, r19
     bca:	34 2f       	mov	r19, r20
     bcc:	44 27       	eor	r20, r20
     bce:	58 5f       	subi	r21, 0xF8	; 248
     bd0:	f3 cf       	rjmp	.-26     	; 0xbb8 <__addsf3x+0x38>
     bd2:	46 95       	lsr	r20
     bd4:	37 95       	ror	r19
     bd6:	27 95       	ror	r18
     bd8:	a7 95       	ror	r26
     bda:	f0 40       	sbci	r31, 0x00	; 0
     bdc:	53 95       	inc	r21
     bde:	c9 f7       	brne	.-14     	; 0xbd2 <__addsf3x+0x52>
     be0:	7e f4       	brtc	.+30     	; 0xc00 <__addsf3x+0x80>
     be2:	1f 16       	cp	r1, r31
     be4:	ba 0b       	sbc	r27, r26
     be6:	62 0b       	sbc	r22, r18
     be8:	73 0b       	sbc	r23, r19
     bea:	84 0b       	sbc	r24, r20
     bec:	ba f0       	brmi	.+46     	; 0xc1c <__addsf3x+0x9c>
     bee:	91 50       	subi	r25, 0x01	; 1
     bf0:	a1 f0       	breq	.+40     	; 0xc1a <__addsf3x+0x9a>
     bf2:	ff 0f       	add	r31, r31
     bf4:	bb 1f       	adc	r27, r27
     bf6:	66 1f       	adc	r22, r22
     bf8:	77 1f       	adc	r23, r23
     bfa:	88 1f       	adc	r24, r24
     bfc:	c2 f7       	brpl	.-16     	; 0xbee <__addsf3x+0x6e>
     bfe:	0e c0       	rjmp	.+28     	; 0xc1c <__addsf3x+0x9c>
     c00:	ba 0f       	add	r27, r26
     c02:	62 1f       	adc	r22, r18
     c04:	73 1f       	adc	r23, r19
     c06:	84 1f       	adc	r24, r20
     c08:	48 f4       	brcc	.+18     	; 0xc1c <__addsf3x+0x9c>
     c0a:	87 95       	ror	r24
     c0c:	77 95       	ror	r23
     c0e:	67 95       	ror	r22
     c10:	b7 95       	ror	r27
     c12:	f7 95       	ror	r31
     c14:	9e 3f       	cpi	r25, 0xFE	; 254
     c16:	08 f0       	brcs	.+2      	; 0xc1a <__addsf3x+0x9a>
     c18:	b0 cf       	rjmp	.-160    	; 0xb7a <__addsf3+0x28>
     c1a:	93 95       	inc	r25
     c1c:	88 0f       	add	r24, r24
     c1e:	08 f0       	brcs	.+2      	; 0xc22 <__addsf3x+0xa2>
     c20:	99 27       	eor	r25, r25
     c22:	ee 0f       	add	r30, r30
     c24:	97 95       	ror	r25
     c26:	87 95       	ror	r24
     c28:	08 95       	ret

00000c2a <__cmpsf2>:
     c2a:	0e 94 53 07 	call	0xea6	; 0xea6 <__fp_cmp>
     c2e:	08 f4       	brcc	.+2      	; 0xc32 <__cmpsf2+0x8>
     c30:	81 e0       	ldi	r24, 0x01	; 1
     c32:	08 95       	ret

00000c34 <__divsf3>:
     c34:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__divsf3x>
     c38:	0c 94 9c 07 	jmp	0xf38	; 0xf38 <__fp_round>
     c3c:	0e 94 95 07 	call	0xf2a	; 0xf2a <__fp_pscB>
     c40:	58 f0       	brcs	.+22     	; 0xc58 <__divsf3+0x24>
     c42:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__fp_pscA>
     c46:	40 f0       	brcs	.+16     	; 0xc58 <__divsf3+0x24>
     c48:	29 f4       	brne	.+10     	; 0xc54 <__divsf3+0x20>
     c4a:	5f 3f       	cpi	r21, 0xFF	; 255
     c4c:	29 f0       	breq	.+10     	; 0xc58 <__divsf3+0x24>
     c4e:	0c 94 77 07 	jmp	0xeee	; 0xeee <__fp_inf>
     c52:	51 11       	cpse	r21, r1
     c54:	0c 94 d0 07 	jmp	0xfa0	; 0xfa0 <__fp_szero>
     c58:	0c 94 8b 07 	jmp	0xf16	; 0xf16 <__fp_nan>

00000c5c <__divsf3x>:
     c5c:	0e 94 ad 07 	call	0xf5a	; 0xf5a <__fp_split3>
     c60:	68 f3       	brcs	.-38     	; 0xc3c <__divsf3+0x8>

00000c62 <__divsf3_pse>:
     c62:	99 23       	and	r25, r25
     c64:	b1 f3       	breq	.-20     	; 0xc52 <__divsf3+0x1e>
     c66:	55 23       	and	r21, r21
     c68:	91 f3       	breq	.-28     	; 0xc4e <__divsf3+0x1a>
     c6a:	95 1b       	sub	r25, r21
     c6c:	55 0b       	sbc	r21, r21
     c6e:	bb 27       	eor	r27, r27
     c70:	aa 27       	eor	r26, r26
     c72:	62 17       	cp	r22, r18
     c74:	73 07       	cpc	r23, r19
     c76:	84 07       	cpc	r24, r20
     c78:	38 f0       	brcs	.+14     	; 0xc88 <__divsf3_pse+0x26>
     c7a:	9f 5f       	subi	r25, 0xFF	; 255
     c7c:	5f 4f       	sbci	r21, 0xFF	; 255
     c7e:	22 0f       	add	r18, r18
     c80:	33 1f       	adc	r19, r19
     c82:	44 1f       	adc	r20, r20
     c84:	aa 1f       	adc	r26, r26
     c86:	a9 f3       	breq	.-22     	; 0xc72 <__divsf3_pse+0x10>
     c88:	35 d0       	rcall	.+106    	; 0xcf4 <__divsf3_pse+0x92>
     c8a:	0e 2e       	mov	r0, r30
     c8c:	3a f0       	brmi	.+14     	; 0xc9c <__divsf3_pse+0x3a>
     c8e:	e0 e8       	ldi	r30, 0x80	; 128
     c90:	32 d0       	rcall	.+100    	; 0xcf6 <__divsf3_pse+0x94>
     c92:	91 50       	subi	r25, 0x01	; 1
     c94:	50 40       	sbci	r21, 0x00	; 0
     c96:	e6 95       	lsr	r30
     c98:	00 1c       	adc	r0, r0
     c9a:	ca f7       	brpl	.-14     	; 0xc8e <__divsf3_pse+0x2c>
     c9c:	2b d0       	rcall	.+86     	; 0xcf4 <__divsf3_pse+0x92>
     c9e:	fe 2f       	mov	r31, r30
     ca0:	29 d0       	rcall	.+82     	; 0xcf4 <__divsf3_pse+0x92>
     ca2:	66 0f       	add	r22, r22
     ca4:	77 1f       	adc	r23, r23
     ca6:	88 1f       	adc	r24, r24
     ca8:	bb 1f       	adc	r27, r27
     caa:	26 17       	cp	r18, r22
     cac:	37 07       	cpc	r19, r23
     cae:	48 07       	cpc	r20, r24
     cb0:	ab 07       	cpc	r26, r27
     cb2:	b0 e8       	ldi	r27, 0x80	; 128
     cb4:	09 f0       	breq	.+2      	; 0xcb8 <__divsf3_pse+0x56>
     cb6:	bb 0b       	sbc	r27, r27
     cb8:	80 2d       	mov	r24, r0
     cba:	bf 01       	movw	r22, r30
     cbc:	ff 27       	eor	r31, r31
     cbe:	93 58       	subi	r25, 0x83	; 131
     cc0:	5f 4f       	sbci	r21, 0xFF	; 255
     cc2:	3a f0       	brmi	.+14     	; 0xcd2 <__divsf3_pse+0x70>
     cc4:	9e 3f       	cpi	r25, 0xFE	; 254
     cc6:	51 05       	cpc	r21, r1
     cc8:	78 f0       	brcs	.+30     	; 0xce8 <__divsf3_pse+0x86>
     cca:	0c 94 77 07 	jmp	0xeee	; 0xeee <__fp_inf>
     cce:	0c 94 d0 07 	jmp	0xfa0	; 0xfa0 <__fp_szero>
     cd2:	5f 3f       	cpi	r21, 0xFF	; 255
     cd4:	e4 f3       	brlt	.-8      	; 0xcce <__divsf3_pse+0x6c>
     cd6:	98 3e       	cpi	r25, 0xE8	; 232
     cd8:	d4 f3       	brlt	.-12     	; 0xcce <__divsf3_pse+0x6c>
     cda:	86 95       	lsr	r24
     cdc:	77 95       	ror	r23
     cde:	67 95       	ror	r22
     ce0:	b7 95       	ror	r27
     ce2:	f7 95       	ror	r31
     ce4:	9f 5f       	subi	r25, 0xFF	; 255
     ce6:	c9 f7       	brne	.-14     	; 0xcda <__divsf3_pse+0x78>
     ce8:	88 0f       	add	r24, r24
     cea:	91 1d       	adc	r25, r1
     cec:	96 95       	lsr	r25
     cee:	87 95       	ror	r24
     cf0:	97 f9       	bld	r25, 7
     cf2:	08 95       	ret
     cf4:	e1 e0       	ldi	r30, 0x01	; 1
     cf6:	66 0f       	add	r22, r22
     cf8:	77 1f       	adc	r23, r23
     cfa:	88 1f       	adc	r24, r24
     cfc:	bb 1f       	adc	r27, r27
     cfe:	62 17       	cp	r22, r18
     d00:	73 07       	cpc	r23, r19
     d02:	84 07       	cpc	r24, r20
     d04:	ba 07       	cpc	r27, r26
     d06:	20 f0       	brcs	.+8      	; 0xd10 <__divsf3_pse+0xae>
     d08:	62 1b       	sub	r22, r18
     d0a:	73 0b       	sbc	r23, r19
     d0c:	84 0b       	sbc	r24, r20
     d0e:	ba 0b       	sbc	r27, r26
     d10:	ee 1f       	adc	r30, r30
     d12:	88 f7       	brcc	.-30     	; 0xcf6 <__divsf3_pse+0x94>
     d14:	e0 95       	com	r30
     d16:	08 95       	ret

00000d18 <__fixsfsi>:
     d18:	0e 94 93 06 	call	0xd26	; 0xd26 <__fixunssfsi>
     d1c:	68 94       	set
     d1e:	b1 11       	cpse	r27, r1
     d20:	0c 94 d0 07 	jmp	0xfa0	; 0xfa0 <__fp_szero>
     d24:	08 95       	ret

00000d26 <__fixunssfsi>:
     d26:	0e 94 b5 07 	call	0xf6a	; 0xf6a <__fp_splitA>
     d2a:	88 f0       	brcs	.+34     	; 0xd4e <__fixunssfsi+0x28>
     d2c:	9f 57       	subi	r25, 0x7F	; 127
     d2e:	98 f0       	brcs	.+38     	; 0xd56 <__fixunssfsi+0x30>
     d30:	b9 2f       	mov	r27, r25
     d32:	99 27       	eor	r25, r25
     d34:	b7 51       	subi	r27, 0x17	; 23
     d36:	b0 f0       	brcs	.+44     	; 0xd64 <__fixunssfsi+0x3e>
     d38:	e1 f0       	breq	.+56     	; 0xd72 <__fixunssfsi+0x4c>
     d3a:	66 0f       	add	r22, r22
     d3c:	77 1f       	adc	r23, r23
     d3e:	88 1f       	adc	r24, r24
     d40:	99 1f       	adc	r25, r25
     d42:	1a f0       	brmi	.+6      	; 0xd4a <__fixunssfsi+0x24>
     d44:	ba 95       	dec	r27
     d46:	c9 f7       	brne	.-14     	; 0xd3a <__fixunssfsi+0x14>
     d48:	14 c0       	rjmp	.+40     	; 0xd72 <__fixunssfsi+0x4c>
     d4a:	b1 30       	cpi	r27, 0x01	; 1
     d4c:	91 f0       	breq	.+36     	; 0xd72 <__fixunssfsi+0x4c>
     d4e:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__fp_zero>
     d52:	b1 e0       	ldi	r27, 0x01	; 1
     d54:	08 95       	ret
     d56:	0c 94 cf 07 	jmp	0xf9e	; 0xf9e <__fp_zero>
     d5a:	67 2f       	mov	r22, r23
     d5c:	78 2f       	mov	r23, r24
     d5e:	88 27       	eor	r24, r24
     d60:	b8 5f       	subi	r27, 0xF8	; 248
     d62:	39 f0       	breq	.+14     	; 0xd72 <__fixunssfsi+0x4c>
     d64:	b9 3f       	cpi	r27, 0xF9	; 249
     d66:	cc f3       	brlt	.-14     	; 0xd5a <__fixunssfsi+0x34>
     d68:	86 95       	lsr	r24
     d6a:	77 95       	ror	r23
     d6c:	67 95       	ror	r22
     d6e:	b3 95       	inc	r27
     d70:	d9 f7       	brne	.-10     	; 0xd68 <__fixunssfsi+0x42>
     d72:	3e f4       	brtc	.+14     	; 0xd82 <__fixunssfsi+0x5c>
     d74:	90 95       	com	r25
     d76:	80 95       	com	r24
     d78:	70 95       	com	r23
     d7a:	61 95       	neg	r22
     d7c:	7f 4f       	sbci	r23, 0xFF	; 255
     d7e:	8f 4f       	sbci	r24, 0xFF	; 255
     d80:	9f 4f       	sbci	r25, 0xFF	; 255
     d82:	08 95       	ret

00000d84 <__floatunsisf>:
     d84:	e8 94       	clt
     d86:	09 c0       	rjmp	.+18     	; 0xd9a <__floatsisf+0x12>

00000d88 <__floatsisf>:
     d88:	97 fb       	bst	r25, 7
     d8a:	3e f4       	brtc	.+14     	; 0xd9a <__floatsisf+0x12>
     d8c:	90 95       	com	r25
     d8e:	80 95       	com	r24
     d90:	70 95       	com	r23
     d92:	61 95       	neg	r22
     d94:	7f 4f       	sbci	r23, 0xFF	; 255
     d96:	8f 4f       	sbci	r24, 0xFF	; 255
     d98:	9f 4f       	sbci	r25, 0xFF	; 255
     d9a:	99 23       	and	r25, r25
     d9c:	a9 f0       	breq	.+42     	; 0xdc8 <__floatsisf+0x40>
     d9e:	f9 2f       	mov	r31, r25
     da0:	96 e9       	ldi	r25, 0x96	; 150
     da2:	bb 27       	eor	r27, r27
     da4:	93 95       	inc	r25
     da6:	f6 95       	lsr	r31
     da8:	87 95       	ror	r24
     daa:	77 95       	ror	r23
     dac:	67 95       	ror	r22
     dae:	b7 95       	ror	r27
     db0:	f1 11       	cpse	r31, r1
     db2:	f8 cf       	rjmp	.-16     	; 0xda4 <__floatsisf+0x1c>
     db4:	fa f4       	brpl	.+62     	; 0xdf4 <__floatsisf+0x6c>
     db6:	bb 0f       	add	r27, r27
     db8:	11 f4       	brne	.+4      	; 0xdbe <__floatsisf+0x36>
     dba:	60 ff       	sbrs	r22, 0
     dbc:	1b c0       	rjmp	.+54     	; 0xdf4 <__floatsisf+0x6c>
     dbe:	6f 5f       	subi	r22, 0xFF	; 255
     dc0:	7f 4f       	sbci	r23, 0xFF	; 255
     dc2:	8f 4f       	sbci	r24, 0xFF	; 255
     dc4:	9f 4f       	sbci	r25, 0xFF	; 255
     dc6:	16 c0       	rjmp	.+44     	; 0xdf4 <__floatsisf+0x6c>
     dc8:	88 23       	and	r24, r24
     dca:	11 f0       	breq	.+4      	; 0xdd0 <__floatsisf+0x48>
     dcc:	96 e9       	ldi	r25, 0x96	; 150
     dce:	11 c0       	rjmp	.+34     	; 0xdf2 <__floatsisf+0x6a>
     dd0:	77 23       	and	r23, r23
     dd2:	21 f0       	breq	.+8      	; 0xddc <__floatsisf+0x54>
     dd4:	9e e8       	ldi	r25, 0x8E	; 142
     dd6:	87 2f       	mov	r24, r23
     dd8:	76 2f       	mov	r23, r22
     dda:	05 c0       	rjmp	.+10     	; 0xde6 <__floatsisf+0x5e>
     ddc:	66 23       	and	r22, r22
     dde:	71 f0       	breq	.+28     	; 0xdfc <__floatsisf+0x74>
     de0:	96 e8       	ldi	r25, 0x86	; 134
     de2:	86 2f       	mov	r24, r22
     de4:	70 e0       	ldi	r23, 0x00	; 0
     de6:	60 e0       	ldi	r22, 0x00	; 0
     de8:	2a f0       	brmi	.+10     	; 0xdf4 <__floatsisf+0x6c>
     dea:	9a 95       	dec	r25
     dec:	66 0f       	add	r22, r22
     dee:	77 1f       	adc	r23, r23
     df0:	88 1f       	adc	r24, r24
     df2:	da f7       	brpl	.-10     	; 0xdea <__floatsisf+0x62>
     df4:	88 0f       	add	r24, r24
     df6:	96 95       	lsr	r25
     df8:	87 95       	ror	r24
     dfa:	97 f9       	bld	r25, 7
     dfc:	08 95       	ret
     dfe:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__fp_pscA>
     e02:	20 f0       	brcs	.+8      	; 0xe0c <__floatsisf+0x84>
     e04:	19 f0       	breq	.+6      	; 0xe0c <__floatsisf+0x84>
     e06:	0e 94 95 07 	call	0xf2a	; 0xf2a <__fp_pscB>
     e0a:	50 f4       	brcc	.+20     	; 0xe20 <fmod+0xc>
     e0c:	0c 94 8b 07 	jmp	0xf16	; 0xf16 <__fp_nan>
     e10:	0c 94 d0 07 	jmp	0xfa0	; 0xfa0 <__fp_szero>

00000e14 <fmod>:
     e14:	e9 2f       	mov	r30, r25
     e16:	0e 94 ad 07 	call	0xf5a	; 0xf5a <__fp_split3>
     e1a:	88 f3       	brcs	.-30     	; 0xdfe <__floatsisf+0x76>
     e1c:	55 23       	and	r21, r21
     e1e:	b1 f3       	breq	.-20     	; 0xe0c <__floatsisf+0x84>
     e20:	e7 fb       	bst	r30, 7
     e22:	62 17       	cp	r22, r18
     e24:	73 07       	cpc	r23, r19
     e26:	84 07       	cpc	r24, r20
     e28:	95 07       	cpc	r25, r21
     e2a:	a8 f1       	brcs	.+106    	; 0xe96 <fmod+0x82>
     e2c:	89 f3       	breq	.-30     	; 0xe10 <__floatsisf+0x88>
     e2e:	e9 2f       	mov	r30, r25
     e30:	ff 27       	eor	r31, r31
     e32:	88 23       	and	r24, r24
     e34:	2a f0       	brmi	.+10     	; 0xe40 <fmod+0x2c>
     e36:	31 97       	sbiw	r30, 0x01	; 1
     e38:	66 0f       	add	r22, r22
     e3a:	77 1f       	adc	r23, r23
     e3c:	88 1f       	adc	r24, r24
     e3e:	da f7       	brpl	.-10     	; 0xe36 <fmod+0x22>
     e40:	95 2f       	mov	r25, r21
     e42:	55 27       	eor	r21, r21
     e44:	44 23       	and	r20, r20
     e46:	32 f0       	brmi	.+12     	; 0xe54 <fmod+0x40>
     e48:	91 50       	subi	r25, 0x01	; 1
     e4a:	50 40       	sbci	r21, 0x00	; 0
     e4c:	22 0f       	add	r18, r18
     e4e:	33 1f       	adc	r19, r19
     e50:	44 1f       	adc	r20, r20
     e52:	d2 f7       	brpl	.-12     	; 0xe48 <fmod+0x34>
     e54:	bb 27       	eor	r27, r27
     e56:	e9 1b       	sub	r30, r25
     e58:	f5 0b       	sbc	r31, r21
     e5a:	62 1b       	sub	r22, r18
     e5c:	73 0b       	sbc	r23, r19
     e5e:	84 0b       	sbc	r24, r20
     e60:	b1 09       	sbc	r27, r1
     e62:	b1 f2       	breq	.-84     	; 0xe10 <__floatsisf+0x88>
     e64:	22 f4       	brpl	.+8      	; 0xe6e <fmod+0x5a>
     e66:	62 0f       	add	r22, r18
     e68:	73 1f       	adc	r23, r19
     e6a:	84 1f       	adc	r24, r20
     e6c:	b1 1d       	adc	r27, r1
     e6e:	31 97       	sbiw	r30, 0x01	; 1
     e70:	2a f0       	brmi	.+10     	; 0xe7c <fmod+0x68>
     e72:	66 0f       	add	r22, r22
     e74:	77 1f       	adc	r23, r23
     e76:	88 1f       	adc	r24, r24
     e78:	bb 1f       	adc	r27, r27
     e7a:	ef cf       	rjmp	.-34     	; 0xe5a <fmod+0x46>
     e7c:	91 50       	subi	r25, 0x01	; 1
     e7e:	50 40       	sbci	r21, 0x00	; 0
     e80:	62 f0       	brmi	.+24     	; 0xe9a <fmod+0x86>
     e82:	41 f0       	breq	.+16     	; 0xe94 <fmod+0x80>
     e84:	88 23       	and	r24, r24
     e86:	32 f0       	brmi	.+12     	; 0xe94 <fmod+0x80>
     e88:	66 0f       	add	r22, r22
     e8a:	77 1f       	adc	r23, r23
     e8c:	88 1f       	adc	r24, r24
     e8e:	91 50       	subi	r25, 0x01	; 1
     e90:	50 40       	sbci	r21, 0x00	; 0
     e92:	c1 f7       	brne	.-16     	; 0xe84 <fmod+0x70>
     e94:	93 95       	inc	r25
     e96:	0c 94 7d 07 	jmp	0xefa	; 0xefa <__fp_mpack>
     e9a:	86 95       	lsr	r24
     e9c:	77 95       	ror	r23
     e9e:	67 95       	ror	r22
     ea0:	9f 5f       	subi	r25, 0xFF	; 255
     ea2:	d9 f7       	brne	.-10     	; 0xe9a <fmod+0x86>
     ea4:	f7 cf       	rjmp	.-18     	; 0xe94 <fmod+0x80>

00000ea6 <__fp_cmp>:
     ea6:	99 0f       	add	r25, r25
     ea8:	00 08       	sbc	r0, r0
     eaa:	55 0f       	add	r21, r21
     eac:	aa 0b       	sbc	r26, r26
     eae:	e0 e8       	ldi	r30, 0x80	; 128
     eb0:	fe ef       	ldi	r31, 0xFE	; 254
     eb2:	16 16       	cp	r1, r22
     eb4:	17 06       	cpc	r1, r23
     eb6:	e8 07       	cpc	r30, r24
     eb8:	f9 07       	cpc	r31, r25
     eba:	c0 f0       	brcs	.+48     	; 0xeec <__fp_cmp+0x46>
     ebc:	12 16       	cp	r1, r18
     ebe:	13 06       	cpc	r1, r19
     ec0:	e4 07       	cpc	r30, r20
     ec2:	f5 07       	cpc	r31, r21
     ec4:	98 f0       	brcs	.+38     	; 0xeec <__fp_cmp+0x46>
     ec6:	62 1b       	sub	r22, r18
     ec8:	73 0b       	sbc	r23, r19
     eca:	84 0b       	sbc	r24, r20
     ecc:	95 0b       	sbc	r25, r21
     ece:	39 f4       	brne	.+14     	; 0xede <__fp_cmp+0x38>
     ed0:	0a 26       	eor	r0, r26
     ed2:	61 f0       	breq	.+24     	; 0xeec <__fp_cmp+0x46>
     ed4:	23 2b       	or	r18, r19
     ed6:	24 2b       	or	r18, r20
     ed8:	25 2b       	or	r18, r21
     eda:	21 f4       	brne	.+8      	; 0xee4 <__fp_cmp+0x3e>
     edc:	08 95       	ret
     ede:	0a 26       	eor	r0, r26
     ee0:	09 f4       	brne	.+2      	; 0xee4 <__fp_cmp+0x3e>
     ee2:	a1 40       	sbci	r26, 0x01	; 1
     ee4:	a6 95       	lsr	r26
     ee6:	8f ef       	ldi	r24, 0xFF	; 255
     ee8:	81 1d       	adc	r24, r1
     eea:	81 1d       	adc	r24, r1
     eec:	08 95       	ret

00000eee <__fp_inf>:
     eee:	97 f9       	bld	r25, 7
     ef0:	9f 67       	ori	r25, 0x7F	; 127
     ef2:	80 e8       	ldi	r24, 0x80	; 128
     ef4:	70 e0       	ldi	r23, 0x00	; 0
     ef6:	60 e0       	ldi	r22, 0x00	; 0
     ef8:	08 95       	ret

00000efa <__fp_mpack>:
     efa:	9f 3f       	cpi	r25, 0xFF	; 255
     efc:	31 f0       	breq	.+12     	; 0xf0a <__fp_mpack_finite+0xc>

00000efe <__fp_mpack_finite>:
     efe:	91 50       	subi	r25, 0x01	; 1
     f00:	20 f4       	brcc	.+8      	; 0xf0a <__fp_mpack_finite+0xc>
     f02:	87 95       	ror	r24
     f04:	77 95       	ror	r23
     f06:	67 95       	ror	r22
     f08:	b7 95       	ror	r27
     f0a:	88 0f       	add	r24, r24
     f0c:	91 1d       	adc	r25, r1
     f0e:	96 95       	lsr	r25
     f10:	87 95       	ror	r24
     f12:	97 f9       	bld	r25, 7
     f14:	08 95       	ret

00000f16 <__fp_nan>:
     f16:	9f ef       	ldi	r25, 0xFF	; 255
     f18:	80 ec       	ldi	r24, 0xC0	; 192
     f1a:	08 95       	ret

00000f1c <__fp_pscA>:
     f1c:	00 24       	eor	r0, r0
     f1e:	0a 94       	dec	r0
     f20:	16 16       	cp	r1, r22
     f22:	17 06       	cpc	r1, r23
     f24:	18 06       	cpc	r1, r24
     f26:	09 06       	cpc	r0, r25
     f28:	08 95       	ret

00000f2a <__fp_pscB>:
     f2a:	00 24       	eor	r0, r0
     f2c:	0a 94       	dec	r0
     f2e:	12 16       	cp	r1, r18
     f30:	13 06       	cpc	r1, r19
     f32:	14 06       	cpc	r1, r20
     f34:	05 06       	cpc	r0, r21
     f36:	08 95       	ret

00000f38 <__fp_round>:
     f38:	09 2e       	mov	r0, r25
     f3a:	03 94       	inc	r0
     f3c:	00 0c       	add	r0, r0
     f3e:	11 f4       	brne	.+4      	; 0xf44 <__fp_round+0xc>
     f40:	88 23       	and	r24, r24
     f42:	52 f0       	brmi	.+20     	; 0xf58 <__fp_round+0x20>
     f44:	bb 0f       	add	r27, r27
     f46:	40 f4       	brcc	.+16     	; 0xf58 <__fp_round+0x20>
     f48:	bf 2b       	or	r27, r31
     f4a:	11 f4       	brne	.+4      	; 0xf50 <__fp_round+0x18>
     f4c:	60 ff       	sbrs	r22, 0
     f4e:	04 c0       	rjmp	.+8      	; 0xf58 <__fp_round+0x20>
     f50:	6f 5f       	subi	r22, 0xFF	; 255
     f52:	7f 4f       	sbci	r23, 0xFF	; 255
     f54:	8f 4f       	sbci	r24, 0xFF	; 255
     f56:	9f 4f       	sbci	r25, 0xFF	; 255
     f58:	08 95       	ret

00000f5a <__fp_split3>:
     f5a:	57 fd       	sbrc	r21, 7
     f5c:	90 58       	subi	r25, 0x80	; 128
     f5e:	44 0f       	add	r20, r20
     f60:	55 1f       	adc	r21, r21
     f62:	59 f0       	breq	.+22     	; 0xf7a <__fp_splitA+0x10>
     f64:	5f 3f       	cpi	r21, 0xFF	; 255
     f66:	71 f0       	breq	.+28     	; 0xf84 <__fp_splitA+0x1a>
     f68:	47 95       	ror	r20

00000f6a <__fp_splitA>:
     f6a:	88 0f       	add	r24, r24
     f6c:	97 fb       	bst	r25, 7
     f6e:	99 1f       	adc	r25, r25
     f70:	61 f0       	breq	.+24     	; 0xf8a <__fp_splitA+0x20>
     f72:	9f 3f       	cpi	r25, 0xFF	; 255
     f74:	79 f0       	breq	.+30     	; 0xf94 <__fp_splitA+0x2a>
     f76:	87 95       	ror	r24
     f78:	08 95       	ret
     f7a:	12 16       	cp	r1, r18
     f7c:	13 06       	cpc	r1, r19
     f7e:	14 06       	cpc	r1, r20
     f80:	55 1f       	adc	r21, r21
     f82:	f2 cf       	rjmp	.-28     	; 0xf68 <__fp_split3+0xe>
     f84:	46 95       	lsr	r20
     f86:	f1 df       	rcall	.-30     	; 0xf6a <__fp_splitA>
     f88:	08 c0       	rjmp	.+16     	; 0xf9a <__fp_splitA+0x30>
     f8a:	16 16       	cp	r1, r22
     f8c:	17 06       	cpc	r1, r23
     f8e:	18 06       	cpc	r1, r24
     f90:	99 1f       	adc	r25, r25
     f92:	f1 cf       	rjmp	.-30     	; 0xf76 <__fp_splitA+0xc>
     f94:	86 95       	lsr	r24
     f96:	71 05       	cpc	r23, r1
     f98:	61 05       	cpc	r22, r1
     f9a:	08 94       	sec
     f9c:	08 95       	ret

00000f9e <__fp_zero>:
     f9e:	e8 94       	clt

00000fa0 <__fp_szero>:
     fa0:	bb 27       	eor	r27, r27
     fa2:	66 27       	eor	r22, r22
     fa4:	77 27       	eor	r23, r23
     fa6:	cb 01       	movw	r24, r22
     fa8:	97 f9       	bld	r25, 7
     faa:	08 95       	ret

00000fac <__mulsf3>:
     fac:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <__mulsf3x>
     fb0:	0c 94 9c 07 	jmp	0xf38	; 0xf38 <__fp_round>
     fb4:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__fp_pscA>
     fb8:	38 f0       	brcs	.+14     	; 0xfc8 <__mulsf3+0x1c>
     fba:	0e 94 95 07 	call	0xf2a	; 0xf2a <__fp_pscB>
     fbe:	20 f0       	brcs	.+8      	; 0xfc8 <__mulsf3+0x1c>
     fc0:	95 23       	and	r25, r21
     fc2:	11 f0       	breq	.+4      	; 0xfc8 <__mulsf3+0x1c>
     fc4:	0c 94 77 07 	jmp	0xeee	; 0xeee <__fp_inf>
     fc8:	0c 94 8b 07 	jmp	0xf16	; 0xf16 <__fp_nan>
     fcc:	11 24       	eor	r1, r1
     fce:	0c 94 d0 07 	jmp	0xfa0	; 0xfa0 <__fp_szero>

00000fd2 <__mulsf3x>:
     fd2:	0e 94 ad 07 	call	0xf5a	; 0xf5a <__fp_split3>
     fd6:	70 f3       	brcs	.-36     	; 0xfb4 <__mulsf3+0x8>

00000fd8 <__mulsf3_pse>:
     fd8:	95 9f       	mul	r25, r21
     fda:	c1 f3       	breq	.-16     	; 0xfcc <__mulsf3+0x20>
     fdc:	95 0f       	add	r25, r21
     fde:	50 e0       	ldi	r21, 0x00	; 0
     fe0:	55 1f       	adc	r21, r21
     fe2:	62 9f       	mul	r22, r18
     fe4:	f0 01       	movw	r30, r0
     fe6:	72 9f       	mul	r23, r18
     fe8:	bb 27       	eor	r27, r27
     fea:	f0 0d       	add	r31, r0
     fec:	b1 1d       	adc	r27, r1
     fee:	63 9f       	mul	r22, r19
     ff0:	aa 27       	eor	r26, r26
     ff2:	f0 0d       	add	r31, r0
     ff4:	b1 1d       	adc	r27, r1
     ff6:	aa 1f       	adc	r26, r26
     ff8:	64 9f       	mul	r22, r20
     ffa:	66 27       	eor	r22, r22
     ffc:	b0 0d       	add	r27, r0
     ffe:	a1 1d       	adc	r26, r1
    1000:	66 1f       	adc	r22, r22
    1002:	82 9f       	mul	r24, r18
    1004:	22 27       	eor	r18, r18
    1006:	b0 0d       	add	r27, r0
    1008:	a1 1d       	adc	r26, r1
    100a:	62 1f       	adc	r22, r18
    100c:	73 9f       	mul	r23, r19
    100e:	b0 0d       	add	r27, r0
    1010:	a1 1d       	adc	r26, r1
    1012:	62 1f       	adc	r22, r18
    1014:	83 9f       	mul	r24, r19
    1016:	a0 0d       	add	r26, r0
    1018:	61 1d       	adc	r22, r1
    101a:	22 1f       	adc	r18, r18
    101c:	74 9f       	mul	r23, r20
    101e:	33 27       	eor	r19, r19
    1020:	a0 0d       	add	r26, r0
    1022:	61 1d       	adc	r22, r1
    1024:	23 1f       	adc	r18, r19
    1026:	84 9f       	mul	r24, r20
    1028:	60 0d       	add	r22, r0
    102a:	21 1d       	adc	r18, r1
    102c:	82 2f       	mov	r24, r18
    102e:	76 2f       	mov	r23, r22
    1030:	6a 2f       	mov	r22, r26
    1032:	11 24       	eor	r1, r1
    1034:	9f 57       	subi	r25, 0x7F	; 127
    1036:	50 40       	sbci	r21, 0x00	; 0
    1038:	9a f0       	brmi	.+38     	; 0x1060 <__mulsf3_pse+0x88>
    103a:	f1 f0       	breq	.+60     	; 0x1078 <__mulsf3_pse+0xa0>
    103c:	88 23       	and	r24, r24
    103e:	4a f0       	brmi	.+18     	; 0x1052 <__mulsf3_pse+0x7a>
    1040:	ee 0f       	add	r30, r30
    1042:	ff 1f       	adc	r31, r31
    1044:	bb 1f       	adc	r27, r27
    1046:	66 1f       	adc	r22, r22
    1048:	77 1f       	adc	r23, r23
    104a:	88 1f       	adc	r24, r24
    104c:	91 50       	subi	r25, 0x01	; 1
    104e:	50 40       	sbci	r21, 0x00	; 0
    1050:	a9 f7       	brne	.-22     	; 0x103c <__mulsf3_pse+0x64>
    1052:	9e 3f       	cpi	r25, 0xFE	; 254
    1054:	51 05       	cpc	r21, r1
    1056:	80 f0       	brcs	.+32     	; 0x1078 <__mulsf3_pse+0xa0>
    1058:	0c 94 77 07 	jmp	0xeee	; 0xeee <__fp_inf>
    105c:	0c 94 d0 07 	jmp	0xfa0	; 0xfa0 <__fp_szero>
    1060:	5f 3f       	cpi	r21, 0xFF	; 255
    1062:	e4 f3       	brlt	.-8      	; 0x105c <__mulsf3_pse+0x84>
    1064:	98 3e       	cpi	r25, 0xE8	; 232
    1066:	d4 f3       	brlt	.-12     	; 0x105c <__mulsf3_pse+0x84>
    1068:	86 95       	lsr	r24
    106a:	77 95       	ror	r23
    106c:	67 95       	ror	r22
    106e:	b7 95       	ror	r27
    1070:	f7 95       	ror	r31
    1072:	e7 95       	ror	r30
    1074:	9f 5f       	subi	r25, 0xFF	; 255
    1076:	c1 f7       	brne	.-16     	; 0x1068 <__mulsf3_pse+0x90>
    1078:	fe 2b       	or	r31, r30
    107a:	88 0f       	add	r24, r24
    107c:	91 1d       	adc	r25, r1
    107e:	96 95       	lsr	r25
    1080:	87 95       	ror	r24
    1082:	97 f9       	bld	r25, 7
    1084:	08 95       	ret

00001086 <__divmodhi4>:
    1086:	97 fb       	bst	r25, 7
    1088:	07 2e       	mov	r0, r23
    108a:	16 f4       	brtc	.+4      	; 0x1090 <__divmodhi4+0xa>
    108c:	00 94       	com	r0
    108e:	07 d0       	rcall	.+14     	; 0x109e <__divmodhi4_neg1>
    1090:	77 fd       	sbrc	r23, 7
    1092:	09 d0       	rcall	.+18     	; 0x10a6 <__divmodhi4_neg2>
    1094:	0e 94 57 08 	call	0x10ae	; 0x10ae <__udivmodhi4>
    1098:	07 fc       	sbrc	r0, 7
    109a:	05 d0       	rcall	.+10     	; 0x10a6 <__divmodhi4_neg2>
    109c:	3e f4       	brtc	.+14     	; 0x10ac <__divmodhi4_exit>

0000109e <__divmodhi4_neg1>:
    109e:	90 95       	com	r25
    10a0:	81 95       	neg	r24
    10a2:	9f 4f       	sbci	r25, 0xFF	; 255
    10a4:	08 95       	ret

000010a6 <__divmodhi4_neg2>:
    10a6:	70 95       	com	r23
    10a8:	61 95       	neg	r22
    10aa:	7f 4f       	sbci	r23, 0xFF	; 255

000010ac <__divmodhi4_exit>:
    10ac:	08 95       	ret

000010ae <__udivmodhi4>:
    10ae:	aa 1b       	sub	r26, r26
    10b0:	bb 1b       	sub	r27, r27
    10b2:	51 e1       	ldi	r21, 0x11	; 17
    10b4:	07 c0       	rjmp	.+14     	; 0x10c4 <__udivmodhi4_ep>

000010b6 <__udivmodhi4_loop>:
    10b6:	aa 1f       	adc	r26, r26
    10b8:	bb 1f       	adc	r27, r27
    10ba:	a6 17       	cp	r26, r22
    10bc:	b7 07       	cpc	r27, r23
    10be:	10 f0       	brcs	.+4      	; 0x10c4 <__udivmodhi4_ep>
    10c0:	a6 1b       	sub	r26, r22
    10c2:	b7 0b       	sbc	r27, r23

000010c4 <__udivmodhi4_ep>:
    10c4:	88 1f       	adc	r24, r24
    10c6:	99 1f       	adc	r25, r25
    10c8:	5a 95       	dec	r21
    10ca:	a9 f7       	brne	.-22     	; 0x10b6 <__udivmodhi4_loop>
    10cc:	80 95       	com	r24
    10ce:	90 95       	com	r25
    10d0:	bc 01       	movw	r22, r24
    10d2:	cd 01       	movw	r24, r26
    10d4:	08 95       	ret

000010d6 <__tablejump2__>:
    10d6:	ee 0f       	add	r30, r30
    10d8:	ff 1f       	adc	r31, r31
    10da:	05 90       	lpm	r0, Z+
    10dc:	f4 91       	lpm	r31, Z
    10de:	e0 2d       	mov	r30, r0
    10e0:	09 94       	ijmp

000010e2 <_exit>:
    10e2:	f8 94       	cli

000010e4 <__stop_program>:
    10e4:	ff cf       	rjmp	.-2      	; 0x10e4 <__stop_program>
